/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProfileRequest{}

// CreateProfileRequest struct for CreateProfileRequest
type CreateProfileRequest struct {
	// The display name of the profile. Must be unique.
	Nickname string `json:"nickname"`
	// The description of the created profile.
	Description *string `json:"description,omitempty"`
}

type _CreateProfileRequest CreateProfileRequest

// NewCreateProfileRequest instantiates a new CreateProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProfileRequest(nickname string) *CreateProfileRequest {
	this := CreateProfileRequest{}
	this.Nickname = nickname
	return &this
}

// NewCreateProfileRequestWithDefaults instantiates a new CreateProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProfileRequestWithDefaults() *CreateProfileRequest {
	this := CreateProfileRequest{}
	return &this
}

// GetNickname returns the Nickname field value
func (o *CreateProfileRequest) GetNickname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value
// and a boolean to check if the value has been set.
func (o *CreateProfileRequest) GetNicknameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nickname, true
}

// SetNickname sets field value
func (o *CreateProfileRequest) SetNickname(v string) {
	o.Nickname = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProfileRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProfileRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProfileRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProfileRequest) SetDescription(v string) {
	o.Description = &v
}

func (o CreateProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nickname"] = o.Nickname
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *CreateProfileRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nickname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProfileRequest := _CreateProfileRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProfileRequest)

	if err != nil {
		return err
	}

	*o = CreateProfileRequest(varCreateProfileRequest)

	return err
}

type NullableCreateProfileRequest struct {
	value *CreateProfileRequest
	isSet bool
}

func (v NullableCreateProfileRequest) Get() *CreateProfileRequest {
	return v.value
}

func (v *NullableCreateProfileRequest) Set(val *CreateProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProfileRequest(val *CreateProfileRequest) *NullableCreateProfileRequest {
	return &NullableCreateProfileRequest{value: val, isSet: true}
}

func (v NullableCreateProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


