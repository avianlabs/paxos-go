/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"time"
)

// checks if the InstitutionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstitutionDetails{}

// InstitutionDetails struct for InstitutionDetails
type InstitutionDetails struct {
	SanctionsVerificationStatus *IdentityStatus `json:"sanctions_verification_status,omitempty"`
	Name *string `json:"name,omitempty" validate:"regexp=^[0-9A-Za-z \\/?:().,&'+-]+$"`
	BusinessAddress *IdentityMailingAddress `json:"business_address,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	Email *string `json:"email,omitempty"`
	InstitutionType *InstitutionType `json:"institution_type,omitempty"`
	InstitutionSubType *InstitutionSubType `json:"institution_sub_type,omitempty"`
	CipId *string `json:"cip_id,omitempty" validate:"regexp=^[0-9A-Za-z \\/?:().,&'+-]+$"`
	CipIdType *InstitutionCIPIDType `json:"cip_id_type,omitempty"`
	// Allowed in create and update. Must be an ISO 3166-1 alpha 3 code.
	CipIdCountry *string `json:"cip_id_country,omitempty"`
	GovtRegistrationDate *time.Time `json:"govt_registration_date,omitempty"`
	IncorporationAddress *IdentityMailingAddress `json:"incorporation_address,omitempty"`
	RegulationStatus *RegulationStatus `json:"regulation_status,omitempty"`
	TradingType *TradingType `json:"trading_type,omitempty"`
	ListedExchange *string `json:"listed_exchange,omitempty"`
	// Ticker symbol of the institution if publicly traded or ticker symbol of the parent institution.
	TickerSymbol *string `json:"ticker_symbol,omitempty"`
	ParentInstitutionName *string `json:"parent_institution_name,omitempty"`
	RegulatorName *string `json:"regulator_name,omitempty"`
	RegulatorJurisdiction *string `json:"regulator_jurisdiction,omitempty"`
	RegulatorRegisterNumber *string `json:"regulator_register_number,omitempty"`
	DocumentVerificationStatus *IdentityStatus `json:"document_verification_status,omitempty"`
	AdditionalScreeningStatus *IdentityStatus `json:"additional_screening_status,omitempty"`
	DoingBusinessAs *string `json:"doing_business_as,omitempty"`
	BusinessDescription *string `json:"business_description,omitempty"`
}

// NewInstitutionDetails instantiates a new InstitutionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstitutionDetails() *InstitutionDetails {
	this := InstitutionDetails{}
	return &this
}

// NewInstitutionDetailsWithDefaults instantiates a new InstitutionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstitutionDetailsWithDefaults() *InstitutionDetails {
	this := InstitutionDetails{}
	return &this
}

// GetSanctionsVerificationStatus returns the SanctionsVerificationStatus field value if set, zero value otherwise.
func (o *InstitutionDetails) GetSanctionsVerificationStatus() IdentityStatus {
	if o == nil || IsNil(o.SanctionsVerificationStatus) {
		var ret IdentityStatus
		return ret
	}
	return *o.SanctionsVerificationStatus
}

// GetSanctionsVerificationStatusOk returns a tuple with the SanctionsVerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetSanctionsVerificationStatusOk() (*IdentityStatus, bool) {
	if o == nil || IsNil(o.SanctionsVerificationStatus) {
		return nil, false
	}
	return o.SanctionsVerificationStatus, true
}

// HasSanctionsVerificationStatus returns a boolean if a field has been set.
func (o *InstitutionDetails) HasSanctionsVerificationStatus() bool {
	if o != nil && !IsNil(o.SanctionsVerificationStatus) {
		return true
	}

	return false
}

// SetSanctionsVerificationStatus gets a reference to the given IdentityStatus and assigns it to the SanctionsVerificationStatus field.
func (o *InstitutionDetails) SetSanctionsVerificationStatus(v IdentityStatus) {
	o.SanctionsVerificationStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstitutionDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstitutionDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstitutionDetails) SetName(v string) {
	o.Name = &v
}

// GetBusinessAddress returns the BusinessAddress field value if set, zero value otherwise.
func (o *InstitutionDetails) GetBusinessAddress() IdentityMailingAddress {
	if o == nil || IsNil(o.BusinessAddress) {
		var ret IdentityMailingAddress
		return ret
	}
	return *o.BusinessAddress
}

// GetBusinessAddressOk returns a tuple with the BusinessAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetBusinessAddressOk() (*IdentityMailingAddress, bool) {
	if o == nil || IsNil(o.BusinessAddress) {
		return nil, false
	}
	return o.BusinessAddress, true
}

// HasBusinessAddress returns a boolean if a field has been set.
func (o *InstitutionDetails) HasBusinessAddress() bool {
	if o != nil && !IsNil(o.BusinessAddress) {
		return true
	}

	return false
}

// SetBusinessAddress gets a reference to the given IdentityMailingAddress and assigns it to the BusinessAddress field.
func (o *InstitutionDetails) SetBusinessAddress(v IdentityMailingAddress) {
	o.BusinessAddress = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *InstitutionDetails) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *InstitutionDetails) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *InstitutionDetails) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InstitutionDetails) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InstitutionDetails) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *InstitutionDetails) SetEmail(v string) {
	o.Email = &v
}

// GetInstitutionType returns the InstitutionType field value if set, zero value otherwise.
func (o *InstitutionDetails) GetInstitutionType() InstitutionType {
	if o == nil || IsNil(o.InstitutionType) {
		var ret InstitutionType
		return ret
	}
	return *o.InstitutionType
}

// GetInstitutionTypeOk returns a tuple with the InstitutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetInstitutionTypeOk() (*InstitutionType, bool) {
	if o == nil || IsNil(o.InstitutionType) {
		return nil, false
	}
	return o.InstitutionType, true
}

// HasInstitutionType returns a boolean if a field has been set.
func (o *InstitutionDetails) HasInstitutionType() bool {
	if o != nil && !IsNil(o.InstitutionType) {
		return true
	}

	return false
}

// SetInstitutionType gets a reference to the given InstitutionType and assigns it to the InstitutionType field.
func (o *InstitutionDetails) SetInstitutionType(v InstitutionType) {
	o.InstitutionType = &v
}

// GetInstitutionSubType returns the InstitutionSubType field value if set, zero value otherwise.
func (o *InstitutionDetails) GetInstitutionSubType() InstitutionSubType {
	if o == nil || IsNil(o.InstitutionSubType) {
		var ret InstitutionSubType
		return ret
	}
	return *o.InstitutionSubType
}

// GetInstitutionSubTypeOk returns a tuple with the InstitutionSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetInstitutionSubTypeOk() (*InstitutionSubType, bool) {
	if o == nil || IsNil(o.InstitutionSubType) {
		return nil, false
	}
	return o.InstitutionSubType, true
}

// HasInstitutionSubType returns a boolean if a field has been set.
func (o *InstitutionDetails) HasInstitutionSubType() bool {
	if o != nil && !IsNil(o.InstitutionSubType) {
		return true
	}

	return false
}

// SetInstitutionSubType gets a reference to the given InstitutionSubType and assigns it to the InstitutionSubType field.
func (o *InstitutionDetails) SetInstitutionSubType(v InstitutionSubType) {
	o.InstitutionSubType = &v
}

// GetCipId returns the CipId field value if set, zero value otherwise.
func (o *InstitutionDetails) GetCipId() string {
	if o == nil || IsNil(o.CipId) {
		var ret string
		return ret
	}
	return *o.CipId
}

// GetCipIdOk returns a tuple with the CipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetCipIdOk() (*string, bool) {
	if o == nil || IsNil(o.CipId) {
		return nil, false
	}
	return o.CipId, true
}

// HasCipId returns a boolean if a field has been set.
func (o *InstitutionDetails) HasCipId() bool {
	if o != nil && !IsNil(o.CipId) {
		return true
	}

	return false
}

// SetCipId gets a reference to the given string and assigns it to the CipId field.
func (o *InstitutionDetails) SetCipId(v string) {
	o.CipId = &v
}

// GetCipIdType returns the CipIdType field value if set, zero value otherwise.
func (o *InstitutionDetails) GetCipIdType() InstitutionCIPIDType {
	if o == nil || IsNil(o.CipIdType) {
		var ret InstitutionCIPIDType
		return ret
	}
	return *o.CipIdType
}

// GetCipIdTypeOk returns a tuple with the CipIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetCipIdTypeOk() (*InstitutionCIPIDType, bool) {
	if o == nil || IsNil(o.CipIdType) {
		return nil, false
	}
	return o.CipIdType, true
}

// HasCipIdType returns a boolean if a field has been set.
func (o *InstitutionDetails) HasCipIdType() bool {
	if o != nil && !IsNil(o.CipIdType) {
		return true
	}

	return false
}

// SetCipIdType gets a reference to the given InstitutionCIPIDType and assigns it to the CipIdType field.
func (o *InstitutionDetails) SetCipIdType(v InstitutionCIPIDType) {
	o.CipIdType = &v
}

// GetCipIdCountry returns the CipIdCountry field value if set, zero value otherwise.
func (o *InstitutionDetails) GetCipIdCountry() string {
	if o == nil || IsNil(o.CipIdCountry) {
		var ret string
		return ret
	}
	return *o.CipIdCountry
}

// GetCipIdCountryOk returns a tuple with the CipIdCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetCipIdCountryOk() (*string, bool) {
	if o == nil || IsNil(o.CipIdCountry) {
		return nil, false
	}
	return o.CipIdCountry, true
}

// HasCipIdCountry returns a boolean if a field has been set.
func (o *InstitutionDetails) HasCipIdCountry() bool {
	if o != nil && !IsNil(o.CipIdCountry) {
		return true
	}

	return false
}

// SetCipIdCountry gets a reference to the given string and assigns it to the CipIdCountry field.
func (o *InstitutionDetails) SetCipIdCountry(v string) {
	o.CipIdCountry = &v
}

// GetGovtRegistrationDate returns the GovtRegistrationDate field value if set, zero value otherwise.
func (o *InstitutionDetails) GetGovtRegistrationDate() time.Time {
	if o == nil || IsNil(o.GovtRegistrationDate) {
		var ret time.Time
		return ret
	}
	return *o.GovtRegistrationDate
}

// GetGovtRegistrationDateOk returns a tuple with the GovtRegistrationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetGovtRegistrationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.GovtRegistrationDate) {
		return nil, false
	}
	return o.GovtRegistrationDate, true
}

// HasGovtRegistrationDate returns a boolean if a field has been set.
func (o *InstitutionDetails) HasGovtRegistrationDate() bool {
	if o != nil && !IsNil(o.GovtRegistrationDate) {
		return true
	}

	return false
}

// SetGovtRegistrationDate gets a reference to the given time.Time and assigns it to the GovtRegistrationDate field.
func (o *InstitutionDetails) SetGovtRegistrationDate(v time.Time) {
	o.GovtRegistrationDate = &v
}

// GetIncorporationAddress returns the IncorporationAddress field value if set, zero value otherwise.
func (o *InstitutionDetails) GetIncorporationAddress() IdentityMailingAddress {
	if o == nil || IsNil(o.IncorporationAddress) {
		var ret IdentityMailingAddress
		return ret
	}
	return *o.IncorporationAddress
}

// GetIncorporationAddressOk returns a tuple with the IncorporationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetIncorporationAddressOk() (*IdentityMailingAddress, bool) {
	if o == nil || IsNil(o.IncorporationAddress) {
		return nil, false
	}
	return o.IncorporationAddress, true
}

// HasIncorporationAddress returns a boolean if a field has been set.
func (o *InstitutionDetails) HasIncorporationAddress() bool {
	if o != nil && !IsNil(o.IncorporationAddress) {
		return true
	}

	return false
}

// SetIncorporationAddress gets a reference to the given IdentityMailingAddress and assigns it to the IncorporationAddress field.
func (o *InstitutionDetails) SetIncorporationAddress(v IdentityMailingAddress) {
	o.IncorporationAddress = &v
}

// GetRegulationStatus returns the RegulationStatus field value if set, zero value otherwise.
func (o *InstitutionDetails) GetRegulationStatus() RegulationStatus {
	if o == nil || IsNil(o.RegulationStatus) {
		var ret RegulationStatus
		return ret
	}
	return *o.RegulationStatus
}

// GetRegulationStatusOk returns a tuple with the RegulationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetRegulationStatusOk() (*RegulationStatus, bool) {
	if o == nil || IsNil(o.RegulationStatus) {
		return nil, false
	}
	return o.RegulationStatus, true
}

// HasRegulationStatus returns a boolean if a field has been set.
func (o *InstitutionDetails) HasRegulationStatus() bool {
	if o != nil && !IsNil(o.RegulationStatus) {
		return true
	}

	return false
}

// SetRegulationStatus gets a reference to the given RegulationStatus and assigns it to the RegulationStatus field.
func (o *InstitutionDetails) SetRegulationStatus(v RegulationStatus) {
	o.RegulationStatus = &v
}

// GetTradingType returns the TradingType field value if set, zero value otherwise.
func (o *InstitutionDetails) GetTradingType() TradingType {
	if o == nil || IsNil(o.TradingType) {
		var ret TradingType
		return ret
	}
	return *o.TradingType
}

// GetTradingTypeOk returns a tuple with the TradingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetTradingTypeOk() (*TradingType, bool) {
	if o == nil || IsNil(o.TradingType) {
		return nil, false
	}
	return o.TradingType, true
}

// HasTradingType returns a boolean if a field has been set.
func (o *InstitutionDetails) HasTradingType() bool {
	if o != nil && !IsNil(o.TradingType) {
		return true
	}

	return false
}

// SetTradingType gets a reference to the given TradingType and assigns it to the TradingType field.
func (o *InstitutionDetails) SetTradingType(v TradingType) {
	o.TradingType = &v
}

// GetListedExchange returns the ListedExchange field value if set, zero value otherwise.
func (o *InstitutionDetails) GetListedExchange() string {
	if o == nil || IsNil(o.ListedExchange) {
		var ret string
		return ret
	}
	return *o.ListedExchange
}

// GetListedExchangeOk returns a tuple with the ListedExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetListedExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.ListedExchange) {
		return nil, false
	}
	return o.ListedExchange, true
}

// HasListedExchange returns a boolean if a field has been set.
func (o *InstitutionDetails) HasListedExchange() bool {
	if o != nil && !IsNil(o.ListedExchange) {
		return true
	}

	return false
}

// SetListedExchange gets a reference to the given string and assigns it to the ListedExchange field.
func (o *InstitutionDetails) SetListedExchange(v string) {
	o.ListedExchange = &v
}

// GetTickerSymbol returns the TickerSymbol field value if set, zero value otherwise.
func (o *InstitutionDetails) GetTickerSymbol() string {
	if o == nil || IsNil(o.TickerSymbol) {
		var ret string
		return ret
	}
	return *o.TickerSymbol
}

// GetTickerSymbolOk returns a tuple with the TickerSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetTickerSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.TickerSymbol) {
		return nil, false
	}
	return o.TickerSymbol, true
}

// HasTickerSymbol returns a boolean if a field has been set.
func (o *InstitutionDetails) HasTickerSymbol() bool {
	if o != nil && !IsNil(o.TickerSymbol) {
		return true
	}

	return false
}

// SetTickerSymbol gets a reference to the given string and assigns it to the TickerSymbol field.
func (o *InstitutionDetails) SetTickerSymbol(v string) {
	o.TickerSymbol = &v
}

// GetParentInstitutionName returns the ParentInstitutionName field value if set, zero value otherwise.
func (o *InstitutionDetails) GetParentInstitutionName() string {
	if o == nil || IsNil(o.ParentInstitutionName) {
		var ret string
		return ret
	}
	return *o.ParentInstitutionName
}

// GetParentInstitutionNameOk returns a tuple with the ParentInstitutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetParentInstitutionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentInstitutionName) {
		return nil, false
	}
	return o.ParentInstitutionName, true
}

// HasParentInstitutionName returns a boolean if a field has been set.
func (o *InstitutionDetails) HasParentInstitutionName() bool {
	if o != nil && !IsNil(o.ParentInstitutionName) {
		return true
	}

	return false
}

// SetParentInstitutionName gets a reference to the given string and assigns it to the ParentInstitutionName field.
func (o *InstitutionDetails) SetParentInstitutionName(v string) {
	o.ParentInstitutionName = &v
}

// GetRegulatorName returns the RegulatorName field value if set, zero value otherwise.
func (o *InstitutionDetails) GetRegulatorName() string {
	if o == nil || IsNil(o.RegulatorName) {
		var ret string
		return ret
	}
	return *o.RegulatorName
}

// GetRegulatorNameOk returns a tuple with the RegulatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetRegulatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegulatorName) {
		return nil, false
	}
	return o.RegulatorName, true
}

// HasRegulatorName returns a boolean if a field has been set.
func (o *InstitutionDetails) HasRegulatorName() bool {
	if o != nil && !IsNil(o.RegulatorName) {
		return true
	}

	return false
}

// SetRegulatorName gets a reference to the given string and assigns it to the RegulatorName field.
func (o *InstitutionDetails) SetRegulatorName(v string) {
	o.RegulatorName = &v
}

// GetRegulatorJurisdiction returns the RegulatorJurisdiction field value if set, zero value otherwise.
func (o *InstitutionDetails) GetRegulatorJurisdiction() string {
	if o == nil || IsNil(o.RegulatorJurisdiction) {
		var ret string
		return ret
	}
	return *o.RegulatorJurisdiction
}

// GetRegulatorJurisdictionOk returns a tuple with the RegulatorJurisdiction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetRegulatorJurisdictionOk() (*string, bool) {
	if o == nil || IsNil(o.RegulatorJurisdiction) {
		return nil, false
	}
	return o.RegulatorJurisdiction, true
}

// HasRegulatorJurisdiction returns a boolean if a field has been set.
func (o *InstitutionDetails) HasRegulatorJurisdiction() bool {
	if o != nil && !IsNil(o.RegulatorJurisdiction) {
		return true
	}

	return false
}

// SetRegulatorJurisdiction gets a reference to the given string and assigns it to the RegulatorJurisdiction field.
func (o *InstitutionDetails) SetRegulatorJurisdiction(v string) {
	o.RegulatorJurisdiction = &v
}

// GetRegulatorRegisterNumber returns the RegulatorRegisterNumber field value if set, zero value otherwise.
func (o *InstitutionDetails) GetRegulatorRegisterNumber() string {
	if o == nil || IsNil(o.RegulatorRegisterNumber) {
		var ret string
		return ret
	}
	return *o.RegulatorRegisterNumber
}

// GetRegulatorRegisterNumberOk returns a tuple with the RegulatorRegisterNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetRegulatorRegisterNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RegulatorRegisterNumber) {
		return nil, false
	}
	return o.RegulatorRegisterNumber, true
}

// HasRegulatorRegisterNumber returns a boolean if a field has been set.
func (o *InstitutionDetails) HasRegulatorRegisterNumber() bool {
	if o != nil && !IsNil(o.RegulatorRegisterNumber) {
		return true
	}

	return false
}

// SetRegulatorRegisterNumber gets a reference to the given string and assigns it to the RegulatorRegisterNumber field.
func (o *InstitutionDetails) SetRegulatorRegisterNumber(v string) {
	o.RegulatorRegisterNumber = &v
}

// GetDocumentVerificationStatus returns the DocumentVerificationStatus field value if set, zero value otherwise.
func (o *InstitutionDetails) GetDocumentVerificationStatus() IdentityStatus {
	if o == nil || IsNil(o.DocumentVerificationStatus) {
		var ret IdentityStatus
		return ret
	}
	return *o.DocumentVerificationStatus
}

// GetDocumentVerificationStatusOk returns a tuple with the DocumentVerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetDocumentVerificationStatusOk() (*IdentityStatus, bool) {
	if o == nil || IsNil(o.DocumentVerificationStatus) {
		return nil, false
	}
	return o.DocumentVerificationStatus, true
}

// HasDocumentVerificationStatus returns a boolean if a field has been set.
func (o *InstitutionDetails) HasDocumentVerificationStatus() bool {
	if o != nil && !IsNil(o.DocumentVerificationStatus) {
		return true
	}

	return false
}

// SetDocumentVerificationStatus gets a reference to the given IdentityStatus and assigns it to the DocumentVerificationStatus field.
func (o *InstitutionDetails) SetDocumentVerificationStatus(v IdentityStatus) {
	o.DocumentVerificationStatus = &v
}

// GetAdditionalScreeningStatus returns the AdditionalScreeningStatus field value if set, zero value otherwise.
func (o *InstitutionDetails) GetAdditionalScreeningStatus() IdentityStatus {
	if o == nil || IsNil(o.AdditionalScreeningStatus) {
		var ret IdentityStatus
		return ret
	}
	return *o.AdditionalScreeningStatus
}

// GetAdditionalScreeningStatusOk returns a tuple with the AdditionalScreeningStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetAdditionalScreeningStatusOk() (*IdentityStatus, bool) {
	if o == nil || IsNil(o.AdditionalScreeningStatus) {
		return nil, false
	}
	return o.AdditionalScreeningStatus, true
}

// HasAdditionalScreeningStatus returns a boolean if a field has been set.
func (o *InstitutionDetails) HasAdditionalScreeningStatus() bool {
	if o != nil && !IsNil(o.AdditionalScreeningStatus) {
		return true
	}

	return false
}

// SetAdditionalScreeningStatus gets a reference to the given IdentityStatus and assigns it to the AdditionalScreeningStatus field.
func (o *InstitutionDetails) SetAdditionalScreeningStatus(v IdentityStatus) {
	o.AdditionalScreeningStatus = &v
}

// GetDoingBusinessAs returns the DoingBusinessAs field value if set, zero value otherwise.
func (o *InstitutionDetails) GetDoingBusinessAs() string {
	if o == nil || IsNil(o.DoingBusinessAs) {
		var ret string
		return ret
	}
	return *o.DoingBusinessAs
}

// GetDoingBusinessAsOk returns a tuple with the DoingBusinessAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetDoingBusinessAsOk() (*string, bool) {
	if o == nil || IsNil(o.DoingBusinessAs) {
		return nil, false
	}
	return o.DoingBusinessAs, true
}

// HasDoingBusinessAs returns a boolean if a field has been set.
func (o *InstitutionDetails) HasDoingBusinessAs() bool {
	if o != nil && !IsNil(o.DoingBusinessAs) {
		return true
	}

	return false
}

// SetDoingBusinessAs gets a reference to the given string and assigns it to the DoingBusinessAs field.
func (o *InstitutionDetails) SetDoingBusinessAs(v string) {
	o.DoingBusinessAs = &v
}

// GetBusinessDescription returns the BusinessDescription field value if set, zero value otherwise.
func (o *InstitutionDetails) GetBusinessDescription() string {
	if o == nil || IsNil(o.BusinessDescription) {
		var ret string
		return ret
	}
	return *o.BusinessDescription
}

// GetBusinessDescriptionOk returns a tuple with the BusinessDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstitutionDetails) GetBusinessDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessDescription) {
		return nil, false
	}
	return o.BusinessDescription, true
}

// HasBusinessDescription returns a boolean if a field has been set.
func (o *InstitutionDetails) HasBusinessDescription() bool {
	if o != nil && !IsNil(o.BusinessDescription) {
		return true
	}

	return false
}

// SetBusinessDescription gets a reference to the given string and assigns it to the BusinessDescription field.
func (o *InstitutionDetails) SetBusinessDescription(v string) {
	o.BusinessDescription = &v
}

func (o InstitutionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstitutionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SanctionsVerificationStatus) {
		toSerialize["sanctions_verification_status"] = o.SanctionsVerificationStatus
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BusinessAddress) {
		toSerialize["business_address"] = o.BusinessAddress
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.InstitutionType) {
		toSerialize["institution_type"] = o.InstitutionType
	}
	if !IsNil(o.InstitutionSubType) {
		toSerialize["institution_sub_type"] = o.InstitutionSubType
	}
	if !IsNil(o.CipId) {
		toSerialize["cip_id"] = o.CipId
	}
	if !IsNil(o.CipIdType) {
		toSerialize["cip_id_type"] = o.CipIdType
	}
	if !IsNil(o.CipIdCountry) {
		toSerialize["cip_id_country"] = o.CipIdCountry
	}
	if !IsNil(o.GovtRegistrationDate) {
		toSerialize["govt_registration_date"] = o.GovtRegistrationDate
	}
	if !IsNil(o.IncorporationAddress) {
		toSerialize["incorporation_address"] = o.IncorporationAddress
	}
	if !IsNil(o.RegulationStatus) {
		toSerialize["regulation_status"] = o.RegulationStatus
	}
	if !IsNil(o.TradingType) {
		toSerialize["trading_type"] = o.TradingType
	}
	if !IsNil(o.ListedExchange) {
		toSerialize["listed_exchange"] = o.ListedExchange
	}
	if !IsNil(o.TickerSymbol) {
		toSerialize["ticker_symbol"] = o.TickerSymbol
	}
	if !IsNil(o.ParentInstitutionName) {
		toSerialize["parent_institution_name"] = o.ParentInstitutionName
	}
	if !IsNil(o.RegulatorName) {
		toSerialize["regulator_name"] = o.RegulatorName
	}
	if !IsNil(o.RegulatorJurisdiction) {
		toSerialize["regulator_jurisdiction"] = o.RegulatorJurisdiction
	}
	if !IsNil(o.RegulatorRegisterNumber) {
		toSerialize["regulator_register_number"] = o.RegulatorRegisterNumber
	}
	if !IsNil(o.DocumentVerificationStatus) {
		toSerialize["document_verification_status"] = o.DocumentVerificationStatus
	}
	if !IsNil(o.AdditionalScreeningStatus) {
		toSerialize["additional_screening_status"] = o.AdditionalScreeningStatus
	}
	if !IsNil(o.DoingBusinessAs) {
		toSerialize["doing_business_as"] = o.DoingBusinessAs
	}
	if !IsNil(o.BusinessDescription) {
		toSerialize["business_description"] = o.BusinessDescription
	}
	return toSerialize, nil
}

type NullableInstitutionDetails struct {
	value *InstitutionDetails
	isSet bool
}

func (v NullableInstitutionDetails) Get() *InstitutionDetails {
	return v.value
}

func (v *NullableInstitutionDetails) Set(val *InstitutionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableInstitutionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableInstitutionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstitutionDetails(val *InstitutionDetails) *NullableInstitutionDetails {
	return &NullableInstitutionDetails{value: val, isSet: true}
}

func (v NullableInstitutionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstitutionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


