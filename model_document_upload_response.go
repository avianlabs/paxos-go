/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the DocumentUploadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentUploadResponse{}

// DocumentUploadResponse struct for DocumentUploadResponse
type DocumentUploadResponse struct {
	// The id assigned to the file.
	FileId *string `json:"file_id,omitempty"`
	// The file name.
	Name *string `json:"name,omitempty"`
	// The URI where we expect the file to be uploaded into.
	UploadUrl *string `json:"upload_url,omitempty"`
}

// NewDocumentUploadResponse instantiates a new DocumentUploadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentUploadResponse() *DocumentUploadResponse {
	this := DocumentUploadResponse{}
	return &this
}

// NewDocumentUploadResponseWithDefaults instantiates a new DocumentUploadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentUploadResponseWithDefaults() *DocumentUploadResponse {
	this := DocumentUploadResponse{}
	return &this
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *DocumentUploadResponse) GetFileId() string {
	if o == nil || IsNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentUploadResponse) GetFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *DocumentUploadResponse) HasFileId() bool {
	if o != nil && !IsNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *DocumentUploadResponse) SetFileId(v string) {
	o.FileId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DocumentUploadResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentUploadResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DocumentUploadResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DocumentUploadResponse) SetName(v string) {
	o.Name = &v
}

// GetUploadUrl returns the UploadUrl field value if set, zero value otherwise.
func (o *DocumentUploadResponse) GetUploadUrl() string {
	if o == nil || IsNil(o.UploadUrl) {
		var ret string
		return ret
	}
	return *o.UploadUrl
}

// GetUploadUrlOk returns a tuple with the UploadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentUploadResponse) GetUploadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UploadUrl) {
		return nil, false
	}
	return o.UploadUrl, true
}

// HasUploadUrl returns a boolean if a field has been set.
func (o *DocumentUploadResponse) HasUploadUrl() bool {
	if o != nil && !IsNil(o.UploadUrl) {
		return true
	}

	return false
}

// SetUploadUrl gets a reference to the given string and assigns it to the UploadUrl field.
func (o *DocumentUploadResponse) SetUploadUrl(v string) {
	o.UploadUrl = &v
}

func (o DocumentUploadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentUploadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileId) {
		toSerialize["file_id"] = o.FileId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UploadUrl) {
		toSerialize["upload_url"] = o.UploadUrl
	}
	return toSerialize, nil
}

type NullableDocumentUploadResponse struct {
	value *DocumentUploadResponse
	isSet bool
}

func (v NullableDocumentUploadResponse) Get() *DocumentUploadResponse {
	return v.value
}

func (v *NullableDocumentUploadResponse) Set(val *DocumentUploadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentUploadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentUploadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentUploadResponse(val *DocumentUploadResponse) *NullableDocumentUploadResponse {
	return &NullableDocumentUploadResponse{value: val, isSet: true}
}

func (v NullableDocumentUploadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentUploadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


