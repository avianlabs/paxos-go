/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the AccountMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountMember{}

// AccountMember struct for AccountMember
type AccountMember struct {
	IdentityId *string `json:"identity_id,omitempty"`
	Type *AccountMemberAccountRoleType `json:"type,omitempty"`
	Roles []AccountMemberAccountRoleType `json:"roles,omitempty"`
	// Account member ID. Note: This field is auto-generated. Specifying an ID when creating an account member is a client error.
	Id *string `json:"id,omitempty"`
}

// NewAccountMember instantiates a new AccountMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMember() *AccountMember {
	this := AccountMember{}
	return &this
}

// NewAccountMemberWithDefaults instantiates a new AccountMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMemberWithDefaults() *AccountMember {
	this := AccountMember{}
	return &this
}

// GetIdentityId returns the IdentityId field value if set, zero value otherwise.
func (o *AccountMember) GetIdentityId() string {
	if o == nil || IsNil(o.IdentityId) {
		var ret string
		return ret
	}
	return *o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMember) GetIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityId) {
		return nil, false
	}
	return o.IdentityId, true
}

// HasIdentityId returns a boolean if a field has been set.
func (o *AccountMember) HasIdentityId() bool {
	if o != nil && !IsNil(o.IdentityId) {
		return true
	}

	return false
}

// SetIdentityId gets a reference to the given string and assigns it to the IdentityId field.
func (o *AccountMember) SetIdentityId(v string) {
	o.IdentityId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccountMember) GetType() AccountMemberAccountRoleType {
	if o == nil || IsNil(o.Type) {
		var ret AccountMemberAccountRoleType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMember) GetTypeOk() (*AccountMemberAccountRoleType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccountMember) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AccountMemberAccountRoleType and assigns it to the Type field.
func (o *AccountMember) SetType(v AccountMemberAccountRoleType) {
	o.Type = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AccountMember) GetRoles() []AccountMemberAccountRoleType {
	if o == nil || IsNil(o.Roles) {
		var ret []AccountMemberAccountRoleType
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMember) GetRolesOk() ([]AccountMemberAccountRoleType, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AccountMember) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []AccountMemberAccountRoleType and assigns it to the Roles field.
func (o *AccountMember) SetRoles(v []AccountMemberAccountRoleType) {
	o.Roles = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountMember) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMember) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountMember) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountMember) SetId(v string) {
	o.Id = &v
}

func (o AccountMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityId) {
		toSerialize["identity_id"] = o.IdentityId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableAccountMember struct {
	value *AccountMember
	isSet bool
}

func (v NullableAccountMember) Get() *AccountMember {
	return v.value
}

func (v *NullableAccountMember) Set(val *AccountMember) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMember) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMember(val *AccountMember) *NullableAccountMember {
	return &NullableAccountMember{value: val, isSet: true}
}

func (v NullableAccountMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


