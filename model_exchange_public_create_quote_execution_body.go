/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"fmt"
)

// checks if the ExchangePublicCreateQuoteExecutionBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangePublicCreateQuoteExecutionBody{}

// ExchangePublicCreateQuoteExecutionBody struct for ExchangePublicCreateQuoteExecutionBody
type ExchangePublicCreateQuoteExecutionBody struct {
	// The ID of the held Quote for buying or selling some asset.
	QuoteId string `json:"quote_id"`
	// A unique identifier for the quote execution (for idempotence).
	RefId *string `json:"ref_id,omitempty"`
	// The amount of the base asset (crypto) to buy or sell using the specified quote. The maximum precision is 8 decimals.
	BaseAmount *string `json:"base_amount,omitempty" validate:"regexp=^[0-9]*\\\\.?[0-9]+$"`
	// The amount of the quote asset (fiat) to spend or acquire using the specified quote. The maximum precision is 2 decimals.
	QuoteAmount *string `json:"quote_amount,omitempty" validate:"regexp=^[0-9]*\\\\.?[0-9]+$"`
	// Metadata to store on the quote execution. Up to 6 key/value pairs may be stored, with each key and value at most 100 characters.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// The end user that requests the quote execution.
	IdentityId *string `json:"identity_id,omitempty"`
	// The account under which this quote execution is placed. The provided identity must be allowed to trade on behalf of this account.
	AccountId *string `json:"account_id,omitempty"`
	// The ID of the profile under which to deposit the funds.
	RecipientProfileId *string `json:"recipient_profile_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExchangePublicCreateQuoteExecutionBody ExchangePublicCreateQuoteExecutionBody

// NewExchangePublicCreateQuoteExecutionBody instantiates a new ExchangePublicCreateQuoteExecutionBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangePublicCreateQuoteExecutionBody(quoteId string) *ExchangePublicCreateQuoteExecutionBody {
	this := ExchangePublicCreateQuoteExecutionBody{}
	this.QuoteId = quoteId
	return &this
}

// NewExchangePublicCreateQuoteExecutionBodyWithDefaults instantiates a new ExchangePublicCreateQuoteExecutionBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangePublicCreateQuoteExecutionBodyWithDefaults() *ExchangePublicCreateQuoteExecutionBody {
	this := ExchangePublicCreateQuoteExecutionBody{}
	return &this
}

// GetQuoteId returns the QuoteId field value
func (o *ExchangePublicCreateQuoteExecutionBody) GetQuoteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *ExchangePublicCreateQuoteExecutionBody) SetQuoteId(v string) {
	o.QuoteId = v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetRefId(v string) {
	o.RefId = &v
}

// GetBaseAmount returns the BaseAmount field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetBaseAmount() string {
	if o == nil || IsNil(o.BaseAmount) {
		var ret string
		return ret
	}
	return *o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetBaseAmountOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAmount) {
		return nil, false
	}
	return o.BaseAmount, true
}

// HasBaseAmount returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasBaseAmount() bool {
	if o != nil && !IsNil(o.BaseAmount) {
		return true
	}

	return false
}

// SetBaseAmount gets a reference to the given string and assigns it to the BaseAmount field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetBaseAmount(v string) {
	o.BaseAmount = &v
}

// GetQuoteAmount returns the QuoteAmount field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetQuoteAmount() string {
	if o == nil || IsNil(o.QuoteAmount) {
		var ret string
		return ret
	}
	return *o.QuoteAmount
}

// GetQuoteAmountOk returns a tuple with the QuoteAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetQuoteAmountOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAmount) {
		return nil, false
	}
	return o.QuoteAmount, true
}

// HasQuoteAmount returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasQuoteAmount() bool {
	if o != nil && !IsNil(o.QuoteAmount) {
		return true
	}

	return false
}

// SetQuoteAmount gets a reference to the given string and assigns it to the QuoteAmount field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetQuoteAmount(v string) {
	o.QuoteAmount = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetIdentityId returns the IdentityId field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetIdentityId() string {
	if o == nil || IsNil(o.IdentityId) {
		var ret string
		return ret
	}
	return *o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityId) {
		return nil, false
	}
	return o.IdentityId, true
}

// HasIdentityId returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasIdentityId() bool {
	if o != nil && !IsNil(o.IdentityId) {
		return true
	}

	return false
}

// SetIdentityId gets a reference to the given string and assigns it to the IdentityId field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetIdentityId(v string) {
	o.IdentityId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetAccountId(v string) {
	o.AccountId = &v
}

// GetRecipientProfileId returns the RecipientProfileId field value if set, zero value otherwise.
func (o *ExchangePublicCreateQuoteExecutionBody) GetRecipientProfileId() string {
	if o == nil || IsNil(o.RecipientProfileId) {
		var ret string
		return ret
	}
	return *o.RecipientProfileId
}

// GetRecipientProfileIdOk returns a tuple with the RecipientProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) GetRecipientProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientProfileId) {
		return nil, false
	}
	return o.RecipientProfileId, true
}

// HasRecipientProfileId returns a boolean if a field has been set.
func (o *ExchangePublicCreateQuoteExecutionBody) HasRecipientProfileId() bool {
	if o != nil && !IsNil(o.RecipientProfileId) {
		return true
	}

	return false
}

// SetRecipientProfileId gets a reference to the given string and assigns it to the RecipientProfileId field.
func (o *ExchangePublicCreateQuoteExecutionBody) SetRecipientProfileId(v string) {
	o.RecipientProfileId = &v
}

func (o ExchangePublicCreateQuoteExecutionBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangePublicCreateQuoteExecutionBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quote_id"] = o.QuoteId
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	if !IsNil(o.BaseAmount) {
		toSerialize["base_amount"] = o.BaseAmount
	}
	if !IsNil(o.QuoteAmount) {
		toSerialize["quote_amount"] = o.QuoteAmount
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.IdentityId) {
		toSerialize["identity_id"] = o.IdentityId
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.RecipientProfileId) {
		toSerialize["recipient_profile_id"] = o.RecipientProfileId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExchangePublicCreateQuoteExecutionBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quote_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExchangePublicCreateQuoteExecutionBody := _ExchangePublicCreateQuoteExecutionBody{}

	err = json.Unmarshal(data, &varExchangePublicCreateQuoteExecutionBody)

	if err != nil {
		return err
	}

	*o = ExchangePublicCreateQuoteExecutionBody(varExchangePublicCreateQuoteExecutionBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "quote_id")
		delete(additionalProperties, "ref_id")
		delete(additionalProperties, "base_amount")
		delete(additionalProperties, "quote_amount")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "identity_id")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "recipient_profile_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExchangePublicCreateQuoteExecutionBody struct {
	value *ExchangePublicCreateQuoteExecutionBody
	isSet bool
}

func (v NullableExchangePublicCreateQuoteExecutionBody) Get() *ExchangePublicCreateQuoteExecutionBody {
	return v.value
}

func (v *NullableExchangePublicCreateQuoteExecutionBody) Set(val *ExchangePublicCreateQuoteExecutionBody) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangePublicCreateQuoteExecutionBody) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangePublicCreateQuoteExecutionBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangePublicCreateQuoteExecutionBody(val *ExchangePublicCreateQuoteExecutionBody) *NullableExchangePublicCreateQuoteExecutionBody {
	return &NullableExchangePublicCreateQuoteExecutionBody{value: val, isSet: true}
}

func (v NullableExchangePublicCreateQuoteExecutionBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangePublicCreateQuoteExecutionBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


