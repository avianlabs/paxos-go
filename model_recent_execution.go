/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the RecentExecution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecentExecution{}

// RecentExecution struct for RecentExecution
type RecentExecution struct {
	// Unique execution match number.
	MatchNumber *string `json:"match_number,omitempty"`
	// Price of the execution.
	Price *string `json:"price,omitempty"`
	// Amount of the execution.
	Amount *string `json:"amount,omitempty"`
	// Execution timestamp.
	ExecutedAt *string `json:"executed_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RecentExecution RecentExecution

// NewRecentExecution instantiates a new RecentExecution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecentExecution() *RecentExecution {
	this := RecentExecution{}
	return &this
}

// NewRecentExecutionWithDefaults instantiates a new RecentExecution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecentExecutionWithDefaults() *RecentExecution {
	this := RecentExecution{}
	return &this
}

// GetMatchNumber returns the MatchNumber field value if set, zero value otherwise.
func (o *RecentExecution) GetMatchNumber() string {
	if o == nil || IsNil(o.MatchNumber) {
		var ret string
		return ret
	}
	return *o.MatchNumber
}

// GetMatchNumberOk returns a tuple with the MatchNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentExecution) GetMatchNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MatchNumber) {
		return nil, false
	}
	return o.MatchNumber, true
}

// HasMatchNumber returns a boolean if a field has been set.
func (o *RecentExecution) HasMatchNumber() bool {
	if o != nil && !IsNil(o.MatchNumber) {
		return true
	}

	return false
}

// SetMatchNumber gets a reference to the given string and assigns it to the MatchNumber field.
func (o *RecentExecution) SetMatchNumber(v string) {
	o.MatchNumber = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *RecentExecution) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentExecution) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *RecentExecution) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *RecentExecution) SetPrice(v string) {
	o.Price = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *RecentExecution) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentExecution) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *RecentExecution) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *RecentExecution) SetAmount(v string) {
	o.Amount = &v
}

// GetExecutedAt returns the ExecutedAt field value if set, zero value otherwise.
func (o *RecentExecution) GetExecutedAt() string {
	if o == nil || IsNil(o.ExecutedAt) {
		var ret string
		return ret
	}
	return *o.ExecutedAt
}

// GetExecutedAtOk returns a tuple with the ExecutedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentExecution) GetExecutedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutedAt) {
		return nil, false
	}
	return o.ExecutedAt, true
}

// HasExecutedAt returns a boolean if a field has been set.
func (o *RecentExecution) HasExecutedAt() bool {
	if o != nil && !IsNil(o.ExecutedAt) {
		return true
	}

	return false
}

// SetExecutedAt gets a reference to the given string and assigns it to the ExecutedAt field.
func (o *RecentExecution) SetExecutedAt(v string) {
	o.ExecutedAt = &v
}

func (o RecentExecution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecentExecution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchNumber) {
		toSerialize["match_number"] = o.MatchNumber
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ExecutedAt) {
		toSerialize["executed_at"] = o.ExecutedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RecentExecution) UnmarshalJSON(data []byte) (err error) {
	varRecentExecution := _RecentExecution{}

	err = json.Unmarshal(data, &varRecentExecution)

	if err != nil {
		return err
	}

	*o = RecentExecution(varRecentExecution)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "match_number")
		delete(additionalProperties, "price")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "executed_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRecentExecution struct {
	value *RecentExecution
	isSet bool
}

func (v NullableRecentExecution) Get() *RecentExecution {
	return v.value
}

func (v *NullableRecentExecution) Set(val *RecentExecution) {
	v.value = val
	v.isSet = true
}

func (v NullableRecentExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableRecentExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecentExecution(val *RecentExecution) *NullableRecentExecution {
	return &NullableRecentExecution{value: val, isSet: true}
}

func (v NullableRecentExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecentExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


