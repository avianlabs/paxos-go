/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the FiatNetworkInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiatNetworkInstructions{}

// FiatNetworkInstructions struct for FiatNetworkInstructions
type FiatNetworkInstructions struct {
	Wire *FiatNetworkInstructionsWire `json:"wire,omitempty"`
	Cbit *FiatNetworkInstructionsCbit `json:"cbit,omitempty"`
}

// NewFiatNetworkInstructions instantiates a new FiatNetworkInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiatNetworkInstructions() *FiatNetworkInstructions {
	this := FiatNetworkInstructions{}
	return &this
}

// NewFiatNetworkInstructionsWithDefaults instantiates a new FiatNetworkInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiatNetworkInstructionsWithDefaults() *FiatNetworkInstructions {
	this := FiatNetworkInstructions{}
	return &this
}

// GetWire returns the Wire field value if set, zero value otherwise.
func (o *FiatNetworkInstructions) GetWire() FiatNetworkInstructionsWire {
	if o == nil || IsNil(o.Wire) {
		var ret FiatNetworkInstructionsWire
		return ret
	}
	return *o.Wire
}

// GetWireOk returns a tuple with the Wire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatNetworkInstructions) GetWireOk() (*FiatNetworkInstructionsWire, bool) {
	if o == nil || IsNil(o.Wire) {
		return nil, false
	}
	return o.Wire, true
}

// HasWire returns a boolean if a field has been set.
func (o *FiatNetworkInstructions) HasWire() bool {
	if o != nil && !IsNil(o.Wire) {
		return true
	}

	return false
}

// SetWire gets a reference to the given FiatNetworkInstructionsWire and assigns it to the Wire field.
func (o *FiatNetworkInstructions) SetWire(v FiatNetworkInstructionsWire) {
	o.Wire = &v
}

// GetCbit returns the Cbit field value if set, zero value otherwise.
func (o *FiatNetworkInstructions) GetCbit() FiatNetworkInstructionsCbit {
	if o == nil || IsNil(o.Cbit) {
		var ret FiatNetworkInstructionsCbit
		return ret
	}
	return *o.Cbit
}

// GetCbitOk returns a tuple with the Cbit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatNetworkInstructions) GetCbitOk() (*FiatNetworkInstructionsCbit, bool) {
	if o == nil || IsNil(o.Cbit) {
		return nil, false
	}
	return o.Cbit, true
}

// HasCbit returns a boolean if a field has been set.
func (o *FiatNetworkInstructions) HasCbit() bool {
	if o != nil && !IsNil(o.Cbit) {
		return true
	}

	return false
}

// SetCbit gets a reference to the given FiatNetworkInstructionsCbit and assigns it to the Cbit field.
func (o *FiatNetworkInstructions) SetCbit(v FiatNetworkInstructionsCbit) {
	o.Cbit = &v
}

func (o FiatNetworkInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiatNetworkInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Wire) {
		toSerialize["wire"] = o.Wire
	}
	if !IsNil(o.Cbit) {
		toSerialize["cbit"] = o.Cbit
	}
	return toSerialize, nil
}

type NullableFiatNetworkInstructions struct {
	value *FiatNetworkInstructions
	isSet bool
}

func (v NullableFiatNetworkInstructions) Get() *FiatNetworkInstructions {
	return v.value
}

func (v *NullableFiatNetworkInstructions) Set(val *FiatNetworkInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableFiatNetworkInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableFiatNetworkInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiatNetworkInstructions(val *FiatNetworkInstructions) *NullableFiatNetworkInstructions {
	return &NullableFiatNetworkInstructions{value: val, isSet: true}
}

func (v NullableFiatNetworkInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiatNetworkInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


