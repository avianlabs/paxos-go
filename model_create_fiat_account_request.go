/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFiatAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFiatAccountRequest{}

// CreateFiatAccountRequest struct for CreateFiatAccountRequest
type CreateFiatAccountRequest struct {
	// The optional client-specified ID (for idempotence).
	RefId *string `json:"ref_id,omitempty"`
	// The Paxos Identity (`identity_id`) of the user's FiatAccount.
	IdentityId string `json:"identity_id"`
	// The Paxos Account (`account_id`) of the user's FiatAccount. Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) making deposits on behalf of their end users.
	AccountId *string `json:"account_id,omitempty"`
	FiatAccountOwner FiatAccountOwner `json:"fiat_account_owner"`
	FiatNetworkInstructions FiatNetworkInstructions `json:"fiat_network_instructions"`
	// Optional client-specified metadata. Up to 6 key/value pairs may be provided. Each key and value must be less than or equal to 100 characters.
	Metadata *map[string]string `json:"metadata,omitempty"`
}

type _CreateFiatAccountRequest CreateFiatAccountRequest

// NewCreateFiatAccountRequest instantiates a new CreateFiatAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFiatAccountRequest(identityId string, fiatAccountOwner FiatAccountOwner, fiatNetworkInstructions FiatNetworkInstructions) *CreateFiatAccountRequest {
	this := CreateFiatAccountRequest{}
	this.IdentityId = identityId
	this.FiatAccountOwner = fiatAccountOwner
	this.FiatNetworkInstructions = fiatNetworkInstructions
	return &this
}

// NewCreateFiatAccountRequestWithDefaults instantiates a new CreateFiatAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFiatAccountRequestWithDefaults() *CreateFiatAccountRequest {
	this := CreateFiatAccountRequest{}
	return &this
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *CreateFiatAccountRequest) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *CreateFiatAccountRequest) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *CreateFiatAccountRequest) SetRefId(v string) {
	o.RefId = &v
}

// GetIdentityId returns the IdentityId field value
func (o *CreateFiatAccountRequest) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *CreateFiatAccountRequest) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreateFiatAccountRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreateFiatAccountRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CreateFiatAccountRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetFiatAccountOwner returns the FiatAccountOwner field value
func (o *CreateFiatAccountRequest) GetFiatAccountOwner() FiatAccountOwner {
	if o == nil {
		var ret FiatAccountOwner
		return ret
	}

	return o.FiatAccountOwner
}

// GetFiatAccountOwnerOk returns a tuple with the FiatAccountOwner field value
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetFiatAccountOwnerOk() (*FiatAccountOwner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FiatAccountOwner, true
}

// SetFiatAccountOwner sets field value
func (o *CreateFiatAccountRequest) SetFiatAccountOwner(v FiatAccountOwner) {
	o.FiatAccountOwner = v
}

// GetFiatNetworkInstructions returns the FiatNetworkInstructions field value
func (o *CreateFiatAccountRequest) GetFiatNetworkInstructions() FiatNetworkInstructions {
	if o == nil {
		var ret FiatNetworkInstructions
		return ret
	}

	return o.FiatNetworkInstructions
}

// GetFiatNetworkInstructionsOk returns a tuple with the FiatNetworkInstructions field value
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetFiatNetworkInstructionsOk() (*FiatNetworkInstructions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FiatNetworkInstructions, true
}

// SetFiatNetworkInstructions sets field value
func (o *CreateFiatAccountRequest) SetFiatNetworkInstructions(v FiatNetworkInstructions) {
	o.FiatNetworkInstructions = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateFiatAccountRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFiatAccountRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateFiatAccountRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateFiatAccountRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o CreateFiatAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFiatAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	toSerialize["identity_id"] = o.IdentityId
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	toSerialize["fiat_account_owner"] = o.FiatAccountOwner
	toSerialize["fiat_network_instructions"] = o.FiatNetworkInstructions
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

func (o *CreateFiatAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identity_id",
		"fiat_account_owner",
		"fiat_network_instructions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFiatAccountRequest := _CreateFiatAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFiatAccountRequest)

	if err != nil {
		return err
	}

	*o = CreateFiatAccountRequest(varCreateFiatAccountRequest)

	return err
}

type NullableCreateFiatAccountRequest struct {
	value *CreateFiatAccountRequest
	isSet bool
}

func (v NullableCreateFiatAccountRequest) Get() *CreateFiatAccountRequest {
	return v.value
}

func (v *NullableCreateFiatAccountRequest) Set(val *CreateFiatAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFiatAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFiatAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFiatAccountRequest(val *CreateFiatAccountRequest) *NullableCreateFiatAccountRequest {
	return &NullableCreateFiatAccountRequest{value: val, isSet: true}
}

func (v NullableCreateFiatAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFiatAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


