/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"fmt"
)

// FiatDepositInstructionsStatus the model 'FiatDepositInstructionsStatus'
type FiatDepositInstructionsStatus string

// List of FiatDepositInstructionsStatus
const (
	FIATDEPOSITINSTRUCTIONSSTATUS_VALID FiatDepositInstructionsStatus = "VALID"
	FIATDEPOSITINSTRUCTIONSSTATUS_DEPRECATED FiatDepositInstructionsStatus = "DEPRECATED"
)

// All allowed values of FiatDepositInstructionsStatus enum
var AllowedFiatDepositInstructionsStatusEnumValues = []FiatDepositInstructionsStatus{
	"VALID",
	"DEPRECATED",
}

func (v *FiatDepositInstructionsStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FiatDepositInstructionsStatus(value)
	for _, existing := range AllowedFiatDepositInstructionsStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FiatDepositInstructionsStatus", value)
}

// NewFiatDepositInstructionsStatusFromValue returns a pointer to a valid FiatDepositInstructionsStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFiatDepositInstructionsStatusFromValue(v string) (*FiatDepositInstructionsStatus, error) {
	ev := FiatDepositInstructionsStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FiatDepositInstructionsStatus: valid values are %v", v, AllowedFiatDepositInstructionsStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FiatDepositInstructionsStatus) IsValid() bool {
	for _, existing := range AllowedFiatDepositInstructionsStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FiatDepositInstructionsStatus value
func (v FiatDepositInstructionsStatus) Ptr() *FiatDepositInstructionsStatus {
	return &v
}

type NullableFiatDepositInstructionsStatus struct {
	value *FiatDepositInstructionsStatus
	isSet bool
}

func (v NullableFiatDepositInstructionsStatus) Get() *FiatDepositInstructionsStatus {
	return v.value
}

func (v *NullableFiatDepositInstructionsStatus) Set(val *FiatDepositInstructionsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableFiatDepositInstructionsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableFiatDepositInstructionsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiatDepositInstructionsStatus(val *FiatDepositInstructionsStatus) *NullableFiatDepositInstructionsStatus {
	return &NullableFiatDepositInstructionsStatus{value: val, isSet: true}
}

func (v NullableFiatDepositInstructionsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiatDepositInstructionsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

