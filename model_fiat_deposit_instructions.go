/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FiatDepositInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiatDepositInstructions{}

// FiatDepositInstructions struct for FiatDepositInstructions
type FiatDepositInstructions struct {
	// The Fiat Deposit Instructions ID (`id`) is provided in the response of the [Create Fiat Deposit Instructions](#operation/CreateFiatDepositInstructions). Use this ID to retrieve the instructions using [Get Fiat Deposit Instructions](#operation/GetFiatDepositInstructions) & [List Fiat Deposit Instructions](#operation/ListFiatDepositInstructions).
	Id string `json:"id"`
	// The Profile (`profile_id`) to deposit to.
	ProfileId string `json:"profile_id"`
	// The Identity (`identity_id`) of the user making the deposit.
	IdentityId string `json:"identity_id"`
	// The Account (`account_id`) associated with the Identity of the user making the deposit. Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) making deposits on behalf of their end users.
	AccountId *string `json:"account_id,omitempty"`
	// The optional client-specified ID (for idempotence).
	RefId *string `json:"ref_id,omitempty"`
	Status FiatDepositInstructionsStatus `json:"status"`
	// The string, unique to the request. To deposit funds into an account, the memo ID must be provided when initiating a `WIRE` transfer to Paxos. This is provided after creating [Fiat Deposit Instructions](#/operation/CreateFiatDepositInstructions) The `memo_id` can also be found from either [Get Fiat Deposit Instructions](#operation/GetFiatDepositInstructions) or [List Fiat Deposit Instructions](#operation/ListFiatDepositInstructions) for the corresponding ID (Fiat Deposit Instructions ID).
	MemoId string `json:"memo_id"`
	FiatNetworkInstructions FiatNetworkInstructions `json:"fiat_network_instructions"`
	FiatAccountOwner *FiatAccountOwner `json:"fiat_account_owner,omitempty"`
	// Optional client-specified metadata.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// The time at which these instructions were created.
	CreatedAt time.Time `json:"created_at"`
}

type _FiatDepositInstructions FiatDepositInstructions

// NewFiatDepositInstructions instantiates a new FiatDepositInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiatDepositInstructions(id string, profileId string, identityId string, status FiatDepositInstructionsStatus, memoId string, fiatNetworkInstructions FiatNetworkInstructions, createdAt time.Time) *FiatDepositInstructions {
	this := FiatDepositInstructions{}
	this.Id = id
	this.ProfileId = profileId
	this.IdentityId = identityId
	this.Status = status
	this.MemoId = memoId
	this.FiatNetworkInstructions = fiatNetworkInstructions
	this.CreatedAt = createdAt
	return &this
}

// NewFiatDepositInstructionsWithDefaults instantiates a new FiatDepositInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiatDepositInstructionsWithDefaults() *FiatDepositInstructions {
	this := FiatDepositInstructions{}
	return &this
}

// GetId returns the Id field value
func (o *FiatDepositInstructions) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FiatDepositInstructions) SetId(v string) {
	o.Id = v
}

// GetProfileId returns the ProfileId field value
func (o *FiatDepositInstructions) GetProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *FiatDepositInstructions) SetProfileId(v string) {
	o.ProfileId = v
}

// GetIdentityId returns the IdentityId field value
func (o *FiatDepositInstructions) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *FiatDepositInstructions) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *FiatDepositInstructions) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *FiatDepositInstructions) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *FiatDepositInstructions) SetAccountId(v string) {
	o.AccountId = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *FiatDepositInstructions) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *FiatDepositInstructions) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *FiatDepositInstructions) SetRefId(v string) {
	o.RefId = &v
}

// GetStatus returns the Status field value
func (o *FiatDepositInstructions) GetStatus() FiatDepositInstructionsStatus {
	if o == nil {
		var ret FiatDepositInstructionsStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetStatusOk() (*FiatDepositInstructionsStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FiatDepositInstructions) SetStatus(v FiatDepositInstructionsStatus) {
	o.Status = v
}

// GetMemoId returns the MemoId field value
func (o *FiatDepositInstructions) GetMemoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemoId
}

// GetMemoIdOk returns a tuple with the MemoId field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetMemoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoId, true
}

// SetMemoId sets field value
func (o *FiatDepositInstructions) SetMemoId(v string) {
	o.MemoId = v
}

// GetFiatNetworkInstructions returns the FiatNetworkInstructions field value
func (o *FiatDepositInstructions) GetFiatNetworkInstructions() FiatNetworkInstructions {
	if o == nil {
		var ret FiatNetworkInstructions
		return ret
	}

	return o.FiatNetworkInstructions
}

// GetFiatNetworkInstructionsOk returns a tuple with the FiatNetworkInstructions field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetFiatNetworkInstructionsOk() (*FiatNetworkInstructions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FiatNetworkInstructions, true
}

// SetFiatNetworkInstructions sets field value
func (o *FiatDepositInstructions) SetFiatNetworkInstructions(v FiatNetworkInstructions) {
	o.FiatNetworkInstructions = v
}

// GetFiatAccountOwner returns the FiatAccountOwner field value if set, zero value otherwise.
func (o *FiatDepositInstructions) GetFiatAccountOwner() FiatAccountOwner {
	if o == nil || IsNil(o.FiatAccountOwner) {
		var ret FiatAccountOwner
		return ret
	}
	return *o.FiatAccountOwner
}

// GetFiatAccountOwnerOk returns a tuple with the FiatAccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetFiatAccountOwnerOk() (*FiatAccountOwner, bool) {
	if o == nil || IsNil(o.FiatAccountOwner) {
		return nil, false
	}
	return o.FiatAccountOwner, true
}

// HasFiatAccountOwner returns a boolean if a field has been set.
func (o *FiatDepositInstructions) HasFiatAccountOwner() bool {
	if o != nil && !IsNil(o.FiatAccountOwner) {
		return true
	}

	return false
}

// SetFiatAccountOwner gets a reference to the given FiatAccountOwner and assigns it to the FiatAccountOwner field.
func (o *FiatDepositInstructions) SetFiatAccountOwner(v FiatAccountOwner) {
	o.FiatAccountOwner = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *FiatDepositInstructions) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *FiatDepositInstructions) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *FiatDepositInstructions) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *FiatDepositInstructions) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FiatDepositInstructions) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FiatDepositInstructions) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o FiatDepositInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiatDepositInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["profile_id"] = o.ProfileId
	toSerialize["identity_id"] = o.IdentityId
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	toSerialize["status"] = o.Status
	toSerialize["memo_id"] = o.MemoId
	toSerialize["fiat_network_instructions"] = o.FiatNetworkInstructions
	if !IsNil(o.FiatAccountOwner) {
		toSerialize["fiat_account_owner"] = o.FiatAccountOwner
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *FiatDepositInstructions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"profile_id",
		"identity_id",
		"status",
		"memo_id",
		"fiat_network_instructions",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFiatDepositInstructions := _FiatDepositInstructions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFiatDepositInstructions)

	if err != nil {
		return err
	}

	*o = FiatDepositInstructions(varFiatDepositInstructions)

	return err
}

type NullableFiatDepositInstructions struct {
	value *FiatDepositInstructions
	isSet bool
}

func (v NullableFiatDepositInstructions) Get() *FiatDepositInstructions {
	return v.value
}

func (v *NullableFiatDepositInstructions) Set(val *FiatDepositInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableFiatDepositInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableFiatDepositInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiatDepositInstructions(val *FiatDepositInstructions) *NullableFiatDepositInstructions {
	return &NullableFiatDepositInstructions{value: val, isSet: true}
}

func (v NullableFiatDepositInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiatDepositInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


