/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the TaxFormURL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxFormURL{}

// TaxFormURL struct for TaxFormURL
type TaxFormURL struct {
	AccountId *string `json:"account_id,omitempty"`
	Type *TaxFormType `json:"type,omitempty"`
	TaxYear *string `json:"tax_year,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Url *string `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TaxFormURL TaxFormURL

// NewTaxFormURL instantiates a new TaxFormURL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxFormURL() *TaxFormURL {
	this := TaxFormURL{}
	return &this
}

// NewTaxFormURLWithDefaults instantiates a new TaxFormURL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxFormURLWithDefaults() *TaxFormURL {
	this := TaxFormURL{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *TaxFormURL) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxFormURL) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *TaxFormURL) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *TaxFormURL) SetAccountId(v string) {
	o.AccountId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TaxFormURL) GetType() TaxFormType {
	if o == nil || IsNil(o.Type) {
		var ret TaxFormType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxFormURL) GetTypeOk() (*TaxFormType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TaxFormURL) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given TaxFormType and assigns it to the Type field.
func (o *TaxFormURL) SetType(v TaxFormType) {
	o.Type = &v
}

// GetTaxYear returns the TaxYear field value if set, zero value otherwise.
func (o *TaxFormURL) GetTaxYear() string {
	if o == nil || IsNil(o.TaxYear) {
		var ret string
		return ret
	}
	return *o.TaxYear
}

// GetTaxYearOk returns a tuple with the TaxYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxFormURL) GetTaxYearOk() (*string, bool) {
	if o == nil || IsNil(o.TaxYear) {
		return nil, false
	}
	return o.TaxYear, true
}

// HasTaxYear returns a boolean if a field has been set.
func (o *TaxFormURL) HasTaxYear() bool {
	if o != nil && !IsNil(o.TaxYear) {
		return true
	}

	return false
}

// SetTaxYear gets a reference to the given string and assigns it to the TaxYear field.
func (o *TaxFormURL) SetTaxYear(v string) {
	o.TaxYear = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *TaxFormURL) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxFormURL) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *TaxFormURL) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *TaxFormURL) SetRevision(v string) {
	o.Revision = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TaxFormURL) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxFormURL) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TaxFormURL) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TaxFormURL) SetUrl(v string) {
	o.Url = &v
}

func (o TaxFormURL) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxFormURL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TaxYear) {
		toSerialize["tax_year"] = o.TaxYear
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TaxFormURL) UnmarshalJSON(data []byte) (err error) {
	varTaxFormURL := _TaxFormURL{}

	err = json.Unmarshal(data, &varTaxFormURL)

	if err != nil {
		return err
	}

	*o = TaxFormURL(varTaxFormURL)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "tax_year")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTaxFormURL struct {
	value *TaxFormURL
	isSet bool
}

func (v NullableTaxFormURL) Get() *TaxFormURL {
	return v.value
}

func (v *NullableTaxFormURL) Set(val *TaxFormURL) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxFormURL) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxFormURL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxFormURL(val *TaxFormURL) *NullableTaxFormURL {
	return &NullableTaxFormURL{value: val, isSet: true}
}

func (v NullableTaxFormURL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxFormURL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


