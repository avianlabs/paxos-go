openapi: 3.0.0
info:
  description: |
    <p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href="https://account.sandbox.paxos.com" target="_blank">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href="https://www.paxos.com/" target="_blank">Paxos.com</a>.</p>
  title: Paxos API
  version: "2.0"
  x-logo:
    url: /docs/paxos.svg
    backgroundColor: '#FFFFFF'
    altText: Paxos logo
servers:
- description: Production
  url: https://api.paxos.com/v2
- description: Sandbox
  url: https://api.sandbox.paxos.com/v2
tags:
- description: |
    Profiles hold asset balances, and every Paxos transaction is on a particular profile.
    Depending on your integration type, Profiles may be used to reflect both corporate balances or individual user balances.
    There are two types of Profiles:
    - `DEFAULT` Profiles are system-generated.
    - `NORMAL` Profiles are created using the [Create Profile](#operation/CreateProfile) endpoint and are the only type of Profile you can create.
  name: Profiles
- description: |
    Quotes are "held rates" offered by Paxos to buy or sell assets at a specific
    price within a period of time - for example, the option to buy BTC within
    the next 30 seconds for $8,000.

    The typical Quotes workflow is as follows:

    1. Call [List Quotes](#operation/ListQuotes) to get the latest available
       quoted prices for the assets you want to buy or sell.
    1. Present the offered price to one or more end-users, with a timer
       indicating the time to expiration.
    1. If a user accepts the price, call [Create Quote Execution](#operation/CreateQuoteExecution) with the amount to buy or sell.
    1. Call [Get Quote Execution](#operation/GetQuoteExecution) to monitor
       for completion and know when the funds from the execution are available.

    It's important to show end-users the latest available price. If you cache
    prices to show them to multiple users, you should refresh the cache once
    per second.

    You can call [List Quote Executions](#operation/ListQuoteExecutions) to
    review or construct reports on quote execution activity.
  name: Quotes
- description: |
    Quote Executions buy or sell assets using a Quote obtained from
    the [Quotes](#tag/Quotes) flow.
  name: Quote Executions
- description: |
    <p>There are three types of orders: market, limit and post-only.</p>
    <p>Market orders guarantee execution at a variable price and quantity. Limit orders guarantee price and quantity at the time of execution but do not guarantee execution. Post-only is an order type that will only be placed on the order book if it is the maker side of a trade.</p>
  name: Orders
- description: |
    Market data provides various parameters of the order book and historical order data.
  name: Market Data
- description: |
    Pricing provides historical data related to charting of asset prices.

    Note: Some Pricing API markets may be unavailable for trading.
  name: Pricing
- description: |
    An Identity represents an individual person or institution entity with funds held in custody by Paxos, either directly or indirectly.
    To fully onboard an individual to Paxos, There are 2 key features that are both necessary : id verification and sanctions screening.
    Whereas to onboard an institution to Paxos, sanctions screening along with some additional documents must be submitted and then our
    compliance team will review the information and approve the identity if it is verified.

    The Identity API enables you to create and update the details associated with an identity on the Paxos platform. You can also use it to monitor the approval status of an identity to understand when they are cleared to transact.
  name: Identity
- description: |
    An institution identity can have one or more institution members. Each institution member references
    a single identity.

    Institution members are effectively immutable. In order to update properties of
    an existing member, clients should remove the existing member and add a new member with the desired state.

    To use this API, clients must have write access to the institution
    and all identities given membership. Otherwise, a client error is returned.
  name: Institution Members
- description: |
    An identity can have one or more Accounts on the Paxos platform. Accounts maintain additional context,
    such as tax status and can also be used to represent Joint Accounts where more than one identity has access
    or control over transaction activity.
  name: Accounts
- description: |
    The Account Members API allows clients to manage account members.

    Account members are effectively immutable. In order to update an account member,
    clients should remove then re-add the account member with the desired state.

    The API requires clients to have write access on the account and all identities
    associated with the account.
  name: Account Members
- description: |
    ### **NOTICE**: The following section is under a CLOSED BETA thus it is not available for all clients. Using these endpoints when outside the closed beta will result in a 403 result.

    The Identity Documents API allows clients to send documents to Paxos to validate identities
    during the KYC process. Files can be updated multiple times by re-sending the document type
    for processing.

    We currently accept the following file formats:
    - <code>pdf</code>
    - <code>jpg</code>
    - <code>png</code>

    Steps to upload a document are as follows:
    1. Send a <code>PUT</code> request to <code>/identity/identities/{id}/documents</code> to get
      the upload URL.
    1. Send your document to the provided URL via a PUT request. Take the following example using curl:
      <code>$ curl --upload-file Proof_of_residence.jpg $URI </code>

    Uploaded document metadata will be availiable via <code>GET</code> request to <code>/identity/identities/{id}/documents</code>
  name: Identity Documents
- description: |
    The Fiat Transfers API allows clients to deposit and withdraw fiat via the following Fiat Networks: Wire (Fedwire and SWIFT) and CBIT. The supported asset is USD.

    The full set of Fiat Transfers API endpoints is:
    - For Deposits:
      - [Create Fiat Deposit Instructions](#operation/CreateFiatDepositInstructions)
      - [List Fiat Deposit Instructions](#operation/ListFiatDepositInstructions)
      - [Get Fiat Deposit Instructions](#operation/GetFiatDepositInstructions)
    - For Withdrawals:
      - [Create Fiat Account](#operation/CreateFiatAccount)
      - [List Fiat Accounts](#operation/ListFiatAccounts)
      - [Get Fiat Account](#operation/GetFiatAccount)
      - [Delete Fiat Account](#operation/DeleteFiatAccount)
      - [Update Fiat Account](#operation/UpdateFiatAccount)
      - [Create Fiat Withdrawal](#operation/CreateFiatWithdrawal)
  name: Fiat Transfers
- description: |
    <p>Swap between fiat and stablecoin using <a href="#operation/CreateStablecoinConversion">Create Stablecoin Conversion</a> and check the status of a <a href="#operation/GetStablecoinConversion">single conversion</a> or retrieve a <a href="#operation/ListStablecoinConversions">list of conversions</a>.</p>
  name: Stablecoin Conversion
- description: |
    Each deposit to and withdrawal from a Paxos account is a Transfer.
    A Transfer is associated with a particular Profile, and increases or
    decreases the available balance of a single asset in that Profile.
  name: Transfers
- description: |
    All tax forms are associated to a single account_id.
    An account_id can have multiple tax forms associated with it.
    US 1099-B and 1099-Misc tax forms for the previous fiscal year will be available in February of the current calendar year.
    Previous years tax forms are also available by request.
  name: Tax Forms
- description: |
    For [Paxos Global PTE Ltd](https://help.paxos.com/hc/en-us/articles/9647005243284) users, update or reject a crypto deposit that does not contain the required [travel rule](https://help.paxos.com/hc/en-us/articles/25928845778068) information.
    Deposits with the `NEEDS_INFO` status require additional sender information before they can be processed.
    - For individuals, both first and last name are required.
    - For institutions, the institution name is required.

    If a deposit is rejected, the funds will no longer be available.
  externalDocs:
    description: Learn more about travel rule udpates →
    url: https://help.paxos.com/hc/en-us/articles/25422999706900
  name: Crypto Deposits
- description: |
    Use the Settlements API to facilitate simultaneous exchange of pre-funded assets. Automate a variety of use cases that require two-party approval, including net settlement of over-the-counter trades, withdrawal requests for tri-party collateral, payment requests, and bilateral settlement for marketplace end users.

    The simple request-and-approval workflow supports both one-directional and bidirectional transactions to allow a user to receive an asset (for example, send USDP) or simultaneously send and receive assets (for example, send USD and receive BTC and ETH). Only when all parties are in agreement and assets are fully funded does the Settlements API allow for change of custody. Upon completion, all settled assets are immediately available for trading, transferring, withdrawal or other supported activities.

    The Source Profile initiates the transaction for the Target Profile to approve. The `DIRECTION` of each asset is always relative to the Source Profile and only the owner of the Source Profile can cancel a transaction if it hasn’t been approved by the Target Profile.
  externalDocs:
    description: Learn more about the Settlement APIs →
    url: https://docs.paxos.com/settlements
  name: Settlement
paths:
  /profiles:
    get:
      description: |-
        Return the associated Profiles for the current Account.
        The paginated results default to the maximum limit of 1,000 Profiles, unless otherwise specified with the `limit` parameter.
        Every paginated response contains a `next_page` field until the last page is reached.
        Pass the `next_page` value into the `page_cursor` field of the next request to retrieve the next page of results.
      operationId: ListProfiles
      parameters:
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to ASC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                    - id: 1a763ac5-13d9-4568-bb8b-747c416b105c
                      nickname: default
                      type: DEFAULT
                    - id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                      nickname: MyProfileName
                      type: NORMAL
              schema:
                $ref: '#/components/schemas/ListProfilesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - funding:read_profile
      summary: List Profiles
      tags:
      - Profiles
    post:
      description: Create a new profile for this account. Profiles created using this
        endpoint always have a type of `NORMAL`.
      operationId: CreateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: A successful response.
      security:
      - OAuth2:
        - funding:write_profile
      summary: Create Profile
      tags:
      - Profiles
  /profiles/{profile_id}:
    get:
      description: "Read a single profile by its UUID, or read the default profile\
        \ using the alias \"default\"."
      operationId: GetProfile
      parameters:
      - description: "The UUID of the profile, or \"default\" for the default profile."
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                profile_id=b7b77d82-e6a7-4ae9-9904-36231aedf985:
                  value:
                    id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                    nickname: MyProfileName
                    type: NORMAL
              schema:
                $ref: '#/components/schemas/Profile'
          description: A successful response.
      security:
      - OAuth2:
        - funding:read_profile
      summary: Get Profile
      tags:
      - Profiles
  /profiles/{profile_id}/balances:
    get:
      description: |-
        Retrieve the Profile’s available and trading balances.
        Use query parameters to retrieve a defined set of assets.
        Omit query parameters to retrieve all asset balances.
      operationId: ListProfileBalances
      parameters:
      - explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: assets
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                assets=BTC,USD:
                  value:
                    items:
                    - asset: BTC
                      available: "1.23103715"
                      trading: ".25"
                    - asset: USD
                      available: "1510.23"
                      trading: "100.00"
                All Assets:
                  value:
                    items:
                    - asset: USD
                      available: "1510.23"
                      trading: "100.00"
                    - asset: EUR
                      available: "0"
                      trading: "0"
                    - asset: SGD
                      available: "0"
                      trading: "0"
                    - asset: BTC
                      available: "1.23103715"
                      trading: ".25"
                    - asset: ETH
                      available: "0"
                      trading: "0"
                    - asset: PAXG
                      available: "0"
                      trading: "0"
                    - asset: BCH
                      available: "0"
                      trading: "0"
                    - asset: SOL
                      available: "0"
                      trading: "0"
              schema:
                $ref: '#/components/schemas/ListProfileBalancesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - funding:read_profile
      summary: List Profile Balances
      tags:
      - Profiles
  /profiles/{profile_id}/balances/{asset}:
    get:
      description: Get the balance of `asset` in a profile.
      operationId: GetProfileBalance
      parameters:
      - explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileBalance'
          description: A successful response.
      security:
      - OAuth2:
        - funding:read_profile
      summary: Get Profile Balance
      tags:
      - Profiles
  /sandbox/profiles/{profile_id}/deposit:
    post:
      description: |-
        Create a test deposit to fund a profile in the sandbox environment.

        Always specify `crypto_network` when making a crypto sandbox deposit. Omit the parameter when depositing fiat.

        *This functionality is only available in the sandbox environment.*
      operationId: CreateSandboxDeposit
      parameters:
      - description: The ID of the profile that will credited with the assets.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSandboxDepositRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSandboxDepositResponse'
          description: A successful response.
      security:
      - OAuth2:
        - funding:read_profile
      summary: Create Sandbox Deposit
      tags:
      - Sandbox Deposits
  /identity/identities:
    get:
      description: |-
        This endpoint enables you to fetch a list of identities that you have created within the Paxos platform. You
        can use query parameters to filter the results returned by:
        - Summary Status of the Identity
        - Date created
        - Date updated

        Note that this endpoint supports pagination and returns a cursor token for fetching next pages.
      operationId: ListIdentities
      parameters:
      - description: Summary Status of the Identity.
        explode: true
        in: query
        name: summary_status
        required: false
        schema:
          enum:
          - PENDING
          - ERROR
          - APPROVED
          - DENIED
          - DISABLED
          type: string
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Optionally filter by Identity type
        explode: true
        in: query
        name: identity_type
        required: false
        schema:
          enum:
          - PERSON
          - INSTITUTION
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentitiesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:read_identity
      summary: List Identities
      tags:
      - Identity
    post:
      description: |-
        This enables you to create a new identity within the Paxos platform. Depending upon the fields provided, the
        identity will either be person or an institution.

        - [create person identity](#create-person-identity)
        - [create institution identity](#create-institution-identity)

        A successful response indicates that the identity has been created. This does not mean that
        it has already been processed. You can use the unique ID returned within the response to check
        the approval status of the identity.

        ### Create Person Identity
        The Person identity type is used to represent individuals on the platform. Attributes of the Person identity type are recorded in the *person_details* field.

        Note that fields not listed below are forbidden in this request.

        Field | Notes
        ---|---
        person_details | Required
        metadata | Optional
        tax_details | Optional
        ref_id | Optional

        For US based identities, if the `tax_details` attribute is empty, it will be backfilled with the `cip_id` and `cip_id_country` fields from the `person_details` attribute.
        For international identities, the `tax_details` attribute must be present.

        Currently both `JUMIO` or `PASSTHROUGH` are supported for verification, but only `JUMIO` is enabled by default.

        - [create person identity with jumio verification](#automatic-id-verification-with-jumio)
        - [create person identity with passthrough verification](#automatic-id-verification-with-passthrough)

        #### Automatic ID Verification with Jumio
        To use Jumio, you must submit the fields listed below as part of the `person_details` attribute in your request.

        Field | Notes
        ---|---
        person_details.verifier_type | Required. Must be `JUMIO`
        person_details.verifier_id | Required
        person_details.address | Required

        Please note that when using this method:
        - You must ensure that the identity has already been validated by Jumio before submitting the identity to Paxos.
        - You must have previously [set the API credentials for Jumio access](#operation/SetVerifierCredentials).

        Paxos will compare the provided information with the information returned from the Jumio API.

        In the event that there is a conflict between the submitted data and the data returned from the identity provider,
        the information from the identity provider will be preferred.

        ##### Example Request
        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"person_details": {
        &nbsp;&nbsp;&nbsp;&nbsp;"verifier_id": "b7b77d82-e6a7-4ae9-9904-36231aedf985",
        &nbsp;&nbsp;&nbsp;&nbsp;"verifier_type": "JUMIO",
        &nbsp;&nbsp;&nbsp;&nbsp;"first_name": "John",
        &nbsp;&nbsp;&nbsp;&nbsp;"last_name": "Doe",
        &nbsp;&nbsp;&nbsp;&nbsp;"date_of_birth": "1980-01-01",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id": "111-11-1111",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_type": "SSN",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_country": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"nationality": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"profession": "Engineer",
        &nbsp;&nbsp;&nbsp;&nbsp;"country_of_birth": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"address": {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"country": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"address1": "1 Example St",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"city": "New York",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"province": "NY",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"zip_code": "10001"
        &nbsp;&nbsp;&nbsp;&nbsp;},
        &nbsp;&nbsp;&nbsp;&nbsp;"ref_id": "33ece656-eef1-43b5-a851-b6b9099089a5"
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        #### Automatic ID Verification with Passthrough
        To use Passthrough, Paxos Compliance must first confirm your eligibility.

        Once confirmed, you can submit the fields listed below as part of the the `person_details` attribute in your request.

        | Field                                          | Notes                                                                                                     |
        |------------------------------------------------|-----------------------------------------------------------------------------------------------------------|
        | person_details.verifier_type                   | Required. Must be `PASSTHROUGH`                                                                           |
        | person_details.passthrough_verifier_type       | Required. Specifies the ID Verification provider you originally used                                      |
        | person_details.passthrough_verified_at         | Required                                                                                                  |
        | person_details.passthrough_verification_id     | Unique identifier for the underlying individual's ID verification record.                                 |
        | person_details.passthrough_verification_status | Status of the ID verification indicating whether the identity was approved or denied.                     |
        | person_details.passthrough_verification_fields | List of verification fields used by the external verifier to validate the individual's identity.          |
        | person_details.address                         | Required                                                                                                  |

        Note that the following field is forbidden in the request:
        `person_details.verifier_id`

        ##### Example Request
        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"person_details": {
        &nbsp;&nbsp;&nbsp;&nbsp;"verifier_type": "PASSTHROUGH",
        &nbsp;&nbsp;&nbsp;&nbsp;"passthrough_verifier_type": "JUMIO",
        &nbsp;&nbsp;&nbsp;&nbsp;"passthrough_verified_at": "2021-06-16T09:28:14Z",
        &nbsp;&nbsp;&nbsp;&nbsp;"passthrough_verification_id": "775300ef-4edb-47b9-8ec4-f45fe3cbf41f",
        &nbsp;&nbsp;&nbsp;&nbsp;"passthrough_verification_status": "APPROVED",
        &nbsp;&nbsp;&nbsp;&nbsp;"passthrough_verification_fields": ["FULL_LEGAL_NAME", "DATE_OF_BIRTH"]
        &nbsp;&nbsp;&nbsp;&nbsp;"first_name": "John",
        &nbsp;&nbsp;&nbsp;&nbsp;"last_name": "Doe",
        &nbsp;&nbsp;&nbsp;&nbsp;"date_of_birth": "1980-01-01",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_type": "SSN",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id": "111-11-1111",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_country": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"nationality": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"profession": "Engineer",
        &nbsp;&nbsp;&nbsp;&nbsp;"country_of_birth": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"address": {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"country": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"address1": "1 Example St",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"city": "New York",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"province": "NY",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"zip_code": "10001"
        &nbsp;&nbsp;&nbsp;&nbsp;},
        &nbsp;&nbsp;&nbsp;&nbsp;"ref_id": "33ece656-eef1-43b5-a851-b6b9099089a5"
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        ### Create Institution Identity
        Institution identities are used to represent all non-person entities.
        Details for institution identity type are recorded in `institution_details`. An institution identity also has `institution_members` associated with it. This defines persons or other entities that have some relationship to the institution.

        We support the following types and sub-types of institutions. Note that all institution types listed do share some common validations that can also be found below.

        #### Supported Institution Types

        institution_type | Supported institution_member roles | Notes
        ---| ---| ---
        `TRUST` | `BENEFICIAL_OWNER`<br>`BENEFICIARY`<br>`GRANTOR`<br>`TRUSTEE` | [See Trusts](#trust-institutions-requirement)
        `CORPORATION`<br>`LLC`<br>`PARTNERSHIP` | `ACCOUNT_OPENER`<br>`AUTHORIZED_USER`<br>`BENEFICIAL_OWNER`<br>`MANAGEMENT_CONTROL_PERSON` | [See other Institutions](#institutions-requirement)

        #### Industry Type to Institution Subtypes Mapping
        institution_sub_type | industry
        ---| ---
        `ACCOMMODATION_FOOD_SERVICES` |   Food or Beverage Services
        `ADMINISTRATIVE_SUPPORT_WASTE_MANAGEMENT_REMEDIATION_SERVICES` |  Administrative and Support Services
        `ADULT_ENTERTAINMENT` | Adult Entertainment / Pornography
        `AGRICULTURE_FORESTRY_FISHING_HUNTING` | Agriculture
        `ARTS_ENTERTAINMENT_RECREATION` | Arts, Entertainment, and Recreation
        `AUCTIONS` | Auction Houses / Art Galleries
        `AUTOMOBILES` | Automobiles / Automotives
        `BLOCKCHAIN` | Blockchain Technology
        `CONSTRUCTION` | Construction
        `CRYPTO` | Crypto Services and Products (Mining, Exchange, Broker)
        `DRUGS` | Illicit Drugs / Drug Paraphernalia
        `E_COMMERCE` | E-Commerce
        `EDUCATIONAL_SERVICES` | Educational Services
        `EXPORT_IMPORT` | Export / Import Companies
        `FINANCE_INSURANCE` | Other Financial & Insurance Services (Not Referenced Elsewhere)
        `FINANCIAL_INSTITUTION` | Financial Institution
        `GAMBLING` | Gaming, Gambling, Casinos, or Sports Betting
        `HEALTH_CARE_SOCIAL_ASSISTANCE` | Health Care and Social Assistance
        `HEDGE_FUND` | Pooled Investment Vehicle / Investment Fund / Hedge Fund
        `INFORMATION` | Information, Communications, and Media
        `INSURANCE` | Insurance
        `INVESTMENT` | Investment
        `MANAGEMENT_OF_COMPANIES_ENTERPRISES` | Management of Companies & Enterprises (Holding Companies)
        `MANUFACTURING` | Manufacturing
        `MARKET_MAKER` | Market Maker / Proprietary Trading
        `MINING` | Oil & Gas
        `MONEY_SERVICE_BUSINESS` | Money Services Business / Money Transmitters (including ATMs)
        `NON_PROFIT` | Non-Profit, Charity or Political Organizations
        `OTHER_SERVICES` | Other
        `PRECIOUS_METALS` | Jewelry or Precious Metals (Mining, Transportation, Dealing or Retail)
        `PROFESSIONAL_SCIENTIFIC_TECHNICAL_SERVICES` | Professional Services (Consulting, Legal, Accounting, etc.)
        `PUBLIC_ADMINISTRATION` | Public or Government Services
        `RANSOMWARE` | Ransomware / Facilitators of Ransomware Transactions
        `REAL_ESTATE_RENTAL_LEASING` | Real Estate and Rental and Leasing
        `REGISTERED_INVESTMENT_ADVISOR` | Registered Investment Advisor
        `RETAIL_TRADE` | Retail Trade
        `SHELL_BANK` | Shell Banks or Shell Companies
        `STO_ISSUER` | Security Token Offering (STO) Issuer
        `TRANSPORTATION_WAREHOUSING` | Transportation and Services
        `TRAVEL_TRANSPORT` | Travel, Accomodation or Transport
        `UTILITIES` | Utilities
        `WEAPONS` | Weapons or Arms (Manufacturing, Sales or Transportation)
        `WHOLESALE_TRADE` | Wholesale Trade

        Notes:
        - `INVESTMENT` is only supported by the institution type `TRUST`.
        - All other subtypes are only supported by types `CORPORATION`, `LLC` and `PARTNERSHIP`.

        #### Prohibited Institution Subtypes

        Paxos prohibits certain types of business activity (“Prohibited Businesses”) in accordance with its Compliance policies.
        The following non-exhaustive list is representative of the type of activity that Paxos prohibits on its platform.
        By creating a Paxos Identity, Paxos customers agree not to use Paxos services in connection with any of the following Prohibited Businesses.

        - `ADULT_ENTERTAINMENT`
        - `DRUGS`
        - `RANSOMWARE`
        - `SHELL_BANK`
        - `WEAPONS`

        #### Shared Validations Across All Institution Types

        Field | Notes
        ---|---
        cip_id | One of EIN, REGISTRATION_NUMBER, SSN, ITIN. SSN and ITIN are only supported for passthrough/revocable entities.
        tax_details | Automatically populated if the cip_id_type is SSN, ITIN or EIN.
        tax_details_not_required | Can be set for non-US institutions where tax details are not required.
        metadata | Optional
        ref_id | Optional

        #### Specifying Institution Members and Their Roles

        Field | Notes
        ---|---
        identity_id | Required
        roles | Required.
        ownership | Optional. Must be between 0 and 100
        position | Optional

        Note
        See supported institution types for details on which roles are supported by which institution type.

        #### Fields Required for Trusts

        Type | Fields
        ---|---
        Required | name, cip_id, cip_id_type, cip_id_country, institution_type, institution_sub_type, business_address, govt_registration_date
        Optional | phone_number, email, incorporation_address, regulation_status, trading_type, listed_exchange, ticker_symbol, parent_institution_name, regulator_jurisdiction, regulator_name, regulator_register_number

        Notes
        Fields not listed are forbidden in the request. `institution_type` must be set to TRUST. `institution_sub_type` must be set to Investment.
        `incorporation_address` is required for Trusts where their cip_id_type is not SSN or ITIN.

        ##### Example Request for a Trust
        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"institution_members": [{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "33ece656-eef1-43b5-a851-b6b9099089a5",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["GRANTOR"]
        &nbsp;&nbsp;&nbsp;&nbsp;},
        &nbsp;&nbsp;&nbsp;&nbsp;{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "44ece656-eef1-43b5-a851-b6b9099089a6",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["TRUSTEE"]
        &nbsp;&nbsp;&nbsp;&nbsp;}],
        &nbsp;&nbsp;"institution_details": {
        &nbsp;&nbsp;&nbsp;&nbsp;"name": "Trust A",
        &nbsp;&nbsp;&nbsp;&nbsp;"business_address": {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"country": "United States",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"address1": "1 Example St",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"city": "New York",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"province": "NY",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"zip_code": "10001"
        &nbsp;&nbsp;&nbsp;&nbsp;},
        &nbsp;&nbsp;&nbsp;&nbsp;"email": "institution_a@acorp.com",
        &nbsp;&nbsp;&nbsp;&nbsp;"institution_type": "CORPORATION",
        &nbsp;&nbsp;&nbsp;&nbsp;"institution_sub_type": "HEDGE_FUND",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id": "11-1111111",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_type": "EIN",
        &nbsp;&nbsp;&nbsp;&nbsp;"cip_id_country": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"govt_registration_date": "2021-04-14T00:00:00Z",
        &nbsp;&nbsp;&nbsp;&nbsp;"incorporation_address": {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"country": "United States",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"address1": "1 Example St",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"city": "New York",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"province": "NY",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"zip_code": "10001"
        &nbsp;&nbsp;&nbsp;&nbsp;},
        &nbsp;&nbsp;&nbsp;&nbsp;"regulation_status": "US_REGULATED",
        &nbsp;&nbsp;&nbsp;&nbsp;"trading_type": "PUBLIC",
        &nbsp;&nbsp;&nbsp;&nbsp;"listed_exchange": "NASDAQ",
        &nbsp;&nbsp;&nbsp;&nbsp;"ticker_symbol": "ABC",
        &nbsp;&nbsp;&nbsp;&nbsp;"regulator_name": "SEC",
        &nbsp;&nbsp;&nbsp;&nbsp;"regulator_jurisdiction": "USA",
        &nbsp;&nbsp;&nbsp;&nbsp;"regulator_register_number": "111-111111"
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        #### Fields Required for Institutions (excluding Trusts and Registered Investment Advisors)

        Type | Fields
        ---|---
        Required | name, cip_id, cip_id_type, cip_id_country, institution_type, institution_sub_type, business_address, incorporation_address, govt_registration_date, regulation_status, trading_type
        Optional | phone_number, email, listed_exchange, ticker_symbol, parent_institution_name, regulator_jurisdiction, regulator_name, regulator_register_number

        #### Creating Financially Regulated Institutions
        Please refer to the following table for creating institutions which are financially regulated.

        regulation_status | Notes
        ---|---
        US_REGULATED | Institution financially regulated in the US
        INTL_REGULATED | Institution financially regulated by an international entity
        NON_REGULATED | Non-financially regulated institution

        Note that each category of `regulation_status` then has additional validations tied to `trading type` and other required fields.

        regulation_status | trading_type | fields required | Notes
        ---|---|---|---
        US_REGULATED | PRIVATE | regulator_name, regulator_jurisdiction, regulator_register_number | Not publicly traded
        US_REGULATED | PUBLIC | listed_ exchange, ticker_symbol, regulator_name, regulator_jurisdiction, regulator_register_number | Publicly traded
        US_REGULATED | PUBLICLY_TRADED_SUBSIDIARY | listed_exchange, ticker_symbol, regulator_name, regulator_jurisdiction, regulator_register_number, parent_institution_name | Subsidiary of a publicly traded company
        INTL_REGULATED | PRIVATE | regulator_name, regulator_jurisdiction, regulator_register_number | Not publicly traded
        INTL_REGULATED | PUBLIC | listed_ exchange, ticker_symbol, regulator_name, regulator_jurisdiction, regulator_register_number | Publicly traded
        INTL_REGULATED | PUBLICLY_TRADED_SUBSIDIARY | listed_exchange, ticker_symbol, regulator_name, regulator_jurisdiction, regulator_register_number, parent_institution_name | Subsidiary of a publicly traded company
        NON_REGULATED | PRIVATE | PRIVATE | Not publicly traded
        NON_REGULATED | PUBLIC | listed_exchange, ticker_symbol | Publicly traded

        #### Fields required for Registered Investment Advisors (RIA)

        RIAs are a special sub-type of Institution. Usage of this sub-type requires prior authorization and approval from Paxos.

        Notes
        `institution_sub_type` must be set to REGISTERED_INVESTMENT_ADVISOR. The list of required and optional fields below varies slightly from other supported institutions
        while certain fields are optional (e.g. trading_type), if they are specified in the request, their input will been validated

        Type | Fields
        ---|---
        Required | name, cip_id, cip_id_type, cip_id_country, institution_type, institution_sub_type, business_address, regulation_status, regulator_jurisdiction, regulator_name, regulator_register_number
        Optional | phone_number, email, listed_exchange, ticker_symbol, parent_institution_name, incorporation_address, govt_registration_date, trading_type
      operationId: CreateIdentity
      requestBody:
        content:
          application/json:
            examples:
              Create Person Identity:
                value:
                  person_details:
                    verifier_type: PASSTHROUGH
                    passthrough_verifier_type: JUMIO
                    passthrough_verified_at: 2021-06-16T09:28:14Z
                    first_name: John
                    last_name: Doe
                    date_of_birth: 1980-01-01
                    phone_number: +1 555 678 1234
                    email: example@somemail.org
                    cip_id: 111-11-1234
                    cip_id_type: SSN
                    cip_id_country: USA
                    nationality: USA
                    address:
                      country: USA
                      address1: 1 Example St
                      city: New York
                      province: NY
                      zip_code: "10001"
                    metadata:
                      custom_property1: custom value 1
                      custom_property2: custom value 2
                  ref_id: 33ece656-eef1-43b5-a851-b6b9099089a5
              Create Institutional Identity:
                value:
                  institution_members:
                  - identity_id: a81d4cf9-da6d-40ff-9366-0405aedfd31e
                    roles:
                    - GRANTOR
                  - identity_id: e458c723-edfa-478e-a01c-939707c0be9f
                    roles:
                    - TRUSTEE
                  - identity_id: b11242ea-5772-4970-934b-6336540ded05
                    roles:
                    - BENEFICIAL_OWNER
                  institution_details:
                    name: Institution A
                    institution_type: TRUST
                    institution_sub_type: INVESTMENT
                    cip_id: 12-9569897
                    cip_id_type: EIN
                    cip_id_country: USA
                    govt_registration_date: 2021-04-14T00:00:00Z
                    business_address:
                      address1: 1 Example St
                      city: New York
                      country: USA
                      province: NY
                      zip_code: "10001"
                    incorporation_address:
                      address1: 1 Example St
                      city: New York
                      country: USA
                      province: NY
                      zip_code: "10001"
                    regulation_status: NON_REGULATED
                    trading_type: PRIVATE
                  ref_id: 33ece656-eef1-43b5-a851-b6b9099089a6
            schema:
              $ref: '#/components/schemas/CreateIdentityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Person Identity with Passthrough:
                  value:
                    created_at: 2022-02-15T05:46:50.957068Z
                    id: 36ae1728-c54a-4046-86df-8a413e0ab9b3
                    person_details:
                      additional_screening_status: PENDING
                      address:
                        address1: 1 Example St
                        city: New York
                        country: USA
                        province: NY
                        zip_code: "10001"
                      cip_id: 111-11-1234
                      cip_id_country: USA
                      cip_id_type: SSN
                      date_of_birth: 1980-01-01
                      first_name: John
                      govt_id: 111-11-1234
                      govt_id_type: SSN
                      id_verification_status: APPROVED
                      last_name: Doe
                      nationality: USA
                      passthrough_verified_at: 2021-06-16T09:28:14Z
                      passthrough_verifier_type': JUMIO
                      sanctions_verification_status: PENDING
                      verifier_type: PASSTHROUGH
                    ref_id: 33ece656-eef1-43b5-a851-b6b9099089a5
                    summary_status: PENDING
                    tax_details:
                    - tax_payer_country: USA
                      tax_payer_id: 111-11-1234
                    type: PERSON
                    updated_at: 2022-02-15T05:46:50.957068Z
                Create Institutional Identity:
                  value:
                    created_at: 2022-02-15T22:47:06.808912Z
                    id: 09d32f7b-fe0c-47d0-9968-89267909320a
                    institution_details:
                      additional_screening_status: PENDING
                      business_address:
                        address1: 1 Example St
                        city: New York
                        country: USA
                        province: NY
                        zip_code: "10001"
                      cip_id: 12-9876543
                      cip_id_country: USA
                      cip_id_type: EIN
                      document_verification_status: PENDING
                      govt_registration_date: 2021-04-14T00:00:00Z
                      incorporation_address:
                        address1: 1 Example St
                        city: New York
                        country: USA
                        province: NY
                        zip_code: "10001"
                      institution_sub_type: INVESTMENT
                      institution_type: TRUST
                      name: Institution A
                      regulation_status: NON_REGULATED
                      sanctions_verification_status: PENDING
                      trading_type: PRIVATE
                    institution_members:
                    - identity_id: a81d4cf9-da6d-40ff-9366-0405aedfd31e
                      roles:
                      - GRANTOR
                    - identity_id: e458c723-edfa-478e-a01c-939707c0be9f
                      roles:
                      - TRUSTEE
                    - identity_id: b11242ea-5772-4970-934b-6336540ded05
                      roles:
                      - BENEFICIAL_OWNER
                    ref_id: 33ece656-eef1-43b5-a851-b6b9099089a6
                    summary_status: PENDING
                    tax_details:
                    - tax_payer_country: USA
                      tax_payer_id: 12-9876543
                    type: INSTITUTION
                    updated_at: 2022-02-15T22:47:06.808912Z
              schema:
                $ref: '#/components/schemas/Identity'
          description: A successful response.
        "409":
          content:
            application/json:
              examples:
                Create Identity with the same SSN:
                  value:
                    type: https://developer.paxos.com/docs/v2/problems/already-exists
                    title: Already Exists
                    status: 409
                    detail: "duplicate (cip_id, cip_id_type, cip_id_country) provided"
                    meta:
                      existing:
                        id: 36ae1728-c54a-4046-86df-8a403e0ab9b3
                Duplicate fef_id provided:
                  value:
                    type: https://developer.paxos.com/docs/v2/problems/already-exists
                    title: Already Exists
                    status: 409
                    detail: duplicate ref_id provided
                    meta:
                      existing:
                        id: c9560de1-835c-48fa-bd1a-e91da2ef770c
              schema:
                $ref: '#/components/schemas/Problem'
          description: Duplicate identity record
      security:
      - OAuth2:
        - identity:write_identity
      summary: Create Identity
      tags:
      - Identity
  /identity/identities/{identity_id}/documents:
    get:
      description: This endpoint enables you to get a list of all documents associated
        with an identity.
      operationId: ListIdentityDocuments
      parameters:
      - description: id associated with the identity
        explode: false
        in: path
        name: identity_id
        required: true
        schema:
          type: string
        style: simple
      - description: Add a list of pending document types for the identity
        explode: true
        in: query
        name: include_pending_docs
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Identity Documents:
                  value:
                    documents:
                    - file_id: e1959b03-8c3d-4bdd-9437-403ccf8772f5
                      name: test_file.png
                      document_types:
                      - OTHER_DOCUMENTS
                      - APPLICATION
                      created_at: 2023-07-07T23:03:19.170481Z
              schema:
                $ref: '#/components/schemas/ListIdentityDocumentsResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    detail: Identity with id f6b1365a-dc8e-4526-aa3f-e688826c36be
                      doesn't exist
                    status: 404
                    title: Not Found
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    detail: Forbidden
                    status: 403
                    title: Forbidden
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Permissions Denied
      security:
      - OAuth2:
        - identity:read_identity
      summary: List Identity Documents
      tags:
      - Identity Documents
    put:
      description: |-
        This endpoint enables you to receive a URL to upload a document to Paxos.
        When uploading a document one must specify the document type, you will receive a
        URL to upload a document into using a POST request. (see curl documentation)
      operationId: DocumentUpload
      parameters:
      - description: The id of the identity the document is associated with.
        explode: false
        in: path
        name: identity_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create Document Upload:
                value:
                  name: Proof_of_residence.jpg
                  document_types:
                  - PROOF_OF_RESIDENCY
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Document Upload:
                  value:
                    file_id: f190b163-208f-4d73-8deb-4fb8b24add00
                    name: Proof_of_residence.jpg
                    upload_url: https://s3.amasonaws.com/pax...cec3f64fe20348685a
              schema:
                $ref: '#/components/schemas/DocumentUploadResponse'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    detail: document storage not enabled
                    status: 403
                    title: Forbidden
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Permissions Denied
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    detail: identity does not exist
                    status: 404
                    title: Not Found
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        "400":
          content:
            application/json:
              examples:
                Invalid Request:
                  value:
                    detail: "must provide a file name, up to 260 characters"
                    status: 400
                    title: Bad Request
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "409":
          content:
            application/json:
              examples:
                Duplicate File Name:
                  value:
                    detail: file named "Proof_of_residence.jpg" already exists
                    meta:
                      existing:
                        name: Proof_of_residence.jpg
                    status: 409
                    title: Already Exists
                    type: https://developer.paxos.com/docs/v2/problems/already-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Already Exists
      security:
      - OAuth2:
        - identity:write_identity
      summary: Document Upload
      tags:
      - Identity Documents
  /identity/identities/{id}:
    get:
      description: |-
        Get an identity by ID. By default, the identity details (person_details or institution_details) will not be returned.
        Set `?include_details=true` to receive them in the response. For institution type identities,
        members will not be returned in the default response. Set `?include_institution_members=true` to get the members.

        An identity is allowed to transact on the Paxos platform when `summary_status` is `"APPROVED"`.
      operationId: GetIdentity
      parameters:
      - description: id associated with the identity
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "query param; details are encrypted, so we do not want to include\
          \ them by default"
        explode: true
        in: query
        name: include_details
        required: false
        schema:
          type: boolean
        style: form
      - description: query param; to include institution members for institution identity
        explode: true
        in: query
        name: include_institution_members
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
          description: A successful response.
      security:
      - OAuth2:
        - identity:read_identity
      summary: Get Identity
      tags:
      - Identity
    put:
      description: |-
        This enables you to update an existing identity with new information. Please note that:
        - Updating any field other than `set_user_disabled`, `metadata`, `ref_id`, or `is_merchant` will transition the identity to a PENDING status.
        This will restrict the identity until it has been re-verified.
        - Setting `set_user_disabled` to `true` will disable the identity, limiting its ability to be used within
        the Paxos platform.
        - Setting `is_merchant` to `true` will indicate that this identity is a merchant.
        - Details of the identity can be updated by providing `person_details` or `institution_details` depending upon the type.
        - You can add, update or remove tax_details by providing the `tax_details` list. The tax_details will be updated to exactly
        comprise the given list

        Note: Identity conversion from person to institution type or vice-versa is not permitted.
      operationId: UpdateIdentity
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_identity
      summary: Update Identity
      tags:
      - Identity
  /identity/identities/{id}/retry-id-verification:
    post:
      description: |-
        This endpoint enables you to retry the ID verification for an identity with verifier type PAXOS
        by setting the id verification status to PENDING and returning a new id verification URL.
      operationId: RetryIdVerification
      parameters:
      - description: id associated with the identity
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryIdVerificationResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_identity
      summary: Retry Id Verification
      tags:
      - Identity Credentials
  /identity/verifier-credentials:
    post:
      description: |-
        Set the credentials used for automatic verification with a supported identity provider. This applies for only
        `PERSON` type identities.

        ### Supported Identity Providers

        Provider | verifier_type | Verifier Scope
        ---|---|---
        Jumio | JUMIO | Retrieve & Delete
      operationId: SetVerifierCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVerifierCredentialsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVerifierCredentialsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_verifier_credentials
      summary: Set Verifier Credentials
      tags:
      - Identity Credentials
  /identity/institution-members:
    post:
      description: |-
        Add one or more institution members to a given institution.

        Adding new members doesn't affect existing members. For example, if an institution has three
        members, and adds two members using this API, then the institution would end up with five total members.

        For details on the properties that can be specified when creating institution members,
        see [Specifying Institution Members and Their Roles](#specifying-institution-members-and-their-roles).
      operationId: AddInstitutionMembers
      requestBody:
        content:
          application/json:
            examples:
              Add Institution Members:
                value:
                  institution_id: 2908fa8b-427a-4089-b2cf-17654c604623
                  members:
                  - identity_id: 31abdcbd-2801-4dbc-8986-adec3828391b
                    roles:
                    - GRANTOR
                  - identity_id: 58def33e-b68f-47d3-bc2b-62b1f68f21e5
                    roles:
                    - TRUSTEE
            schema:
              $ref: '#/components/schemas/AddInstitutionMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Add Institution Members:
                  value:
                    institution_id: 2908fa8b-427a-4089-b2cf-17654c604623
                    members:
                    - identity_id: 31abdcbd-2801-4dbc-8986-adec3828391b
                      roles:
                      - GRANTOR
                      id: 23ebbcd3-0fe6-48c8-9a2c-a35572b0e8ba
                    - identity_id: 58def33e-b68f-47d3-bc2b-62b1f68f21e5
                      roles:
                      - TRUSTEE
                      id: a0a0d270-0dd1-40b7-85ce-de713c47bcec
              schema:
                $ref: '#/components/schemas/AddInstitutionMembersResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_identity
      summary: Add Institution Members
      tags:
      - Institution Members
  /identity/institution-members/{id}:
    delete:
      description: Removes an institution member from an institution.
      operationId: DeleteInstitutionMember
      parameters:
      - description: The institution member ID that should be removed from the institution.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstitutionMemberResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_identity
      summary: Remove Institution Member
      tags:
      - Institution Members
  /identity/accounts:
    get:
      description: |-
        List accounts with pagination. Every response will contain a `next_page` field,
        as long as the end of the list has not been reached. Pass this value into the `page_cursor` field of the next request
        to retrieve the next page of results.
      operationId: ListAccounts
      parameters:
      - explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optionally filter by primary identity identity.
        explode: true
        in: query
        name: identity_id
        required: false
        schema:
          type: string
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:read_account
      summary: List Accounts
      tags:
      - Accounts
    post:
      description: |-
        Create an account for a given identity, via the `identity_id` field.
        This identity is the primary owner of the account for all tax-related purposes.

        To track user balances using Paxos [Profiles](#tag/Profiles), use `create_profile=true` when creating the account.
        Once an account has been created, it is not possible to associate it with a [Profile](#tag/Profiles).

        ### Account Members

        In addition to the primary owner, other identities may be associated with the account, by using `members`.
        The identity on the account is treated as a BENEFICIAL_OWNER.

        To add a financial advisor to an account, add a member with the FINANCIAL_ADVISOR role.

        #### Example
        This example request creates a joint account for John and Jane Doe. John has identity_id=82c338f4-3cb7-4d9b-be2a-4b077c82ee3a,
        and Jane has identity_id=0f5d8475-33f3-4ebd-88a0-66dedc2581c1. John is the primary owner of the account for tax-purposes, but Jane
        is a full beneficial owner.

        Additionally, this account has an associated financial advisor with identity_id=0d26f878-298e-4d47-81be-cdf4e982a3d3.

        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"account": {
        &nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "82c338f4-3cb7-4d9b-be2a-4b077c82ee3a",
        &nbsp;&nbsp;&nbsp;&nbsp;"members": [{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0f5d8475-33f3-4ebd-88a0-66dedc2581c1",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["BENEFICIAL_OWNER"]
        &nbsp;&nbsp;&nbsp;&nbsp;}, {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0d26f878-298e-4d47-81be-cdf4e982a3d3",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["FINANCIAL_ADVISOR"]
        &nbsp;&nbsp;&nbsp;&nbsp;}]
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        ### Fields

        Any fields not listed are forbidden in this request.

        Field | Notes
        ---|---
        identity_id | Required
        description | Optional
        metadata | Optional
        ref_id | Optional
        members | Optional
      operationId: CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: e69e4e31-6dca-4a46-bb85-af40b5fe2d59
                identity_id: 82c338f4-3cb7-4d9b-be2a-4b077c82ee3a
                ref_id: fec36070-4c23-48ac-9ee1-df338b8233fc
                description: Individual account for John Doe
                metadata:
                  custom_field: custom_value
                admin_disabled: false
                user_disabled: false
              schema:
                $ref: '#/components/schemas/Account'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_account
      summary: Create Account
      tags:
      - Accounts
    put:
      description: |-
        This enables you to update an existing account with new information. Please refer to the following
        table for fields that can be updated via this endpoint.

        Field | Notes
        ---|---
        account.id | Required
        account.description | Optional
        account.ref_id | Optional
        account.metadata | Optional. This will overwrite any existing metadata added to the account.
        account.members | Optional. The only roles that can be added/removed are `FINANCIAL_ADVISOR` or `AUTHORIZED_USER.` You must always specify the full members object as we do not currently support differential member updates.
        set_user_disabled | Optional. Setting this to `true` will disable the account, limiting its ability to be used within the Paxos platform.

        #### Example Requests
        #### Disabling an account

        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"set_user_disabled": true,
        &nbsp;&nbsp;"account": {
        &nbsp;&nbsp;&nbsp;&nbsp;"id": "82c338f4-3cb7-4d9b-be2a-4b077c82ee3a",
        &nbsp;&nbsp;&nbsp;&nbsp;"description": "Account Description",
        &nbsp;&nbsp;&nbsp;&nbsp;"ref_id": "82c338f4-3cb7",
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        ### Adding an account member
        To retain the existing account members and add a new account member, the `members` field must contain the existing account members and the
        new member. The below example adds an `AUTHORIZED_USER` to the account.

        In order to add account members while leaving existing account members unaffected, clients
        should use the [Add Account Members](#operation/AddAccountMembers) API.

        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"account": {
        &nbsp;&nbsp;&nbsp;&nbsp;"id": "82c338f4-3cb7-4d9b-be2a-4b077c82ee3a",
        &nbsp;&nbsp;&nbsp;&nbsp;"members": [{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0f5d8475-33f3-4ebd-88a0-66dedc2581c1",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["BENEFICIAL_OWNER"]
        &nbsp;&nbsp;&nbsp;&nbsp;}, {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0d26f878-298e-4d47-81be-cdf4e982a3d3",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["FINANCIAL_ADVISOR"]
        &nbsp;&nbsp;&nbsp;&nbsp;}, {
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "012k23eb-298e-4d47-81be-cdf4e982a3d3",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["AUTHORIZED_USER"]
        &nbsp;&nbsp;&nbsp;&nbsp;}]
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        ### Removing an account member
        To remove an existing account member and retain other needed members, the `members` field must contain
        the existing account members without the account member you'd like to remove. The below example removes an `AUTHORIZED_USER` from the account.

        Note, this API requires the `members` array to have at least one element. In order to delete all members
        from an account, clients should use the [Delete Account Member](#operation/DeleteAccountMember) API.

        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"account": {
        &nbsp;&nbsp;&nbsp;&nbsp;"id": "82c338f4-3cb7-4d9b-be2a-4b077c82ee3a",
        &nbsp;&nbsp;&nbsp;&nbsp;"members": [{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0f5d8475-33f3-4ebd-88a0-66dedc2581c1",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["BENEFICIAL_OWNER"]
        &nbsp;&nbsp;&nbsp;&nbsp;}]
        &nbsp;&nbsp;}
        }
        </code>
        </pre>

        ### Updating an account members' roles
        To update an account members' roles, the `members` field must contain all the existing members with their roles along
        with the additional role that you'd like to add or remove. The below example adds the `FINANCIAL_ADVISOR` role to an member that is already a `BENEFICIAL_OWNER`.

        <!--indentation does not work in swagger code blocks-->
        <pre>
        <code>
        {
        &nbsp;&nbsp;"account": {
        &nbsp;&nbsp;&nbsp;&nbsp;"id": "82c338f4-3cb7-4d9b-be2a-4b077c82ee3a",
        &nbsp;&nbsp;&nbsp;&nbsp;"members": [{
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"identity_id": "0f5d8475-33f3-4ebd-88a0-66dedc2581c1",
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"roles": ["BENEFICIAL_OWNER", "FINANCIAL_ADVISOR"]
        &nbsp;&nbsp;&nbsp;&nbsp;}]
        &nbsp;&nbsp;}
        }
        </code>
        </pre>
      operationId: UpdateAccount
      requestBody:
        content:
          application/json:
            example:
              account:
                id: 79c27a0e-46a2-4276-9769-e1ebc055fa72
                members:
                - identity_id: 11a3122a-0c50-4950-9934-2ad48a782b78
                  roles:
                  - FINANCIAL_ADVISOR
                - identity_id: 08ba6b70-bcc0-4e4a-a67f-1d28842dedfc
                  roles:
                  - AUTHORIZED_USER
                - identity_id: 2dedfc70-a67f-4e4a-bcc0-1d288408ba6b
                  roles:
                  - BENEFICIAL_OWNER
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                created_at: 2014-02-20 04:22:22 UTC
                id: 79c27a0e-46a2-4276-9769-e1ebc055fa72
                identity_id: 0acd56b7-140b-4b29-83e4-7e717f03afd9
                members:
                - identity_id: 11a3122a-0c50-4950-9934-2ad48a782b78
                  roles:
                  - FINANCIAL_ADVISOR
                - identity_id: 08ba6b70-bcc0-4e4a-a67f-1d28842dedfc
                  roles:
                  - AUTHORIZED_USER
                - identity_id: 2dedfc70-a67f-4e4a-bcc0-1d288408ba6b
                  roles:
                  - BENEFICIAL_OWNER
                summary_status: PENDING
                updated_at: 2022-02-24 04:20:22 UTC
              schema:
                $ref: '#/components/schemas/Account'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_account
      summary: Update Account
      tags:
      - Accounts
  /identity/accounts/{id}:
    get:
      operationId: GetAccount
      parameters:
      - description: uuid id of account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: A successful response.
      security:
      - OAuth2:
        - identity:read_account
      tags:
      - Accounts
  /identity/account-members:
    post:
      description: |-
        Add one or more account members to a given account.

        The account members added by this API do not affect existing account members. For example,
        if an account has two members, and one member is added using this API, then the account will
        end up with three members.

        For more information on properties of account members, see [Account Members](#account-members).
      operationId: AddAccountMembers
      requestBody:
        content:
          application/json:
            examples:
              Add Account Members:
                value:
                  account_id: 79c27a0e-46a2-4276-9769-e1ebc055fa72
                  members:
                  - identity_id: 11a3122a-0c50-4950-9934-2ad48a782b78
                    roles:
                    - FINANCIAL_ADVISOR
                  - identity_id: 08ba6b70-bcc0-4e4a-a67f-1d28842dedfc
                    roles:
                    - AUTHORIZED_USER
            schema:
              $ref: '#/components/schemas/AddAccountMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Add Institution Members:
                  value:
                    account_id: 79c27a0e-46a2-4276-9769-e1ebc055fa72
                    members:
                    - identity_id: 11a3122a-0c50-4950-9934-2ad48a782b78
                      roles:
                      - FINANCIAL_ADVISOR
                      id: 01516495-031a-4c6c-b277-5734ea9cb99c
                    - identity_id: 08ba6b70-bcc0-4e4a-a67f-1d28842dedfc
                      roles:
                      - AUTHORIZED_USER
                      id: 1039d953-808f-495f-902d-c15480942885
              schema:
                $ref: '#/components/schemas/AddAccountMembersResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_account
      summary: Add Account Members
      tags:
      - Account Members
  /identity/account-members/{id}:
    delete:
      description: Removes an account member from an account.
      operationId: DeleteAccountMember
      parameters:
      - description: The account member ID that should be removed from the account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountMemberResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_account
      summary: Remove Account Member
      tags:
      - Account Members
  /identity/identities/{id}/sandbox-status:
    put:
      description: |-
        Set the various statuses for the given Identity. To enable the Person Identity to transact,
        set both `id_verification_status` and `sanctions_verification_status` to `"APPROVED"`.
        To enable the Institution to transact, set both `sanctions_verification_status` to `"APPROVED"`.
        This endpoint also allows you to set the statuses for `document_verification_status` and
        `additional_screening_status`
      operationId: SandboxSetIdentityStatus
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxSetIdentityStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxSetIdentityResponse'
          description: A successful response.
      security:
      - OAuth2:
        - identity:write_identity
      summary: Sandbox Set Identity Status
      tags:
      - Sandbox Identity
  /all-markets/prices:
    get:
      description: |-
        Retrieve current prices, as well as 24 hour prior (yesterday) prices, for the specified markets.
        Any single market that failed to be retrieved is excluded from the response.
      operationId: ListPrices
      parameters:
      - description: ""
        explode: true
        in: query
        name: markets
        required: true
        schema:
          items:
            enum:
            - ETHUSD
            - BTCUSD
            - PAXGUSD
            - BCHUSD
            - LTCUSD
            - USDPUSD
            - LINKUSD
            - MATICUSD
            - AAVEUSD
            - UNIUSD
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    prices:
                    - market: BTCUSD
                      current_price: "16627.62"
                      yesterday_price: "16703.29"
                      snapshot_at: 2023-01-03T18:27:40.294528Z
                    - market: ETHUSD
                      current_price: "1206.93"
                      yesterday_price: "1216.55"
                      snapshot_at: 2023-01-03T18:27:40.294528Z
              schema:
                $ref: '#/components/schemas/ListPricesResponse'
          description: A successful response.
      summary: List Prices
      tags:
      - Pricing
  /all-markets/ticker:
    get:
      description: |-
        Retrieves order book statistics of the exchange for all markets over the last 24 hours and from midnight UTC until current time.

        Please note: List Tickers displays pricing from external venues when the itBit exchange is not available.
      operationId: ListTickers
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - market: BTCUSD
                    best_bid:
                      price: "9245.25"
                      amount: "0.23124212"
                    best_ask:
                      price: "9274.00"
                      amount: "1.82341000"
                    last_execution:
                      price: "9273.75"
                      amount: "0.00002341"
                    last_day:
                      high: "10425.25"
                      low: "8923.50"
                      open: "9324.50"
                      volume: "1423.12314232"
                      start_time: 2020-01-17T18:36:08.737Z
                      end_time: 2020-01-18T18:36:08.737Z
                    today:
                      high: "10125.25"
                      low: "9100.25"
                      open: "9502.50"
                      volume: "872.12314232"
                      start_time: 2020-01-18T00:00:00.000Z
                      end_time: 2020-01-18T18:36:08.737Z
                    snapshot_at: 2020-01-17T18:36:08.737Z
                  - market: ETHUSD
                    best_bid:
                      price: "136.25"
                      amount: "0.14532168"
                    best_ask:
                      price: "138.00"
                      amount: "1.72742000"
                    last_execution:
                      price: "137.75"
                      amount: "0.00003156"
                    last_day:
                      high: "136.75"
                      low: "135.25"
                      open: "135.25"
                      volume: "423.67235137"
                      start_time: 2020-01-17T18:36:08.737Z
                      end_time: 2020-01-18T18:36:08.737Z
                    today:
                      high: "135.15"
                      low: "134.13"
                      open: "134.13"
                      volume: "472.12314232"
                      start_time: 2020-01-18T00:00:00.000Z
                      end_time: 2020-01-18T18:36:08.737Z
                    snapshot_at: 2020-01-17T18:36:08.737Z
              schema:
                $ref: '#/components/schemas/ListTickersResponse'
          description: A successful response.
      summary: List Tickers
      tags:
      - Pricing
  /executions:
    get:
      description: |-
        Retrieves full details of underlying executions with optional filters.
        Notes:
        - This endpoint returns a maximum of 1000 items per page.
        - Filtering options are `account_id`, `profile_id` or neither (all executions).
      operationId: ListExecutions
      parameters:
      - description: Filter executions by the Profile ID associated with the orders.
        explode: true
        in: query
        name: profile_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter executions by the Account ID associated with the orders.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter executions for a single order ID.
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: Excludes executions after the given ID.
        explode: true
        in: query
        name: since_execution_id
        required: false
        schema:
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                    - execution_id: "12422531"
                      order_id: cb379c30-a9f8-4685-aa38-47d6e87ff09d
                      executed_at: 2022-08-01T21:01:27.217Z
                      market: BTCUSD
                      side: BUY
                      amount: "0.00432539"
                      price: "23119.25"
                      commission: "0.34999920465125"
                      commission_asset: USD
                      rebate: "0"
                      rebate_asset: USD
                      gross_trade_amount: "99.9997727575"
                    next_page_cursor: CgwI-Iu6iQYQgPGVoQEQg5v2BQ
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_order
      summary: List Executions
      tags:
      - Orders
  /markets:
    get:
      description: Retrieves the set of current available markets for trading with
        details.
      operationId: ListMarkets
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    markets:
                    - market: BTCUSD
                      base_asset: BTC
                      quote_asset: USD
                      tick_rate: "0.25"
              schema:
                $ref: '#/components/schemas/ListMarketsResponse'
          description: A successful response.
      summary: List Markets
      tags:
      - Market Data
  /markets/{market}/historical-prices:
    get:
      description: |-
        Retrieves a set of average prices at a certain increment of time for the requested market.
        This endpoint is suitable for retrieving historical average price trends where price precision, execution, and
        other detailed information is not required.
        To control the count, use either  `increment` or `max_data_points`.
        List Historical Prices returns an error when an unexpected value is given, or when `increment` and
         `max_data_points` are both given or omitted.

        When `range.begin` is omitted, the first data point shows the mid price, the average of the order book best bid
         and ask price, or the earliest available date. It is possible to set `range.begin` to a future date without error.

        When `range.end` is omitted, the last data point will display current mid price (average of order book best bid
         and best ask) at the request timestamp. It is possible to set `range.end` to a future date without error.

        When `pagination.limit` is omitted, the pagination limit will default to return the first 100 items.
        If the pagination limit is set, the API will return up to the limit in one response. The pagination limit max is 1,000.

        Time-series items are returned in chronological (ascending) order. All timestamps are in UTC.
      operationId: ListHistoricalPrices
      parameters:
      - description: Market of Order Book.
        explode: false
        in: path
        name: market
        required: true
        schema:
          enum:
          - ETHEUR
          - ETHUSD
          - BTCEUR
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - ETHGBP
          - BTCGBP
          - LTCGBP
          - BCHGBP
          - USDPUSD
          - ETHBRL
          - BTCBRL
          - LTCBRL
          - BCHBRL
          - USDPGBP
          - USDPBRL
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          - AAVEMXN
          - BCHMXN
          - BTCMXN
          - ETHMXN
          - LTCMXN
          - USDPMXN
          - AAVEEUR
          - BCHEUR
          - LTCEUR
          - LINKEUR
          - MATICEUR
          - PAXGEUR
          - SOLEUR
          - USDPEUR
          - UNIEUR
          - PYUSDEUR
          type: string
        style: simple
      - description: |-
          Maximum number of data points to return.

          The time frame of the increments will be inferred by finding the most granular increment without breaching the `max_data_points` value based on a set of recording data points.
        explode: true
        in: query
        name: max_data_points
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return
        explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results to skip
        explode: true
        in: query
        name: pagination.offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Time increment between prices. Returns data exclusive from `range.begin`\
          \ and `range.end`. Do not use with `max_data_points`, as this results in\
          \ an error."
        explode: true
        in: query
        name: increment
        required: false
        schema:
          enum:
          - ONE_MINUTE
          - FIVE_MINUTES
          - FIFTEEN_MINUTES
          - THIRTY_MINUTES
          - ONE_HOUR
          - TWO_HOURS
          - TWELVE_HOURS
          - ONE_DAY
          - ONE_WEEK
          - TWO_WEEKS
          - FOUR_WEEKS
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    market: BTCUSD
                    prices:
                    - average_price: "9245.50"
                      timestamp: 2020-01-17T18:36:00.000Z
                    - average_price: "9265.50"
                      timestamp: 2020-01-17T18:37:00.000Z
                    total_count: 50
              schema:
                $ref: '#/components/schemas/ListHistoricalPricesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:historical_prices
      summary: List Historical Prices
      tags:
      - Pricing
  /markets/{market}/order-book:
    get:
      description: Retrieves the full list of bids and asks of the order book at individual
        price levels with resting quantities per level.
      operationId: GetOrderBook
      parameters:
      - description: Market of Order Book.
        explode: false
        in: path
        name: market
        required: true
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - ETHBRL
          - BTCBRL
          - LTCBRL
          - BCHBRL
          - USDPGBP
          - USDPBRL
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          - AAVEMXN
          - BCHMXN
          - BTCMXN
          - ETHMXN
          - LTCMXN
          - USDPMXN
          - AAVEEUR
          - BCHEUR
          - LTCEUR
          - LINKEUR
          - MATICEUR
          - PAXGEUR
          - SOLEUR
          - USDPEUR
          - UNIEUR
          - PYUSDEUR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    market: BTCUSD
                    asks:
                    - price: "9240.25"
                      amount: "1.2341300"
                    - price: "9260.75"
                      amount: "0.8134231"
                    bids:
                    - price: "9220.50"
                      amount: "3.7441300"
                    - price: "9123.00"
                      amount: "0.2334231"
              schema:
                $ref: '#/components/schemas/GetOrderBookResponse'
          description: A successful response.
      summary: Get Order Book
      tags:
      - Market Data
  /markets/{market}/recent-executions:
    get:
      description: Retrieves the list of 2000 most recent executions by all users
        to occur in the order book.
      operationId: ListRecentExecutions
      parameters:
      - description: Market of the executions.
        explode: false
        in: path
        name: market
        required: true
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - ETHBRL
          - BTCBRL
          - LTCBRL
          - BCHBRL
          - USDPGBP
          - USDPBRL
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          - AAVEMXN
          - BCHMXN
          - BTCMXN
          - ETHMXN
          - LTCMXN
          - USDPMXN
          - AAVEEUR
          - BCHEUR
          - LTCEUR
          - LINKEUR
          - MATICEUR
          - PAXGEUR
          - SOLEUR
          - USDPEUR
          - UNIEUR
          - PYUSDEUR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                    - match_number: 5K8U4TTBKS1E
                      price: "9245.50"
                      amount: "0.23421231"
                      executed_at: 2020-01-17T18:36:38.737Z
                    - match_number: 5K8U4TTBKRIO
                      price: "9237.50"
                      amount: "1.68421231"
                      executed_at: 2020-01-17T18:36:52.737Z
              schema:
                $ref: '#/components/schemas/ListRecentExecutionsResponse'
          description: A successful response.
      summary: List Recent Executions
      tags:
      - Market Data
  /markets/{market}/ticker:
    get:
      description: Retrieves order book statistics of the exchange over the last 24
        hours and from midnight UTC until current time.
      operationId: GetTicker
      parameters:
      - description: Market of the Ticker.
        explode: false
        in: path
        name: market
        required: true
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - ETHBRL
          - BTCBRL
          - LTCBRL
          - BCHBRL
          - USDPGBP
          - USDPBRL
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          - AAVEMXN
          - BCHMXN
          - BTCMXN
          - ETHMXN
          - LTCMXN
          - USDPMXN
          - AAVEEUR
          - BCHEUR
          - LTCEUR
          - LINKEUR
          - MATICEUR
          - PAXGEUR
          - SOLEUR
          - USDPEUR
          - UNIEUR
          - PYUSDEUR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    market: BTCUSD
                    best_bid:
                      price: "9245.25"
                      amount: "0.23124212"
                    best_ask:
                      price: "9274.00"
                      amount: "1.82341000"
                    last_execution:
                      price: "9273.75"
                      amount: "0.00002341"
                    last_day:
                      high: "10425.25"
                      low: "8923.50"
                      open: "9324.50"
                      volume: "1423.12314232"
                      start_time: 2020-01-17T18:36:08.737Z
                      end_time: 2020-01-18T18:36:08.737Z
                    today:
                      high: "10125.25"
                      low: "9100.25"
                      open: "9502.50"
                      volume: "872.12314232"
                      start_time: 2020-01-18T00:00:00.000Z
                      end_time: 2020-01-18T18:36:08.737Z
                    snapshot_at: 2020-01-17T18:36:08.737Z
              schema:
                $ref: '#/components/schemas/TickerRecord'
          description: A successful response.
      summary: Get Ticker
      tags:
      - Market Data
  /orders:
    get:
      description: |-
        Retrieves full details of orders associated with a Profile ID, with optional filters.

        - Historical data prior to May 16, 2022 is unavailable.
        - Pagination Limit has a max of 1000. Pagination Offset is now deprecated and nonfunctional.
        - Filtering options are `account_id`, `profile_id` or neither (all orders).
      operationId: ListOrders
      parameters:
      - description: The profile associated with the orders.
        explode: true
        in: query
        name: profile_id
        required: false
        schema:
          type: string
        style: form
      - description: The account under which these orders are placed.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by the trading pair.
        explode: true
        in: query
        name: market
        required: false
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          type: string
        style: form
      - description: Filter by the status of the order.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - PENDING_SUBMISSION
          - SUBMITTED
          - OPEN
          - FILLED
          - CANCELLED
          - REJECTED
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: order_time.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: order_time.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The idempotence IDs provided during order creation.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor token for fetching the next page. If using this then do
          not use paginationLimit and paginationOffset fields.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return. If using this then do not use paginationLimit
          and paginationOffset fields.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                    - id: f190b163-208f-4d73-8deb-4fb8b24add00
                      profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                      ref_id: my-order-1
                      status: FILLED
                      market: ETHUSD
                      side: BUY
                      type: LIMIT
                      price: "190.23"
                      base_amount: "2.35781498"
                      quote_amount: "0"
                      metadata:
                        customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                      amount_filled: "2.35781498"
                      volume_weighted_average_price: "190.23"
                      time_in_force: GTC
                      is_triggered: false
                    - id: 81e26e1d-eddb-455a-8b44-e3d845432de7
                      profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                      ref_id: my-order-2
                      status: FILLED
                      market: BTCUSD
                      side: BUY
                      type: MARKET
                      price: "0"
                      base_amount: "0"
                      quote_amount: "500.00"
                      metadata:
                        customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                      amount_filled: "0.05142181"
                      volume_weighted_average_price: "9723.50"
                      time_in_force: FOK
                      is_triggered: false
                    next_page_cursor: CgsIxom6iQYQwO39XBDbsdVz
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_order
      summary: List Orders
      tags:
      - Orders
  /profiles/{profile_id}/executions:
    get:
      description: |-
        Retrieves full details of underlying executions for a profile id with optional filters.
        If pagination details are not set the response will default to 20 items. Additionally, this endpoint will return a maximum of 500 items per page.
      operationId: ListProfileExecutions
      parameters:
      - description: The ProfileId associated with the orders.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter executions for a single order id.
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: Excludes executions after this id.
        explode: true
        in: query
        name: since_execution_id
        required: false
        schema:
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: range.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                    - execution_id: "1600103"
                      order_id: 248ffda4-83a0-4033-a5bb-8929d523f59f
                      executed_at: 2020-01-17T18:36:08.737Z
                      market: BTCUSD
                      side: BUY
                      amount: "29579.67560314"
                      price: "9123.50"
                      commission: "17.747802"
                      commission_asset: USD
                      rebate: "0.00"
                      rebate_asset: USD
                    - execution_id: "1600104"
                      order_id: 248ffda4-83a0-4033-a5bb-8929d523f59f
                      executed_at: 2020-01-17T18:36:08.737Z
                      market: BTCUSD
                      side: SELL
                      amount: "29579.67560314"
                      price: "9123.50"
                      commission: "0"
                      commission_asset: USD
                      rebate: "8.873901"
                      rebate_asset: USD
                    next_page_cursor: CgsIxom6iQYQwO39XBDbsdVz
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_order
      summary: List Executions
      tags:
      - ExchangePublic
  /profiles/{profile_id}/orders:
    get:
      description: |-
        Retrieves full details of orders associated with a profile id with optional filters.

        Notes:
        - Pagination Limit has a max of 1000 and Pagination Offset a max of 10000. If a larger Offset is needed, please contact support.
      operationId: ListProfileOrders
      parameters:
      - description: The ProfileId associated with the orders.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by the trading pair.
        explode: true
        in: query
        name: market
        required: false
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          type: string
        style: form
      - description: Filter by the status of the order.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - PENDING_SUBMISSION
          - SUBMITTED
          - OPEN
          - FILLED
          - CANCELLED
          - REJECTED
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: order_time.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: order_time.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The idempotence ids provided during order creation.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor token for fetching the next page. If using this then do
          not use paginationLimit and paginationOffset fields.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return. If using this then do not use paginationLimit
          and paginationOffset fields.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_order
      summary: List Orders
      tags:
      - ExchangePublic
    post:
      description: |-
        For limit orders, create an order for buying or selling an asset:

        - To buy, set `side = BUY` and set `base_amount` to the crypto amount you want to buy.
        - To sell, set `side = SELL` and set `base_amount` to the crypto amount you want to sell.

        For market orders, create an order for buying or selling an asset:

        - To buy, set `side = BUY` and set `quote_amount` to the dollar amount you want to spend.
        - To sell, set `side = SELL` and set `base_amount` to the crypto amount you want to sell.

        There are five types of orders:

        - Limit Orders: Buy or sell at a specified price or better. Execution not guaranteed. Taker orders will be rejected if price deviates 15% from midpoint.
        - Post-Only Limit Orders: have the same properties as Limit Orders, but get rejected if they cross the orderbook.
        - Market Orders: Operate as Immediate or Cancel (IOC) orders. Price is variable, executes at best available price at time of order.
        - Stop Market Orders: Will convert to a market sell order with the specified quantity when the stop price is hit. The stop price does not guarantee that it will be executed at that price. Market conditions (price) might change between the order being triggered and order being executed. Currently only sell stop loss orders are supported.
        - Stop Limit Orders: have a Stop Price which when hit, will convert to a limit sell order that will be executed at a specified price (or better)

        Maximum notional order size by type:

        Order Type | Market  | Maximum Notional Value (USD)
        ---------- | ------- | ----------------------------
        Market     | all     | 500,000
        Limit      | BTCUSD  | 1,500,000
        Limit      | ETHUSD  | 1,500,000
        Limit      | other   | 1,000,000
      operationId: CreateOrder
      parameters:
      - description: The profileId the order will be associated with.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Limit Buy:
                value:
                  side: BUY
                  market: ETHUSD
                  type: LIMIT
                  price: "190.23"
                  base_amount: "2.35781498"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
              Limit Sell:
                value:
                  side: SELL
                  market: ETHUSD
                  type: LIMIT
                  price: "190.23"
                  base_amount: "2.35781498"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
              Market Buy:
                value:
                  side: BUY
                  market: ETHUSD
                  type: MARKET
                  quote_amount: "300.00"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
              Market Sell:
                value:
                  side: SELL
                  market: ETHUSD
                  type: MARKET
                  base_amount: "3.48127123"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
            schema:
              $ref: '#/components/schemas/Create_Order_Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: f190b163-208f-4d73-8deb-4fb8b24add00
                    profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                    ref_id: my-order-1
                    status: SUBMITTED
                    market: ETHUSD
                    side: BUY
                    type: LIMIT
                    price: "190.23"
                    base_amount: "2.35781498"
                    quote_amount: ""
                    metadata:
                      customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                    amount_filled: "0.00000000"
                    volume_weighted_average_price: "0.00000000"
                    time_in_force: GTC
              schema:
                $ref: '#/components/schemas/Order'
          description: A successful response.
        "400":
          content:
            application/problem+json:
              examples:
                Invalid Base Amount:
                  $ref: '#/components/examples/Problem_bad_request'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/problem+json:
              examples:
                Insufficient Funds:
                  $ref: '#/components/examples/Problem_insufficient_funds'
                Notional Value Too Large:
                  $ref: '#/components/examples/Problem_notional_value_too_large'
                Market Conditions Prevented Execution:
                  $ref: '#/components/examples/Problem_market_conditions_prevented_execution'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not create order
        "409":
          content:
            application/problem+json:
              examples:
                Already Exists:
                  $ref: '#/components/examples/Problem_already_exists_order'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Order already created
      security:
      - OAuth2:
        - exchange:write_order
      summary: Create Order
      tags:
      - Orders
  /profiles/{profile_id}/orders/{id}:
    delete:
      description: |-
        Submits a cancellation request. A response indicates that the request has been acknowledged and provides no
        guarantee the order has been cancelled.
      operationId: CancelOrder
      parameters:
      - description: The profile ID associated with the order.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the Order.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: {}
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
          description: A successful response.
        "403":
          content:
            application/problem+json:
              examples:
                Not Cancellable:
                  $ref: '#/components/examples/Problem_forbidden_order_cancel'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not cancel order
      security:
      - OAuth2:
        - exchange:write_order
      summary: Cancel Order
      tags:
      - Orders
    get:
      description: |-
        Retrieves the current state of an order.
        - Historical data prior to May 16, 2022 is unavailable.
      operationId: GetOrder
      parameters:
      - description: The profile ID associated with the order.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the Order.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: f190b163-208f-4d73-8deb-4fb8b24add00
                    profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                    ref_id: my-order-1
                    status: SUBMITTED
                    market: ETHUSD
                    side: BUY
                    type: LIMIT
                    price: "190.23"
                    base_amount: "2.35781498"
                    quote_amount: ""
                    metadata:
                      customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                    amount_filled: "0.00000000"
                    volume_weighted_average_price: "0.00000000"
                    time_in_force: GTC
                    is_triggered: false
              schema:
                $ref: '#/components/schemas/Order'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_order
      summary: Get Order
      tags:
      - Orders
  /profiles/{profile_id}/quote-executions:
    get:
      description: List quote executions within a particular profile.
      operationId: ListQuoteExecutions
      parameters:
      - description: The profile ID associated with the orders.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by buy or sell side.
        explode: true
        in: query
        name: side
        required: false
        schema:
          enum:
          - BUY
          - SELL
          type: string
        style: form
      - description: Filter by the trading pair.
        explode: true
        in: query
        name: market
        required: false
        schema:
          enum:
          - ETHEUR
          - ETHSGD
          - ETHUSD
          - BTCEUR
          - BTCSGD
          - BTCUSD
          - PAXGUSD
          - BCHUSD
          - LTCUSD
          - USDPUSD
          - LINKUSD
          - MATICUSD
          - AAVEUSD
          - UNIUSD
          type: string
        style: form
      - description: Filter by the status of the order.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - CREATED
          - SETTLED
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          Return items in ascending (ASC) or descending (DESC) order.
          Default order is descending (DESC).
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: Cursor token for fetching the next page. If using this then do
          not use `pagination.limit` and `pagination.offset` fields.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuoteExecutionsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_quote_execution
      summary: List Quote Executions
      tags:
      - Quote Executions
    post:
      description: |-
        Execute on a quote for buying or selling an asset.

        The side, market, and guaranteed price of the execution are specified by the quote
        with ID `quote_id`.

        The amount to buy or sell must be specified in either fiat or crypto by setting
        exactly one of:
         - `base_amount` to specify the amount of crypto to buy or sell.
         - `quote_amount` to specify the amount of fiat to spend or acquire.

        An otherwise-valid request to create a quote execution may fail with the following
        types of errors:
         - [Expired](https://developer.paxos.com/docs/v2/problems/expired) if the quote
           with ID `quote_id` has expired.
         - [Insufficient Funds](https://developer.paxos.com/docs/v2/problems/insufficient-funds)
           if the profile with ID `profile_id` has insufficient available balance to
           fund the execution.
         - [Rejected](https://developer.paxos.com/docs/v2/problems/rejected) if extreme
           market conditions (e.g. a very large price swing) have invalidated the quote.
         - [Already Exists](https://developer.paxos.com/docs/v2/problems/already-exists)
           if a Quote Execution with the same `ref_id` has already been created.
      operationId: CreateQuoteExecution
      parameters:
      - description: The ID of the profile under which to execute this order.
        explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Buy $100 BTC:
                value:
                  quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
                  quote_amount: "100"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
              Sell 2 ETH:
                value:
                  quote_id: 5a336768-5bc1-4401-9d95-9cb251ce4b58
                  base_amount: "2"
                  metadata:
                    customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
            schema:
              $ref: '#/components/schemas/Create_Quote_Execution_Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Buy $100 BTC:
                  value:
                    id: 43a59965-be3a-45ab-841d-c55386e0ff90
                    profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                    quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
                    status: CREATED
                    market: BTCUSD
                    side: BUY
                    price: "6001.2"
                    base_amount: "0.016663334"
                    base_asset: BTC
                    quote_amount: "100.00"
                    quote_asset: USD
                    created_at: 2020-01-17T18:36:31.345Z
                    metadata:
                      customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                Sell 2 ETH:
                  value:
                    id: 43a59965-be3a-45ab-841d-c55386e0ff90
                    profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
                    quote_id: 5a336768-5bc1-4401-9d95-9cb251ce4b58
                    status: CREATED
                    market: ETHUSD
                    side: SELL
                    price: "224.11"
                    base_amount: "2"
                    base_asset: ETH
                    quote_amount: "448.22"
                    quote_asset: USD
                    created_at: 2020-01-17T18:36:31.345Z
                    metadata:
                      customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
              schema:
                $ref: '#/components/schemas/QuoteExecution'
          description: A successful response.
        "403":
          content:
            application/problem+json:
              examples:
                Expired:
                  $ref: '#/components/examples/Problem_expired_quote'
                Insufficient Funds:
                  $ref: '#/components/examples/Problem_insufficient_funds'
                Rejected:
                  $ref: '#/components/examples/Problem_rejected'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not create quote execution
        "404":
          content:
            application/problem+json:
              examples:
                Not Found:
                  $ref: '#/components/examples/Problem_not_found_quote'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find quote
        "409":
          content:
            application/problem+json:
              examples:
                Already Exists:
                  $ref: '#/components/examples/Problem_already_exists_quote_execution'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Quote Execution Already Exists
      security:
      - OAuth2:
        - exchange:write_quote_execution
      summary: Create Quote Execution
      tags:
      - Quote Executions
  /profiles/{profile_id}/quote-executions/{id}:
    get:
      description: Get an existing quote execution for buying or selling an asset.
      operationId: GetQuoteExecution
      parameters:
      - explode: false
        in: path
        name: profile_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteExecution'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_quote_execution
      summary: Get Quote Execution
      tags:
      - Quote Executions
  /quotes:
    get:
      description: |-
        List quotes for buying or selling assets. By default, the list will
        include the latest available quotes for both buying and selling all supported
        assets.

        Each quote is valid until `expires_at`, and can be executed on by
        calling [Create Quote Execution](#operation/CreateQuoteExecution).

        Multiple calls to list quotes in quick succession may return the same quote
        values. Paxos currently issues new quotes at most once per second.
      operationId: ListQuotes
      parameters:
      - description: ""
        explode: true
        in: query
        name: markets
        required: true
        schema:
          items:
            enum:
            - ETHEUR
            - ETHSGD
            - ETHUSD
            - BTCEUR
            - BTCSGD
            - BTCUSD
            - PAXGUSD
            - BCHUSD
            - LTCUSD
            - USDPUSD
            - LINKUSD
            - MATICUSD
            - AAVEUSD
            - UNIUSD
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Latest USD Quotes:
                  value:
                    items:
                    - id: 366a26d2-3098-4226-a520-4bb43ae4d922
                      market: BTCUSD
                      side: BUY
                      price: "6001.2"
                      base_asset: BTC
                      quote_asset: USD
                      created_at: 2020-01-17T18:36:08Z
                      expires_at: 2020-01-17T18:36:38Z
                    - id: 71e2a297-f2d7-423c-8e4f-486aac70fa9f
                      market: BTCUSD
                      side: SELL
                      price: "5999.8"
                      base_asset: BTC
                      quote_asset: USD
                      created_at: 2020-01-17T18:36:08Z
                      expires_at: 2020-01-17T18:36:38Z
                    - id: ee018e41-0379-41c6-a099-1ea81204b192
                      market: ETHUSD
                      side: BUY
                      price: "225.88"
                      base_asset: ETH
                      quote_asset: USD
                      created_at: 2020-01-17T18:36:08Z
                      expires_at: 2020-01-17T18:36:38Z
                    - id: 5a336768-5bc1-4401-9d95-9cb251ce4b58
                      market: ETHUSD
                      side: SELL
                      price: "224.11"
                      base_asset: ETH
                      quote_asset: USD
                      created_at: 2020-01-17T18:36:08Z
                      expires_at: 2020-01-17T18:36:38Z
              schema:
                $ref: '#/components/schemas/ListQuotesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - exchange:read_quote
      summary: List Quotes
      tags:
      - Quotes
  /sandbox/fiat-deposits:
    post:
      description: |-
        Initiate a test fiat deposit in the sandbox environment.

        The deposit will be processed based on `memo_id` from a previous Fiat Deposit Instructions response.

        *This functionality is only available in the sandbox environment.*
      operationId: InitiateSandboxFiatDeposit
      requestBody:
        content:
          application/json:
            example:
              amount: "10.00"
              asset: USD
              memo_id: 3CFXQSCMSPLFHXLZ
              fiat_network_instructions:
                wire:
                  account_number: "12345678"
                  fiat_account_owner_address:
                    country: USA
                    address1: "456 Main Street, NY"
                    city: New York
                    province: NY
                    address2: ""
                    zip_code: "10101"
                  routing_details:
                    routing_number_type: ABA
                    routing_number: "123456789"
                    bank_name: Customers Bank
                    bank_address:
                      country: USA
                      address1: 123 Bank Street
                      city: New York
                      province: NY
                      address2: ""
                      zip_code: "10101"
              fiat_account_owner:
                institution_details:
                  name: "SomeCorp, Inc."
            schema:
              $ref: '#/components/schemas/InitiateSandboxFiatDepositRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/InitiateSandboxFiatDepositResponse'
          description: A successful response.
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: fiat network instructions required
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
      security:
      - OAuth2:
        - transfer:write_sandbox_fiat_deposit
      summary: Initiate Sandbox Fiat Deposit
      tags:
      - Sandbox Fiat Transfers
  /transfer/crypto-deposits/{id}/reject:
    post:
      description: |-
        Reject a crypto deposit which is waiting for required travel rule information about the originator address.
        If the rejected deposit has any status other than `NEEDS_INFO`, the request will return an error.
        Only the creator of the crypto deposit can reject it.
      operationId: RejectCryptoDeposit
      parameters:
      - description: |-
          Paxos ID of the crypto deposit to reject.
          To retrieve the ID, log in to your Paxos account and go to the [Activity](https://account.paxos.com/wallet/activity) tab.
          Download the CSV activity file and check the ID column.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectCryptoDepositRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/RejectCryptoDepositResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: "id must be uuid, given 2d929a0d-e1e3-4781-b7f8-7b34e66f"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: "no crypto deposit found for id: 2d929a0d-e1e3-4781-b7f8-7b34e66f7832"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find deposit
        "409":
          content:
            application/json:
              example:
                type: about:blank
                title: Conflict
                status: 409
                detail: crypto deposit 2d929a0d-e1e3-4781-b7f8-7b34e66f7832 does not
                  need info
              schema:
                $ref: '#/components/schemas/Problem'
          description: Deposit does not need info
      security:
      - OAuth2:
        - transfer:reject_crypto_deposit
      summary: Reject Crypto Deposit
      tags:
      - Crypto Deposits
  /transfer/crypto-deposits/{id}/update:
    post:
      description: |-
        Crypto deposits that do not meet the minimum travel rule requirements are blocked.
        To update a crypto deposit, provide the required travel rule information about the originator address.
      operationId: UpdateCryptoDeposit
      parameters:
      - description: |-
          Paxos ID of the crypto deposit to update.
          To retrieve the ID, log in to your Paxos account and go to the [Activity](https://account.paxos.com/wallet/activity) tab.
          Download the CSV activity file and check the ID column.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCryptoDepositRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/UpdateCryptoDepositResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: "id must be uuid, given 2d929a0d-e1e3-4781-b7f8-7b34e66f"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: "no crypto deposit found for id: 2d929a0d-e1e3-4781-b7f8-7b34e66f7832"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find deposit
        "409":
          content:
            application/json:
              example:
                type: about:blank
                title: Conflict
                status: 409
                detail: crypto deposit 2d929a0d-e1e3-4781-b7f8-7b34e66f7832 does not
                  need info
              schema:
                $ref: '#/components/schemas/Problem'
          description: Deposit does not need info
      security:
      - OAuth2:
        - transfer:update_crypto_deposit
      summary: Update Crypto Deposit
      tags:
      - Crypto Deposits
  /transfer/crypto-withdrawals:
    post:
      description: Withdraw a cryptocurrency asset to a specified destination address.
      operationId: CreateCryptoWithdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCryptoWithdrawalRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 373b7966-4290-4be3-a604-51929173437b
                customer_id: 72b2b4e6-d395-43d2-9b09-690fa6c1a664
                profile_id: 1db50793-0a22-4d2a-8696-66fc4fd8e360
                ref_id: ABCZYX123
                amount: "0.001"
                total: "0.00100223"
                fee: "0.00000223"
                asset: BTC
                balance_asset: BTC
                direction: DEBIT
                type: CRYPTO_WITHDRAWAL
                status: PENDING
                created_at: 2022-06-14T15:19:20.034294Z
                updated_at: 2022-06-14T15:19:20.034294Z
                destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
                crypto_network: BITCOIN
                auto_conversion: {}
              schema:
                $ref: '#/components/schemas/Transfer'
          description: A successful response.
        "403":
          content:
            application/problem+json:
              examples:
                Insufficient Funds:
                  $ref: '#/components/examples/Problem_insufficient_funds'
                Expired:
                  $ref: '#/components/examples/Problem_fee_expired_crypto_withdrawal'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not create transfer
        "404":
          content:
            application/problem+json:
              examples:
                Not Found:
                  $ref: '#/components/examples/Problem_fee_not_found_crypto_withdrawal'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find fee quote
        "409":
          content:
            application/problem+json:
              examples:
                Already Exists:
                  $ref: '#/components/examples/Problem_already_exists_crypto_withdrawal'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Transfer already exists
      security:
      - OAuth2:
        - transfer:write_crypto_withdrawal
      summary: Create Crypto Withdrawal
      tags:
      - Crypto Withdrawals
  /transfer/deposit-addresses:
    get:
      description: "List all deposit addresses, optionally filtering and paging the\
        \ results."
      operationId: ListDepositAddresses
      parameters:
      - description: Optionally filter by the profile IDs associated with the deposit
          addresses. Limit 100.
        explode: true
        in: query
        name: profile_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optionally filter by the Identities associated with the deposit
          addresses. Limit 100.
        explode: true
        in: query
        name: identity_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optionally filter by the UUIDs of the deposit addresses. Limit
          100.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The client-specified IDs provided during transfer creation. Limit
          100.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return. Defaults to 100 if no limit is provided.
          Maximum 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: "Optional: Cursor for getting the next page of results."
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: Optionally filter by the Accounts associated with the deposit
          address. Limit 100.
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDepositAddressesResponse'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_deposit_address
      summary: List Deposit Addresses
      tags:
      - Deposit Addresses
    post:
      description: Create a deposit address on a blockchain network for depositing
        to a profile.
      operationId: CreateDepositAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDepositAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
          description: A successful response.
        "409":
          content:
            application/problem+json:
              examples:
                Already Exists:
                  $ref: '#/components/examples/Problem_already_exists_deposit_address'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Deposit address already exists
      security:
      - OAuth2:
        - transfer:write_deposit_address
      summary: Create Deposit Address
      tags:
      - Deposit Addresses
  /transfer/fees/crypto-withdrawal:
    post:
      description: |-
        Get a guaranteed fee for the given currency, valid for a period of time.
        Specify exactly one of `amount` or `total`, otherwise an error is returned.

        The [Create Crypto Withdrawal](#operation/CreateCryptoWithdrawal) request that uses the guaranteed fee endpoint
        must specify an `amount` less than or equal to the guaranteed fee `amount`, otherwise the withdrawal is rejected.
      operationId: CreateCryptoWithdrawalFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCryptoWithdrawalFeeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoWithdrawalFee'
          description: A successful response.
      security:
      - OAuth2:
        - fee:write_crypto_withdrawal_fee
      summary: Create Crypto Withdrawal Fee
      tags:
      - Fees
  /transfer/fiat-accounts:
    get:
      description: |-
        List all Fiat Accounts, optionally filtering and paging the results.
        The response includes an abbreviated `FiatAccount` object:

        - Beneficiary name and address details are excluded.
        - Only the last four (**4**) digits of the account number are included.

        Use [Get Fiat Account](#operation/GetFiatAccount) to retrieve the complete `FiatAccount` object.

        The paginated results default to the maximum limit of 1,000 Fiat Accounts, unless otherwise specified with the `limit` parameter.
        Every paginated response contains a `next_page` field until the last page is reached.
        Pass the `next_page` value into the `page_cursor` field of the next request to retrieve the next page of results.
      operationId: ListFiatAccounts
      parameters:
      - description: Optionally filter by the UUIDs of the accounts. Limit 100.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optionally filter by the client-specified IDs provided during
          account creation. Limit 100.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return. Defaults to 100 if no limit is provided.
          Maximum 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
          Defaults to CREATED_AT.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: "Optional: Cursor for getting the next page of results."
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                items:
                - id: dde1b3c5-d02a-48f6-8d11-16b4f532ea49
                  ref_id: test_ref_id_1
                  identity_id: c6ea91da-8f33-4545-9bdf-3cf29b4041d7
                  account_id: 91f91384-30d4-46c2-9118-7f3cec676a2c
                  fiat_account_owner:
                    person_details: null
                  fiat_network_instructions:
                    wire:
                      account_number: XXXX5678
                      fiat_account_owner_address: null
                      routing_details:
                        routing_number_type: ABA
                        routing_number: "123456789"
                        bank_name: Customers Bank
                        bank_address: null
                      status: PENDING
                      metadata:
                        test_ref_id: 47aa7538-e2d2-47b3-8600-44a7965dd357
                        transaction_attempt: 1
                  created_at: 2023-09-24T14:15:22Z
                  updated_at: 2023-09-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/ListFiatAccountsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_fiat_account
      summary: List Fiat Accounts
      tags:
      - Fiat Transfers
    post:
      description: |-
        Create an account to initiate a fiat withdrawal.

        For U.S. wires, set `fiat_network_instructions` > `wire` > `routing_details` > `routing_number_type` to `ABA`. For international (SWIFT) wires, set `fiat_network_instructions` > `wire` > `routing_details` > `routing_number_type` to `SWIFT`.

        For CBIT, set `fiat_network_instructions` > `cbit` > `wallet_address`, and do not specify `routing_number_type`. For CBIT, the `wallet_address` on `fiat_network_instructions` is not a crypto wallet, it is a Customers Bank account wallet address.
      operationId: CreateFiatAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFiatAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: dde1b3c5-d02a-48f6-8d11-16b4f532ea49
                ref_id: test_ref_id_1
                identity_id: c6ea91da-8f33-4545-9bdf-3cf29b4041d7
                account_id: 91f91384-30d4-46c2-9118-7f3cec676a2c
                fiat_account_owner:
                  person_details:
                    first_name: Jane
                    last_name: Doe
                  fiat_network_instructions:
                    wire:
                      account_number: "12345678"
                      fiat_account_owner_address:
                        country: USA
                        address1: "456 Main Street, NY"
                        city: New York
                        province: NY
                        address2: ""
                        zip_code: "10101"
                      routing_details:
                        routing_number_type: ABA
                        routing_number: "123456789"
                        bank_name: Customers Bank
                        bank_address:
                          country: USA
                          address1: 123 Bank Street
                          city: New York
                          province: NY
                          address2: ""
                          zip_code: "10101"
                    status: PENDING
                    metadata:
                      test_ref_id: 47aa7538-e2d2-47b3-8600-44a7965dd357
                      transaction_attempt: 1
                created_at: 2023-09-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/FiatAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: account_number must be set
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/json:
              example:
                type: about:blank
                title: Forbidden
                status: 403
                detail: identity_id forbidden for first-party customers
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: "no fiat account found for id: '2d929a0d-e1e3-4781-b7f8-7b34e66f7832'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - transfer:write_fiat_account
      summary: Create Fiat Account
      tags:
      - Fiat Transfers
  /transfer/fiat-accounts/{id}:
    delete:
      description: |-
        Delete a Fiat Account.
        Once a Fiat Account is deleted, transfers cannot be initiated to it.
      operationId: DeleteFiatAccount
      parameters:
      - description: The Paxos fiat account ID (UUID).
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                example:
                  type: application/json
                  value: "{}"
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: "id must be uuid, given '123456'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: "no fiat account found for id: '2d929a0d-e1e3-4781-b7f8-7b34e66f7832'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - transfer:write_fiat_account
      summary: Delete Fiat Account
      tags:
      - Fiat Transfers
    get:
      description: |-
        Get a single Fiat Account by ID.

        In the polling workflow, this endpoint can be called to monitor a FiatAccount's status.
        The Fiat Account response includes the full account number, beneficiary name and address details.
      operationId: GetFiatAccount
      parameters:
      - description: |-
          The Paxos fiat account ID (UUID).
          The Fiat Account ID (`id`) is provided in the response of the [Create Fiat Account](#operation/CreateFiatAccount).
          Use this ID to retrieve the instructions using [Get Fiat Account](#operation/GetFiatAccount) & [List Fiat Accounts](#operation/ListFiatAccounts).
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiatAccount'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_fiat_account
      summary: Get Fiat Account
      tags:
      - Fiat Transfers
    put:
      description: |-
        Change an existing value or add a new value on one or more fields for the given Fiat Account and return the modified Fiat Account in `PENDING` status.
        Update fields in **either** `fiat_account_owner.person_details` or `fiat_account_owner.institution_details`.
        Attempts to convert the `fiat_account_owner` type results in an error.
        Empty strings or null values are ignored.

        Upon successful response, Paxos initiates an automated review of the requested changes and then either sets the status to `APPROVED` or `REJECTED`.
        Occasionally, a manual review may be required.
        Use [Get Fiat Account](#operation/GetFiatAccount) to check for status changes.
      operationId: UpdateFiatAccount
      parameters:
      - description: |-
          The Paxos fiat account ID (UUID).
          The Fiat Account ID (`id`) is provided in the response of the [Create Fiat Account](#operation/CreateFiatAccount).
          Use this ID to retrieve the instructions using [Get Fiat Account](#operation/GetFiatAccount) & [List Fiat Accounts](#operation/ListFiatAccounts).
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update fiat account owner person details:
                value:
                  fiat_account_owner:
                    person_details:
                      first_name: John
                      last_name: Smith
              Update fiat account owner institution details:
                value:
                  fiat_account_owner:
                    institution_details:
                      name: Big Tech Inc
              Update fiat account owner address:
                value:
                  fiat_account_owner:
                    fiat_network_instructions:
                      wire:
                        fiat_account_owner_address:
                          country: USA
                          address1: "456 Main Street, NY"
                          city: New York
                          province: NY
                          address2: ""
                          zip_code: "10101"
              Update routing bank name & address:
                value:
                  fiat_account_owner:
                    fiat_network_instructions:
                      wire:
                        routing_details:
                          bank_name: Customers Bank
                          bank_address:
                            country: USA
                            address1: 123 Bank Street
                            address2: ""
                            city: New York
                            province: NY
                            zip_code: "10101"
              Update intermediary bank name & address:
                value:
                  fiat_account_owner:
                    fiat_network_instructions:
                      wire:
                        intermediary_bank_name: Intermediary Bank
                        intermediary_bank_address:
                          country: USA
                          address1: 123 Bank Street
                          city: New York
                          province: NY
                          zip_code: "10101"
              Update fiat account metadata:
                value:
                  metadata:
                    key1: value1
                    key2: value2
            schema:
              $ref: '#/components/schemas/UpdateFiatAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: dde1b3c5-d02a-48f6-8d11-16b4f532ea49
                ref_id: test_ref_id_1
                identity_id: c6ea91da-8f33-4545-9bdf-3cf29b4041d7
                account_id: 91f91384-30d4-46c2-9118-7f3cec676a2c
                fiat_account_owner:
                  person_details:
                    first_name: John
                    last_name: Smith
                  fiat_network_instructions:
                    wire:
                      account_number: "12345678"
                      fiat_account_owner_address:
                        country: USA
                        address1: "456 Main Street, NY"
                        city: New York
                        province: NY
                        address2: ""
                        zip_code: "10101"
                      routing_details:
                        routing_number_type: ABA
                        routing_number: "123456789"
                        bank_name: Customers Bank
                        bank_address:
                          country: USA
                          address1: 123 Bank Street
                          city: New York
                          province: NY
                          address2: ""
                          zip_code: "10101"
                    status: PENDING
                    metadata:
                      test_ref_id: 47aa7538-e2d2-47b3-8600-44a7965dd357
                      transaction_attempt: 1
                created_at: 2023-09-24T14:15:22Z
                updated_at: 2023-09-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/FiatAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: fiat_account_owner cannot be changed from person to institution
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/json:
              example:
                type: about:blank
                title: Forbidden
                status: 403
                detail: "identity_id forbidden for 1st-Party ledgering. See: https://docs.paxos.com/crypto-brokerage/ledger-type"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: fiat_account with id 2d929a0d-e1e3-4781-b7f8-7b34e66j783 not
                  found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - transfer:write_fiat_account
      summary: Update Fiat Account
      tags:
      - Fiat Transfers
  /transfer/fiat-deposit-instructions:
    get:
      description: |-
        Return the associated Fiat Deposit Instructions matching the search criteria for the current Account.
        The paginated results default to the maximum limit of 1,000 Fiat Deposit instructions, unless otherwise specified with the `limit` parameter.
        Every paginated response contains a `next_page` field until the last page is reached.
        Pass the `next_page` value into the `page_cursor` field of the next request to retrieve the next page of results.
      operationId: ListFiatDepositInstructions
      parameters:
      - description: Optionally filter by the UUIDs of the instructions. Limit 100.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optionally filter by the client-specified IDs provided during
          instructions creation. Limit 100.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return. Defaults to 100 if no limit is provided.
          Maximum 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "Optional: Cursor for getting the next page of results."
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                items:
                - id: f190b163-208f-4d73-8deb-4fb8b24add00
                  profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                  customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                  ref_id: idempotence_id
                  status: VALID
                  memo_id: 9CFXQSCMSPLFHXLZ
                  fiat_network_instructions:
                    wire:
                      account_number: "12345678"
                      fiat_account_owner_address:
                        country: USA
                        address1: "456 Main Street, NY"
                        city: New York
                        province: NY
                        address2: ""
                        zip_code: "10101"
                      routing_details:
                        routing_number_type: ABA
                        routing_number: "123456789"
                        bank_name: Customers Bank
                        bank_address:
                          country: USA
                          address1: 123 Bank Street
                          city: New York
                          province: NY
                          address2: ""
                          zip_code: "10101"
                    fiat_account_owner:
                      person_details:
                        first_name: Jane
                        last_name: Doe
                    metadata:
                      my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
              schema:
                $ref: '#/components/schemas/ListFiatDepositInstructionsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: page_cursor token cannot be parsed
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: fiat deposit instructions with id f190b163-208f-4d73-8deb-4fb8b24add00
                  not found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find Identity
      security:
      - OAuth2:
        - transfer:read_fiat_deposit_instructions
      summary: List Fiat Deposit Instructions
      tags:
      - Fiat Transfers
    post:
      description: Create instructions for depositing fiat.
      operationId: CreateFiatDepositInstructions
      requestBody:
        content:
          application/json:
            examples:
              Create fiat deposit instructions:
                value:
                  profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                  fiat_network: WIRE
                  identity_id: 8a398cb6-4e3b-4868-9cea-a1c567856e68
                  account_ id: 91f91384-30d4-46c2-9118-7f3cec676a2c
                  ref_id: idempotence_id
                  routing_number_type: SWIFT
                  metadata:
                    my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
            schema:
              $ref: '#/components/schemas/CreateFiatDepositInstructionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: f190b163-208f-4d73-8deb-4fb8b24add00
                profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                ref_id: idempotence_id
                status: VALID
                memo_id: 9CFXQSCMSPLFHXLZ
                fiat_network_instructions:
                  wire:
                    account_number: "12345678"
                    fiat_account_owner_address:
                      country: USA
                      address1: "456 Main Street, NY"
                      city: New York
                      province: NY
                      address2: ""
                      zip_code: "10101"
                    routing_details:
                      routing_number_type: ABA
                      routing_number: "123456789"
                      bank_name: Customers Bank
                      bank_address:
                        country: USA
                        address1: 123 Bank Street
                        city: New York
                        province: NY
                        address2: ""
                        zip_code: "10101"
                  fiat_account_owner:
                    person_details:
                      first_name: Jane
                      last_name: Doe
                  metadata:
                    my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
              schema:
                $ref: '#/components/schemas/FiatDepositInstructions'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: 'identity not enabled for customer 8a398cb6-4e3b-4868-9cea-a1c567856e68 '
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: identity not found for customer 8a398cb6-4e3b-4868-9cea-a1c567856e68
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find Identity
      security:
      - OAuth2:
        - transfer:write_fiat_deposit_instructions
      summary: Create Fiat Deposit Instructions
      tags:
      - Fiat Transfers
  /transfer/fiat-deposit-instructions/{id}:
    get:
      description: |-
        Get instructions for depositing fiat using a Paxos Fiat Deposit Instructions ID.
        The Fiat Deposit Instructions ID (`id`) is provided in the response of the [Create Fiat Deposit Instructions](#operation/CreateFiatDepositInstructions).
      operationId: GetFiatDepositInstructions
      parameters:
      - description: Retrieve the Paxos Fiat Deposit Instructions for the given `id`.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: f190b163-208f-4d73-8deb-4fb8b24add00
                profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                ref_id: idempotence_id
                status: VALID
                memo_id: 9CFXQSCMSPLFHXLZ
                fiat_network_instructions:
                  wire:
                    account_number: "12345678"
                    fiat_account_owner_address:
                      country: USA
                      address1: "456 Main Street, NY"
                      city: New York
                      province: NY
                      address2: ""
                      zip_code: "10101"
                    routing_details:
                      routing_number_type: ABA
                      routing_number: "123456789"
                      bank_name: Customers Bank
                      bank_address:
                        country: USA
                        address1: 123 Bank Street
                        city: New York
                        province: NY
                        address2: ""
                        zip_code: "10101"
                  fiat_account_owner:
                    person_details:
                      first_name: Jane
                      last_name: Doe
                  metadata:
                    my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
              schema:
                $ref: '#/components/schemas/FiatDepositInstructions'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: "expected uuid, got invalid-uuid"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: fiat deposit instructions with id f190b163-208f-4d73-8deb-4fb8b24add00
                  not found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find Identity
      security:
      - OAuth2:
        - transfer:read_fiat_deposit_instructions
      summary: Get Fiat Deposit Instructions
      tags:
      - Fiat Transfers
  /transfer/fiat-withdrawals:
    post:
      description: Withdraw fiat to the given destination.
      operationId: CreateFiatWithdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFiatWithdrawalRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: f190b163-208f-4d73-8deb-4fb8b24add00
                customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
                profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
                amount: "10.00"
                total: "10.00"
                fee: "0.0000000"
                asset: USD
                balance_asset: USD
                direction: DEBIT
                type: CBIT_WITHDRAWAL
                status: PENDING
                created_at: 2023-07-13T18:36:08.737Z
                updated_at: 2023-07-13T18:36:08.737Z
                fiat_account_id: caa82b32-8abd-4899-afdc-f9d4bf9b4e98
              schema:
                $ref: '#/components/schemas/Transfer'
          description: A successful response.
        "400":
          content:
            application/json:
              example:
                type: about:blank
                title: Bad Request
                status: 400
                detail: "fiat account has invalid status REJECTED, must be approved"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                type: about:blank
                title: Not Found
                status: 404
                detail: fiat account not found with requested ID
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find Profile
        "403":
          content:
            application/problem+json:
              examples:
                Insufficient Funds:
                  description: The needed funds include wire withdrawal fees. Please
                    check developer documentation for fee details.
                  summary: Example of insufficient funds
                  value:
                    type: https://developer.paxos.com/docs/v2/problems/insufficient-funds
                    title: Insufficient Funds
                    status: 403
                    detail: "insufficient USD funds in profile 5fc6d191-193c-4e28-94fa-656bbdbdfaad:\
                      \ 100 needed, 50 available"
                    meta:
                      profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
                      asset: USD
                      available: "50"
                      needed: "100"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient funds
      security:
      - OAuth2:
        - transfer:write_fiat_withdrawal
      summary: Create Fiat Withdrawal
      tags:
      - Fiat Transfers
  /transfer/internal:
    post:
      description: Transfer assets between two profiles belonging to the same customer.
      operationId: CreateInternalTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternalTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                amount: "10"
                asset: BTC
                auto_conversion: {}
                balance_asset: BTC
                created_at: 2022-04-28T22:07:56.436854Z
                customer_id: 66325f47-455d-4e0c-9d38-70c047b41dbe
                direction: DEBIT
                fee: "0"
                id: 5ab7e995-5589-4b3f-a333-c14b42ac6eaf
                metadata:
                  my_id: TEST-v2-Profile-transfer-428169
                profile_id: 0acfa5a6-6f2e-41af-a833-48e301197ffd
                ref_id: TEST-v2-profile-transfer-ref_id-428169
                status: PENDING
                total: "10"
                type: INTERNAL_TRANSFER_DEBIT
                group_id: 55e98066-d9ad-483b-9f10-d3aa252ebbe3
              schema:
                $ref: '#/components/schemas/Transfer'
          description: A successful response.
        "403":
          content:
            application/problem+json:
              examples:
                Insufficient Funds:
                  $ref: '#/components/examples/Problem_insufficient_funds'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient funds
        "404":
          content:
            application/problem+json:
              examples:
                Profile Not Found:
                  $ref: '#/components/examples/Problem_not_found'
              schema:
                $ref: '#/components/schemas/Problem'
          description: Could not find profile
        "409":
          content:
            application/problem+json:
              example:
                type: https://api.paxos.com/v2/problems/already-exists
                detail: Transfer with ref_id already exists
                status: 409
                title: Already exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Transfer already exists
      security:
      - OAuth2:
        - transfer:write_internal_transfer
      summary: Create Internal Transfer
      tags:
      - Internal Transfers
  /transfer/limits/utilizations:
    get:
      description: List all limits that apply to the given transaction type.
      operationId: ListTransferLimits
      parameters:
      - description: Type of transfer to fetch limits for.
        explode: true
        in: query
        name: transfer_type
        required: true
        schema:
          enum:
          - INTERNAL_TRANSFER_DEBIT
          - INTERNAL_TRANSFER_CREDIT
          - CRYPTO_DEPOSIT
          - CRYPTO_WITHDRAWAL
          - WIRE_DEPOSIT
          - WIRE_WITHDRAWAL
          - SEN_DEPOSIT
          - SEN_WITHDRAWAL
          - BANK_DEPOSIT
          - BANK_WITHDRAWAL
          - PAXOS_TRANSFER_DEBIT
          - PAXOS_TRANSFER_CREDIT
          - SIGNET_DEPOSIT
          - SIGNET_WITHDRAWAL
          - CBIT_WITHDRAWAL
          - CBIT_DEPOSIT
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferLimitsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_transfer_limit
      summary: List Transfer Limits
      tags:
      - Limits
  /transfer/transfers:
    get:
      description: |-
        List all transfers, optionally filtering and paging the results.

        By default, transfers are returned in reverse chronological (descending)
        order by creation time.

        The recommended polling workflow is to query the results in ascending
        order (by setting `order_by` to `CREATED_AT`), keeping track of the
        `created_at` timestamp of the most recent transfer in the paged results.
        Once transfers are discovered, the caller should store the returned `ID`
        and query GetTransfer to retrieve status updates.
      operationId: ListTransfers
      parameters:
      - description: |-
          Optionally filter by the target profiles of the transfers. Limit 100.
          Can be combined with created_at.* or updated_at.* filtering options only.
        explode: true
        in: query
        name: profile_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Optionally filter by the Identities associated with the transfers. Limit 100.
          Can be combined with created_at.* or updated_at.* filtering options only.
        explode: true
        in: query
        name: identity_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          The client-specified IDs provided during transfer creation. Limit 100.
          Can be combined with created_at.* or updated_at.* filtering options only.
        explode: true
        in: query
        name: ref_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return. Defaults to 100 if no limit is provided.
          Maximum 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          Determines whether the items are returned in ascending (ASC), or descending (DESC) order.
          Defaults to ASC if `order_by` is UPDATED_AT. Otherwise defaults to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: |-
          The specific method by which the returned results will be ordered.
          When specifying both `order_by` and a timestamp filter, `order_by` must equal the timestamp filter type.
          For example:

          `updated_at.gte = 2022-07-01T03:02:01Z`, `order_by = UPDATED_AT`

          Using `updated_at.gte = 2022-07-01T03:02:01Z`, `order_by = CREATED_AT` is an invalid pairing.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          - UPDATED_AT
          type: string
        style: form
      - description: |-
          Optional: Cursor for getting the next page of results. When the number of items returned is fewer
          than the limit, there is currently no next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Optionally filter by the Accounts associated with the transfers. Limit 100.
          Can be combined with created_at.* or updated_at.* filtering options only.
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Optionally filter by the transfer ids. Limit 100.
          Can be combined with created_at.* or updated_at.* filtering options only.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Retrieve all (default) or the specified transfers.
          Optionally filter by transfer `type`.
          To retrieve multiple transfer types, use query parameters: e.g., `type=CRYPTO_DEPOSIT&type=CRYPTO_WITHDRAWAL`.
          Can be combined with `created_at.*` or `updated_at.*` filtering options only.
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - INTERNAL_TRANSFER_DEBIT
            - INTERNAL_TRANSFER_CREDIT
            - CRYPTO_DEPOSIT
            - CRYPTO_WITHDRAWAL
            - WIRE_DEPOSIT
            - WIRE_WITHDRAWAL
            - SEN_DEPOSIT
            - SEN_WITHDRAWAL
            - BANK_DEPOSIT
            - BANK_WITHDRAWAL
            - PAXOS_TRANSFER_DEBIT
            - PAXOS_TRANSFER_CREDIT
            - SIGNET_DEPOSIT
            - SIGNET_WITHDRAWAL
            - CBIT_WITHDRAWAL
            - CBIT_DEPOSIT
            type: string
          type: array
        style: form
      - description: Optionally filter by transfer `group_ids`. Limit 100.
        explode: true
        in: query
        name: group_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransfersResponse'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_transfer
      summary: List Transfers
      tags:
      - Transfers
  /transfer/transfers/{id}:
    get:
      description: |-
        Get a single transfer by ID.

        In the polling workflow, this endpoint can be called to monitor transfer
        status changes.
      operationId: GetTransfer
      parameters:
      - description: The Paxos transfer UUID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: A successful response.
      security:
      - OAuth2:
        - transfer:read_transfer
      summary: Get Transfer
      tags:
      - Transfers
  /tax/tax-form-revisions:
    get:
      description: |-
        Used for more granular file retrieval for specific accounts that require updated tax forms.
        Lists all versions of a tax form for single account and tax year. Revisions will increment up as new tax forms are issued for the same account, tax year, and form type pairing. The highest value revision is the most recent.
        Tax Form URL links will expire after 60 seconds.
      operationId: ListTaxFormRevisions
      parameters:
      - description: Required. Account ID
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          type: string
        style: form
      - description: Required. Tax Year
        explode: true
        in: query
        name: tax_year
        required: true
        schema:
          type: string
        style: form
      - description: Tax forms 1009 B or Misc
        explode: true
        in: query
        name: form_types
        required: false
        schema:
          items:
            enum:
            - FORM_1099_B
            - FORM_1099_MISC
            type: string
          type: array
        style: form
      - description: Revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaxFormRevisionsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - tax:read_tax_form
      summary: List Tax Form Revisions
      tags:
      - Tax Forms
  /tax/tax-forms:
    get:
      description: |-
        Used for bulk file transfer use cases.
        List tax forms for given account ids and tax year. The most recent revision number will be returned (revisions increment up; highest value revision for a specific account, tax year, and form type pairing is the most recent).
        Tax Form URL links will expire after 60 seconds.
        Please call ListTaxFormRevisions endpoint for all versions of a single accounts tax forms.
      operationId: ListTaxForms
      parameters:
      - description: Optional. A list of Account IDs. Maximum 50.
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Required. Tax year
        explode: true
        in: query
        name: tax_year
        required: true
        schema:
          type: string
        style: form
      - description: Form types
        explode: true
        in: query
        name: form_types
        required: false
        schema:
          items:
            enum:
            - FORM_1099_B
            - FORM_1099_MISC
            type: string
          type: array
        style: form
      - description: Number of results to return. Defaults to 50.
        explode: true
        in: query
        name: users_limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The specific method by which the returned results will be ordered.
          Defaults to ID.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - ID
          type: string
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to ASC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaxFormsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - tax:read_tax_form
      summary: List Tax Forms
      tags:
      - Tax Forms
  /tax/tax-lots:
    get:
      description: "List Tax Lots using filter, result is paginated."
      operationId: ListTaxLots
      parameters:
      - description: A list of tax lot ids. Must be provided if no profile ids nor
          account ids provided.
        explode: true
        in: query
        name: tax_lot_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of profile ids. Can not be provided together with account
          ids.
        explode: true
        in: query
        name: profile_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of account ids. Can not be provided together with profile
          ids.
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of transaction types. Requires profile ids or account
          ids to be provided.
        explode: true
        in: query
        name: transaction_types
        required: false
        schema:
          items:
            enum:
            - BUY
            - SELL
            - DEPOSIT
            - WITHDRAWAL
            type: string
          type: array
        style: form
      - description: "Status of tax lot, OPEN or CLOSED. Requires profile ids or account\
          \ ids to be provided."
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - OPEN
          - CLOSED
          type: string
        style: form
      - description: Crypto currency of the tax lot. Requires profile ids or account
          ids to be provided.
        explode: true
        in: query
        name: cryptocurrency
        required: false
        schema:
          type: string
        style: form
      - description: "The capital gain type, values of LONG_TERM, SHORT_TERM, EXEMPT.\
          \ Requires profile ids or account ids to be provided."
        explode: true
        in: query
        name: capital_gain_type
        required: false
        schema:
          enum:
          - LONG_TERM
          - SHORT_TERM
          - EXEMPT
          type: string
        style: form
      - description: "Include timestamps strictly less than lt. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps less than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps exactly equal to eq. RFC3339 format, like\
          \ `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.eq
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps greater than or equal to lte. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Include timestamps strictly greater than gt. RFC3339 format,\
          \ like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.gt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return. Default value is 100.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Return items in ascending (ASC) or descending (DESC) order. Defaults
          to DESC.
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: The specific method by which the returned results will be ordered.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - CREATED_AT
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaxLotsResponse'
          description: A successful response.
      security:
      - OAuth2:
        - tax:read_tax_lot
      summary: List Tax Lots
      tags:
      - Tax Lot
  /tax/tax-lots/{id}:
    get:
      description: Get Tax Lot allows you to retrieve tax lot detail by its id.
      operationId: GetTaxLot
      parameters:
      - description: The UUID of the tax lot
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxLot'
          description: A successful response.
      security:
      - OAuth2:
        - tax:read_tax_lot
      summary: Get Tax Lot
      tags:
      - Tax Lot
    put:
      description: Update Tax Lot allows you to update the tax lot specified by its
        ID. The updated tax lot will be returned in the response.
      operationId: UpdateTaxLot
      parameters:
      - description: The UUID of the tax lot.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaxLotRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxLot'
          description: A successful response.
      security:
      - OAuth2:
        - tax:write_tax_lot
      summary: Update Tax Lot
      tags:
      - Tax Lot
  /conversion/stablecoins:
    get:
      description: |-
        List all conversions, optionally filtering and paging the results.

        By default, conversions are returned in reverse chronological (descending)
        order by creation time. If no query parameters are supplied,
        the response will include up to the last 100 conversions which
        were created.

        The paginated results default to display up to 100 conversions, unless
        otherwise specified with the `limit` parameter. The maximum `limit` value is 1000.
        Every paginated response contains a `next_page_cursor` field until the last page is reached.

        Pass the `next_page_cursor` value into the `page_cursor` field of a new
        request to retrieve the next page of results.
      operationId: ListStablecoinConversions
      parameters:
      - description: |-
          The <a href="#tag/Profiles">Profile</a> associated with a conversion. Required in the
          <a href="#operation/CreateStablecoinConversion">Create Stablecoin Conversion</a> request.
        explode: true
        in: query
        name: profile_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Client provided, unique Reference ID included the
          <a href="#operation/CreateStablecoinConversion">Create Stablecoin Conversion</a> request.
        explode: true
        in: query
        name: ref_id
        required: false
        schema:
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: created_at.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records after this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only return records before this timestamp, inclusive. RFC3339\
          \ format, like `2006-01-02T15:04:05Z`."
        explode: true
        in: query
        name: updated_at.end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          Return items in ascending (ASC) or descending (DESC) order by `created_at` timestamp.

          Default order is descending (DESC).
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: Cursor token for fetching the next page.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Number of results to return.

          Default is 100 items. Maximum is 1000 items.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Stablecoin Conversions:
                  value:
                    items:
                    - account_id: 00000000-0000-0000-0000-000000000000
                      amount: "100.01"
                      created_at: 2023-09-16T02:01:15.941902Z
                      id: 38a2c6b4-167c-4c98-a190-406efc4121aa
                      identity_id: 00000000-0000-0000-0000-000000000000
                      metadata:
                        skey: svalue
                      profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                      ref_id: 497266c5214043a29f9854096e9a9103
                      settled_at: 2023-09-16T02:01:16.613995Z
                      source_asset: USD
                      status: SETTLED
                      target_asset: USDP
                      updated_at: 2023-09-16T02:01:16.018493Z
                    - account_id: 00000000-0000-0000-0000-000000000000
                      amount: "100.01"
                      created_at: 2023-09-16T03:34:50.555200Z
                      id: a490536f-3842-4823-8c84-056728243064
                      identity_id: 00000000-0000-0000-0000-000000000000
                      metadata:
                        skey: svalue
                      profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                      ref_id: 4fecc881b73744e4a4e858017689da7d
                      settled_at: 2023-09-16T03:34:51.060002Z
                      source_asset: USD
                      status: SETTLED
                      target_asset: USDP
                      updated_at: 2023-09-16T03:34:50.610541Z
              schema:
                $ref: '#/components/schemas/ListStablecoinConversionsResponse'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    detail: "insufficient scopes: found \"conversion:write_conversion_stablecoin\"\
                      \ required one of \"[conversion:read_conversion_stablecoin]\""
                    status: 403
                    title: Forbidden
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
      security:
      - OAuth2:
        - conversion:read_conversion_stablecoin
      summary: List Stablecoin Conversions
      tags:
      - Stablecoin Conversion
    post:
      description: |-
        Create a Conversion request to exchange assets 1:1.

        A request to create a conversion can fail with one of the following
        types of errors:
         - [Insufficient Funds](https://developer.paxos.com/docs/v2/problems/insufficient-funds)
           if the Profile (`profile_id`) has insufficient available balance to
           fund the execution.
         - [Already Exists](https://developer.paxos.com/docs/v2/problems/already-exists)
           if a conversion with the same external ID (`ref_id`) has already been created.
      operationId: CreateStablecoinConversion
      requestBody:
        content:
          application/json:
            examples:
              Create Stablecoin Conversion:
                value:
                  amount': "3"
                  metadata:
                    skey: svalue
                    custom_key: custom_value
                  profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                  ref_id: refid-24d25de7f5bd47ab978cbbd428b74199
                  source_asset: USD
                  target_asset: USDP
            schema:
              $ref: '#/components/schemas/CreateStablecoinConversionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Stablecoin Conversion:
                  value:
                    account_id': 00000000-0000-0000-0000-000000000000
                    amount': "3"
                    created_at: 2023-10-19T15:37:18.929305155Z
                    id: 8dbce0e0-510f-4edc-9249-15f8c6214569
                    identity_id: 00000000-0000-0000-0000-000000000000
                    metadata:
                      skey: svalue
                      custom_key: custom_value
                    profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                    ref_id: refid-24d25de7f5bd47ab978cbbd428b74199
                    source_asset: USD
                    status: CREATED
                    target_asset: USDP
                    updated_at: 2023-10-19T15:37:18.990343Z
              schema:
                $ref: '#/components/schemas/StablecoinConversion'
          description: A successful response.
        "400":
          content:
            application/json:
              examples:
                Conversion limit exceeded:
                  value:
                    type: about:blank
                    title: Bad Request
                    status: 400
                    detail: 11000 amount is above the maximum 10000 USD
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'conversion:read_conversion_stablecoin',\
                      \ required one of '[conversion:write_conversion_stablecoin]'"
                insufficient funds:
                  value:
                    detail: "insufficient USD funds in profile b821ff88-fdb4-49ba-b30f-99c40f01fcfc:\
                      \ 999 needed, 358.24 available"
                    meta:
                      asset: USD
                      available': "358.24"
                      needed: "999"
                      profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                    status: 403
                    title: Insufficient Funds
                    type: https://developer.paxos.com/docs/v2/problems/insufficient-funds
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        "409":
          content:
            application/json:
              examples:
                Already Exists:
                  value:
                    detail: conversion already exists with ref_id 'refid-1'
                    meta:
                      existing:
                        account_id: 00000000-0000-0000-0000-000000000000
                        amount: "3"
                        created_at: 2023-10-19T19:53:21.297848Z
                        id: 9e7a1f81-2cfa-4499-97dc-150d2a98bbd8
                        identity_id: 00000000-0000-0000-0000-000000000000
                        metadata:
                          skey: svalue
                        profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                        ref_id: refid-1
                        settled_at: 2023-10-19T19:53:21.987849Z
                        source_asset: USD
                        status: SETTLED
                        target_asset: USDP
                        updated_at: 2023-10-19T19:53:21.334615Z
                    status: 409
                    title: Already Exists
                    type: https://developer.paxos.com/docs/v2/problems/already-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Already Exists
      security:
      - OAuth2:
        - conversion:write_conversion_stablecoin
      summary: Create Stablecoin Conversion
      tags:
      - Stablecoin Conversion
  /conversion/stablecoins/{id}:
    delete:
      description: |-
        Cancel a single conversion using the `id` from the
        [Create Stablecoin Conversion](#operation/CreateStablecoinConversion) response.
      operationId: CancelStablecoinConversion
      parameters:
      - description: |-
          System provided UUID for the conversion is
          provided in the [Create Stablecoin Conversion](#operation/CreateStablecoinConversion) response.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Cancel Stablecoin Conversion:
                  value:
                    id: e5ca4d90-dff1-488a-ac04-04540f776ae1
                    profile_id: c3680989-c04e-4000-9d96-8aca09eedee1
                    amount: "11.1"
                    source_asset: USD
                    target_asset: USDP
                    status: CANCELLED
                    identity_id: d6aee44c-c169-405d-b14e-d78818577531
                    account_id: 47bb49d7-4e6c-43bf-9fd6-6ccd7d7f15d1
                    created_at: 2023-10-19T21:21:46.497863Z
                    updated_at: 2023-10-19T21:21:53.297594Z
                    cancelled_at: 2023-10-19T21:21:53.297594Z
              schema:
                $ref: '#/components/schemas/StablecoinConversion'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    detail: "insufficient scopes: found \"conversion:read_conversion_stablecoin\"\
                      \ required one of \"[conversion:write_conversion_stablecoin]\""
                    status: 403
                    title: Forbidden
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    detail: conversion with id 0def57e8-c6bb-40dc-b2b8-69bb80440cc1
                      not found for customer with id 4eaffe58-df0e-4559-8dec-fdae231684e1
                    status: 404
                    title: Not Found
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - conversion:write_conversion_stablecoin
      summary: Cancel Stablecoin Conversion
      tags:
      - Stablecoin Conversion
    get:
      description: "Retrieve a single conversion using the transaction `id` from the\
        \ [Create Stablecoin Conversion](#operation/CreateStablecoinConversion) response."
      operationId: GetStablecoinConversion
      parameters:
      - description: |-
          System provided UUID for the conversion is
          provided in the [Create Stablecoin Conversion](#operation/CreateStablecoinConversion) response.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Stablecoin Conversion:
                  value:
                    account_id: 00000000-0000-0000-0000-000000000000
                    amount: "3"
                    created_at': 2023-10-19T15:37:18.929305Z
                    id: 8dbce0e0-510f-4edc-9249-15f8c6214569
                    identity_id: 00000000-0000-0000-0000-000000000000
                    metadata:
                      skey: svalue
                      custom_key: custom_value
                    profile_id: b821ff88-fdb4-49ba-b30f-99c40f01fcfc
                    ref_id: refid-24d25de7f5bd47ab978cbbd428b74199
                    source_asset: USD
                    status: CREATED
                    target_asset: USDP
                    updated_at: 2023-10-19T15:37:18.990343Z
              schema:
                $ref: '#/components/schemas/StablecoinConversion'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'conversion:write_conversion_stablecoin',\
                      \ required one of '[conversion:read_conversion_stablecoin]'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    detail: conversion with id 0def57e8-c6bb-40dc-b2b8-69bb80440cc1
                      not found for customer with id 4eaffe58-df0e-4559-8dec-fdae231684e1
                    status: 404
                    title: Not Found
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - conversion:read_conversion_stablecoin
      summary: Get Stablecoin Conversion
      tags:
      - Stablecoin Conversion
  /settlement/transactions:
    get:
      description: |-
        This endpoint enables you to fetch a list of Settlement Transactions that you have created (own the `source_profile_id`) or have been alleged against you (own the `target_profile_id`).
        You can use query parameters to filter the results returned by `statuses`, `source_profile_id` and `target_profile_id`.

        Note that this endpoint supports pagination and returns a cursor token for fetching next pages.
      operationId: ListTransactions
      parameters:
      - description: |-
          Transaction statuses to filter on

           - PENDING: Initial state of a settlement transaction upon creation.
           - SETTLED: Indicates all obligations belong to the settlement transaction have been enacted.
           - EXPIRED: Indicates the settlement transaction is no longer eligible for settlement.
           - CANCELLED: Indicates the settlement transaction was cancelled by the source profile.
           - AFFIRMED: Indicates the settlement transaction will be eligible for settlement once within the window.
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          items:
            enum:
            - PENDING
            - SETTLED
            - EXPIRED
            - CANCELLED
            - AFFIRMED
            type: string
          type: array
        style: form
      - description: The `profile_id` of the entity on the submitting side of the
          transaction.
        explode: true
        in: query
        name: source_profile_id
        required: false
        schema:
          type: string
        style: form
      - description: The `profile_id` of the entity on the receiving side of the transaction.
        explode: true
        in: query
        name: target_profile_id
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return. Defaults to 100 if no limit is provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Cursor for getting the next page of results.
        explode: true
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
                ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                settlement_window_start: 2023-08-25 14:25:41 UTC
                settlement_window_end: 2023-08-25 14:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: DELIVER
                  asset: BTC
                  amount: "100"
                status: PENDING
                created_at: 2023-08-25 14:25:41 UTC
                updated_at: 2023-08-25 14:25:41 UTC
              - id: 738b465a-7bea-42cf-be8d-63572f5745e7
                ref_id: 8f1dcf84-56e7-4e84-80aa-f01ef2eb1ab0
                settlement_window_start: 2023-08-26 00:25:41 UTC
                settlement_window_end: 2023-08-29 19:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: RECEIVE
                  asset: ETH
                  amount: "39.231"
                status: PENDING
                created_at: 2023-08-24 18:29:41 UTC
                updated_at: 2023-08-24 18:29:41 UTC
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'settlement:write_transaction',\
                      \ required one of '[settlement:read_transaction]'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
      security:
      - OAuth2:
        - settlement:read_transaction
      summary: List Transactions
      tags:
      - Settlement
    post:
      description: |-
        Creates a new bilateral Settlement Transaction with one or more legs. The customer must own the
        `source_profile_id` specified in the transaction.

        A successful response indicates the transaction has been accepted and will be in an initial `status` of `"PENDING"`
        for settlement, the transaction is only eligible for settlement once the `status` is `"AFFIRMED"` by the
        `target_profile_id` and the current time is between the provided `settlement_window_start` and `settlement_window_end`.

        Settlement will only be enacted once both `source_profile_id` and `target_profile_id` have sufficient balances to
        fulfill all legs specified as settlement is **atomic**.
      operationId: CreateTransaction
      requestBody:
        content:
          application/json:
            examples:
              Create Transaction:
                value:
                  ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                  settlement_window_start: 2023-08-25 14:25:41 UTC
                  settlement_window_end: 2023-08-25 16:25:41 UTC
                  source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                  target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                  legs:
                  - direction: DELIVER
                    asset: BTC
                    amount: "100"
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
        description: Request to create a bilateral settlement transaction with one
          or more legs.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
                ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                settlement_window_start: 2023-08-25 14:25:41 UTC
                settlement_window_end: 2023-08-25 14:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: DELIVER
                  asset: BTC
                  amount: "100"
                status: PENDING
                created_at: 2023-08-25 14:25:41 UTC
                updated_at: 2023-08-25 14:25:41 UTC
              schema:
                $ref: '#/components/schemas/Transaction'
          description: A successful response.
        "400":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Bad Request
                    status: 400
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'settlement:read_transaction',\
                      \ required one of '[settlement:write_transaction]'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
        "409":
          content:
            application/json:
              examples:
                Already Exists:
                  value:
                    status: 409
                    title: Conflict
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Already Exists
      security:
      - OAuth2:
        - settlement:write_transaction
      summary: Create Transaction
      tags:
      - Settlement
  /settlement/transactions/{transaction_id}:
    delete:
      description: |-
        Cancels the Settlement Transaction, this action can only be done by the customer owning the source profile (`source_profile_id`).
        The transaction must be in a `"PENDING"` status for this to take effect, you cannot cancel a transaction which
        is `"AFFIRMED"`.
      operationId: CancelTransaction
      parameters:
      - description: The unique `id` in the `Transaction` object.
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
                ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                settlement_window_start: 2023-08-25 14:25:41 UTC
                settlement_window_end: 2023-08-25 14:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: DELIVER
                  asset: BTC
                  amount: "100"
                status: CANCELLED
                created_at: 2023-08-25 14:25:41 UTC
                updated_at: 2023-08-25 17:53:23 UTC
              schema:
                $ref: '#/components/schemas/Transaction'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'settlement:read_transaction',\
                      \ required one of '[settlement:write_transaction]'"
                Forbidden:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
        "409":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    status: 409
                    title: Conflict
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Already Exists
      security:
      - OAuth2:
        - settlement:write_transaction
      summary: Cancel Transaction
      tags:
      - Settlement
    get:
      description: |-
        Get a Settlement Transaction by its (transaction) id, you must have created the transaction (own the `source_profile_id`) or
        have had the transaction alleged against you (own the `target_profile_id`).
      operationId: GetTransaction
      parameters:
      - description: The unique `id` in the `Transaction` object.
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
                ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                settlement_window_start: 2023-08-25 14:25:41 UTC
                settlement_window_end: 2023-08-25 14:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: DELIVER
                  asset: BTC
                  amount: "100"
                status: PENDING
                created_at: 2023-08-25 14:25:41 UTC
                updated_at: 2023-08-25 17:53:23 UTC
              schema:
                $ref: '#/components/schemas/Transaction'
          description: A successful response.
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'settlement:write_transaction',\
                      \ required one of '[settlement:read_transaction]'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    status: 404
                    title: Not Found
                    type: about:blank
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
      security:
      - OAuth2:
        - settlement:read_transaction
      summary: Get Transaction
      tags:
      - Settlement
  /settlement/transactions/{transaction_id}/affirm:
    put:
      description: |-
        Affirms the Settlement Transaction for settlement, the transaction is now eligible for settlement once the current time is
        between the provided `settlement_window_start` and `settlement_window_end`. This action can only be done by the
        customer owning the target profile (`target_profile_id`).
        The transaction must be in a `"PENDING"` status for this to take effect.
      operationId: AffirmTransaction
      parameters:
      - description: The unique `id` in the `Transaction` object.
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
                ref_id: d840cf31-352f-4190-a476-7522bf3eafda
                settlement_window_start: 2023-08-25 14:25:41 UTC
                settlement_window_end: 2023-08-25 14:25:41 UTC
                source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
                target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
                legs:
                - id: ace21517-447e-4764-8733-765cb12a7fab
                  direction: DELIVER
                  asset: BTC
                  amount: "100"
                status: AFFIRMED
                created_at: 2023-08-25 14:25:41 UTC
                updated_at: 2023-08-25 17:53:23 UTC
              schema:
                $ref: '#/components/schemas/Transaction'
          description: A successful response.
        "400":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Bad Request
                    status: 400
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Insufficient scopes:
                  value:
                    type: about:blank
                    title: Forbidden
                    status: 403
                    detail: "insufficient scopes: found 'settlement:write_transaction',\
                      \ required one of '[settlement:read_transaction]'"
              schema:
                $ref: '#/components/schemas/Problem'
          description: Insufficient scopes
      security:
      - OAuth2:
        - settlement:write_transaction
      summary: Affirm Transaction
      tags:
      - Settlement
components:
  examples:
    Problem_already_exists:
      value:
        type: https://developer.paxos.com/docs/v2/problems/already-exists
        title: Already Exists
        status: 409
        detail: nickname already exists
        meta:
          existing:
            id: b7b77d82-e6a7-4ae9-9904-36231aedf985
            nickname: existing nickname
            type: NORMAL
    Problem_already_exists_crypto_withdrawal:
      value:
        type: https://developer.paxos.com/docs/v2/problems/already-exists
        title: Already Exists
        status: 409
        detail: transfer already exists with ref_id 'already_used_ref_id'
        meta:
          existing:
            id: f190b163-208f-4d73-8deb-4fb8b24add00
            customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
            profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
            ref_id: already_used_ref_id
            amount: "0.10000000"
            total: "0.10000023"
            fee: "0.00000023"
            asset: BTC
            balance_asset: BTC
            direction: DEBIT
            type: CRYPTO_WITHDRAWAL
            status: COMPLETED
            created_at: 2020-01-17T18:36:08.737Z
            updated_at: 2020-01-17T18:37:08.737Z
            metadata:
              my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
            destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
            crypto_network: BITCOIN
            crypto_tx_hash: f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16
    Problem_already_exists_deposit_address:
      value:
        type: https://developer.paxos.com/docs/v2/problems/already-exists
        title: Already Exists
        status: 409
        detail: deposit address already exists with ref_id 'already_used_ref_id'
        meta:
          existing:
            id: 34bd61ed-cf0a-4012-8be4-d347667b6154
            profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
            customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
            crypto_network: ETHEREUM
            identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
            ref_id: already_used_ref_id
            metadata:
              my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
            address: 0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7
    Problem_already_exists_order:
      value:
        type: https://developer.paxos.com/docs/v2/problems/already-exists
        title: Already Exists
        status: 409
        detail: order already exists with ref_id 'already_used_ref_id'
        meta:
          existing:
            id: f190b163-208f-4d73-8deb-4fb8b24add00
            profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
            ref_id: already_used_ref_id
            status: SUBMITTED
            side: BUY
            market: BTCUSD
            quote_amount: "100.00"
    Problem_already_exists_quote_execution:
      value:
        type: https://developer.paxos.com/docs/v2/problems/already-exists
        title: Already Exists
        status: 409
        detail: quote execution already exists with ref_id 'already_used_ref_id'
        meta:
          existing:
            id: f190b163-208f-4d73-8deb-4fb8b24add00
            profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
            quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
            ref_id: already_used_ref_id
            status: CREATED
            market: BTCUSD
            side: BUY
            price: "6001.2"
            base_amount: "0.016663334"
            base_asset: BTC
            quote_amount: "100.00"
            quote_asset: USD
            created_at: 2020-01-17T18:36:31.345Z
            metadata:
              customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
    Problem_bad_request:
      value:
        type: about:blank
        title: Bad Request
        status: 400
        detail: "base_amount invalid: invalid amount '-10': must be positive decimal"
    Problem_below_min_withdraw_limit:
      value:
        type: https://developer.paxos.com/docs/v2/problems/below-min-withdraw-limit
        title: Withdrawal Amount Too Small
        status: 400
        detail: amount too small for network NETWORK_BTC minimum amount is 0.00001
        meta:
          limit: "0.00001"
          amount: "0.0000001"
    Problem_exceed_max_withdraw_limit:
      value:
        type: https://developer.paxos.com/docs/v2/problems/exceed-max-withdraw-limit
        title: Withdrawal Amount Too Large
        status: 400
        detail: withdrawal amount 0.3 exceeds withdrawal limit for this asset BTC
        meta:
          limit: "0.1"
          amount: "0.3"
    Problem_exceed_precision:
      value:
        type: https://developer.paxos.com/docs/v2/problems/exceed-precision
        title: Exceeds Maximum Precision Allowed
        status: 400
        detail: max precision allowed for asset ETH is 18
    Problem_expired:
      value:
        type: https://developer.paxos.com/docs/v2/problems/expired
        title: Expired
        status: 403
        detail: offer expired at 0001-01-01T00:00:00Z
        meta:
          expired_at: 0001-01-01T00:00:00Z
    Problem_expired_quote:
      value:
        type: https://developer.paxos.com/docs/v2/problems/expired
        title: Expired
        status: 403
        detail: quote 366a26d2-3098-4226-a520-4bb43ae4d922 expired at 2020-01-17T18:36:38Z
        meta:
          expired_at: 2020-01-17T18:36:38Z
    Problem_fee_expired_crypto_withdrawal:
      value:
        type: https://developer.paxos.com/docs/v2/problems/expired
        title: Expired
        status: 403
        detail: fee 9e5828e2-0a10-4273-aa9c-f50bd0eaf344 expired at 2020-01-17T18:36:08.737Z
        meta:
          expired_at: 2020-01-17T18:36:08.737Z
    Problem_fee_not_found_crypto_withdrawal:
      value:
        type: about:blank
        title: Not Found
        status: 404
        detail: fee not found with id 9e5828e2-0a10-4273-aa9c-f50bd0eaf344
    Problem_forbidden:
      value:
        type: about:blank
        title: Forbidden
        status: 403
        detail: user account is disabled
    Problem_forbidden_order_cancel:
      value:
        type: about:blank
        title: Forbidden
        status: 403
        detail: order is not in cancellable state
    Problem_gateway_timeout:
      value:
        type: about:blank
        title: Gateway Timeout
        status: 504
        detail: timeout reached while creating the order
    Problem_insufficient_funds:
      value:
        type: https://developer.paxos.com/docs/v2/problems/insufficient-funds
        title: Insufficient Funds
        status: 403
        detail: "insufficient USD funds in profile b7b77d82-e6a7-4ae9-9904-36231aedf985:\
          \ 100 needed, 50 available"
        meta:
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          asset: USD
          available: "50"
          needed: "100"
    Problem_internal_server_error:
      value:
        type: about:blank
        title: Internal Server Error
        status: 500
    Problem_market_conditions_prevented_execution:
      value:
        type: https://developer.paxos.com/docs/v2/problems/market-conditions-prevented-execution
        title: Market Conditions Prevented Execution
        status: 403
        detail: market conditions have invalidated this order
    Problem_minimum_commission_exceeds_notional:
      value:
        type: https://developer.paxos.com/docs/v2/problems/minimum-commission-exceeds-notional
        title: Order notional value must exceed minimum commission
        status: 400
        detail: The minimum notional for ETH is 1.500000
    Problem_not_found:
      value:
        type: about:blank
        title: Not Found
        status: 404
        detail: "profile not found: b7b77d82-e6a7-4ae9-9904-36231aedf985"
    Problem_not_found_quote:
      value:
        type: about:blank
        title: Not Found
        status: 404
        detail: quote not found with id 366a26d2-3098-4226-a520-4bb43ae4d922
    Problem_notional_value_too_large:
      value:
        type: https://developer.paxos.com/docs/v2/problems/notional-value-too-large
        title: Notional Value Too Large
        status: 403
        detail: "notional value too large for BTCUSD LIMIT order: order had notional\
          \ value 1501234.56, but maximum allowed notional value is 1500000"
        meta:
          market: BTCUSD
          order_type: LIMIT
          order_notional_value: "1501234.56"
          max_notional_value: "1500000"
    Problem_rejected:
      value:
        type: https://developer.paxos.com/docs/v2/problems/rejected
        title: Rejected
        status: 403
        detail: extreme market conditions have invalidated this quote execution
        meta: {}
    Problem_service_unavailable:
      value:
        type: about:blank
        title: Service Unavailable
        status: 503
        detail: quotes disabled
    Problem_too_many_requests:
      value:
        type: about:blank
        title: Too Many Requests
        status: 429
        detail: Too many requests
    Problem_unauthenticated:
      value:
        type: about:blank
        title: Unauthorized
        status: 401
        detail: no authorization header set
    Problem_unavailable_market:
      value:
        type: https://developer.paxos.com/docs/v2/problems/unavailable-market
        title: Planned Market Outage
        status: 403
        detail: no marketable orders may be submitted at this time
  responses:
    bad_request_trade:
      content:
        application/problem+json:
          examples:
            Invalid Base Amount:
              $ref: '#/components/examples/Problem_bad_request'
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
  schemas:
    ListProfilesRequestOrderBy:
      enum:
      - CREATED_AT
      type: string
    CreateProfileRequest:
      example:
        nickname: nickname
        description: description
      properties:
        nickname:
          description: The display name of the profile. Must be unique.
          type: string
        description:
          description: The description of the created profile.
          type: string
      required:
      - nickname
      type: object
    ListProfileBalancesResponse:
      example:
        items:
        - asset: BTC
          available: "1.23103715"
          trading: ".25"
        - asset: BTC
          available: "1.23103715"
          trading: ".25"
      properties:
        items:
          items:
            $ref: '#/components/schemas/ProfileBalance'
          type: array
      required:
      - balances
      type: object
    ListProfilesResponse:
      example:
        items:
        - id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          nickname: MyProfileName
          type: NORMAL
        - id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          nickname: MyProfileName
          type: NORMAL
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/Profile'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    Profile:
      example:
        id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        nickname: MyProfileName
        type: NORMAL
      properties:
        id:
          type: string
        nickname:
          type: string
        type:
          $ref: '#/components/schemas/ProfileType'
        description:
          type: string
        account_id:
          title: '@hidden'
          type: string
      required:
      - id
      - nickname
      - type
      type: object
    ProfileBalance:
      description: A ProfileBalance represents the holdings of a particular asset
        within a profile.
      example:
        asset: BTC
        available: "1.23103715"
        trading: ".25"
      properties:
        asset:
          description: The asset held by the profile.
          type: string
        available:
          description: The available asset balance for new debit requests.
          type: string
        trading:
          description: The asset amount committed to pending orders.
          type: string
      required:
      - asset
      - available
      - trading
      type: object
    ProfileType:
      description: |-
        The profile type.

         - NORMAL: A client-created profile. All Profiles created using the `CreateProfile` endpoint are of this type.
         - DEFAULT: A system-generated profile.
      enum:
      - NORMAL
      - DEFAULT
      type: string
    SortOrder:
      enum:
      - DESC
      - ASC
      type: string
    TimestampFilter:
      properties:
        lt:
          description: "Include timestamps strictly less than lt. RFC3339 format,\
            \ like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
        lte:
          description: "Include timestamps less than or equal to lte. RFC3339 format,\
            \ like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
        eq:
          description: "Include timestamps exactly equal to eq. RFC3339 format, like\
            \ `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
        gte:
          description: "Include timestamps greater than or equal to lte. RFC3339 format,\
            \ like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
        gt:
          description: "Include timestamps strictly greater than gt. RFC3339 format,\
            \ like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
      type: object
    CreateSandboxDepositResponse:
      example:
        activity_id: activity_id
      properties:
        activity_id:
          description: The UUID of the customer activity created for the deposit.
          type: string
      type: object
    CryptoNetwork:
      description: A CryptoNetwork is a blockchain transmitting cryptocurrencies.
      enum:
      - BITCOIN
      - ETHEREUM
      - BITCOIN_CASH
      - LITECOIN
      - SOLANA
      - POLYGON_POS
      - ARBITRUM_ONE
      type: string
    CustomerDueDiligenceNetWorthRange:
      enum:
      - NET_WORTH_0_TO_100K
      - NET_WORTH_100K_TO_500K
      - NET_WORTH_500K_TO_1M
      - NET_WORTH_1M_TO_2_5M
      - NET_WORTH_2_5M_TO_5M
      - NET_WORTH_5M_TO_7_5M
      - NET_WORTH_7_5M_TO_10M
      - NET_WORTH_10M_TO_25M
      - NET_WORTH_25M_TO_50M
      - NET_WORTH_OVER_50M
      type: string
    CustomerDueDiligenceTransferValueRange:
      enum:
      - TRANSFER_VALUE_0_TO_25K
      - TRANSFER_VALUE_25K_TO_50K
      - TRANSFER_VALUE_50K_TO_100K
      - TRANSFER_VALUE_100K_TO_250K
      - TRANSFER_VALUE_250K_TO_500K
      - TRANSFER_VALUE_500K_TO_750K
      - TRANSFER_VALUE_750K_TO_1M
      - TRANSFER_VALUE_1M_TO_2_5M
      - TRANSFER_VALUE_2_5M_TO_5M
      - TRANSFER_VALUE_ABOVE_5M
      type: string
    CustomerDueDiligenceYearlyIncomeRange:
      enum:
      - INCOME_0_TO_50K
      - INCOME_50K_TO_100K
      - INCOME_100K_TO_250K
      - INCOME_250K_TO_500K
      - INCOME_500K_TO_750K
      - INCOME_750K_TO_1M
      - INCOME_ABOVE_1M
      type: string
    ListIdentitiesRequestOrderBy:
      enum:
      - CREATED_AT
      type: string
    PassthroughVerificationField:
      enum:
      - FULL_LEGAL_NAME
      - ADDRESS
      - DATE_OF_BIRTH
      - CIP_ID
      type: string
    PersonDetailsCIPIDType:
      enum:
      - SSN
      - ID_CARD
      - ITIN
      - PASSPORT
      - DRIVING_LICENSE
      - VISA
      title: ""
      type: string
    identityprotoVerifierType:
      enum:
      - JUMIO
      - PAXOS
      - PASSTHROUGH
      - MANUAL
      type: string
    AccountPurpose:
      enum:
      - INVESTMENT_TRADING
      - SAVINGS
      - STABLECOIN_PURCHASE_REDEMPTION
      type: string
    CreateIdentityRequest:
      example:
        ref_id: ref_id
        institution_members:
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        tax_details_not_required: true
        customer_due_diligence:
          expected_transfer_value: TRANSFER_VALUE_0_TO_25K
          aliases:
          - aliases
          - aliases
          purpose_of_account: INVESTMENT_TRADING
          industry_sector: null
          employment_industry_sector: null
          created_at: 2000-01-23T04:56:07.000+00:00
          has_underlying_trust_structure: true
          estimated_yearly_income: INCOME_0_TO_50K
          estimated_net_worth: NET_WORTH_0_TO_100K
          has_nominee_shareholders: true
          employment_status: CONTRACTUAL
          source_of_funds: SALARY_DISBURSEMENT
          source_of_wealth: INHERITANCE
        person_details:
          verifier_id: verifier_id
          sanctions_verification_status: null
          date_of_birth: date_of_birth
          additional_screening_status: null
          id_verification_url: id_verification_url
          govt_id: govt_id
          govt_id_type: SSN
          country_of_birth: country_of_birth
          cip_id: cip_id
          cip_id_country: cip_id_country
          first_name: first_name
          email: email
          profession: profession
          passthrough_verification_status: null
          address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
          verifier_type: JUMIO
          passthrough_verification_id: passthrough_verification_id
          last_name: last_name
          middle_name: middle_name
          id_verification_status: PENDING
          passthrough_verified_at: 2000-01-23T04:56:07.000+00:00
          passthrough_verification_fields:
          - FULL_LEGAL_NAME
          - FULL_LEGAL_NAME
          nationality: nationality
          phone_number: phone_number
          cip_id_type: null
          passthrough_verifier_type: JUMIO
        metadata:
          key: metadata
        institution_details:
          institution_type: TRUST
          ticker_symbol: ticker_symbol
          regulator_register_number: regulator_register_number
          business_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
          sanctions_verification_status: null
          document_verification_status: null
          listed_exchange: listed_exchange
          parent_institution_name: parent_institution_name
          govt_registration_date: 2000-01-23T04:56:07.000+00:00
          additional_screening_status: null
          regulator_jurisdiction: regulator_jurisdiction
          name: name
          regulator_name: regulator_name
          incorporation_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
          doing_business_as: doing_business_as
          phone_number: phone_number
          institution_sub_type: INVESTMENT
          cip_id: cip_id
          trading_type: PRIVATE
          cip_id_country: cip_id_country
          cip_id_type: EIN
          email: email
          regulation_status: US_REGULATED
        tax_details:
        - tax_payer_country: tax_payer_country
          tin_verification_status: TIN_VERIFICATION_PENDING
          tax_payer_id: tax_payer_id
        - tax_payer_country: tax_payer_country
          tin_verification_status: TIN_VERIFICATION_PENDING
          tax_payer_id: tax_payer_id
        is_merchant: true
      properties:
        person_details:
          $ref: '#/components/schemas/PersonDetails'
        metadata:
          additionalProperties:
            type: string
          title: API User-facing metadata
          type: object
        ref_id:
          description: A user-facing ID to prevent duplicate identity creation. Unique
            for all identities created by the same API user.
          type: string
        institution_details:
          $ref: '#/components/schemas/InstitutionDetails'
        institution_members:
          items:
            $ref: '#/components/schemas/InstitutionMember'
          title: Institution members if identity type is institution
          type: array
        tax_details:
          description: List of tax details associated with the identity. Must be set
            if tax_details_not_required is false or not set.
          items:
            $ref: '#/components/schemas/TaxDetail'
          type: array
        tax_details_not_required:
          description: Set to true if tax details are not legally required.
          type: boolean
        customer_due_diligence:
          $ref: '#/components/schemas/CustomerDueDiligence'
        is_merchant:
          description: Set to true to indicate that this identity is a merchant.
          type: boolean
      type: object
    CustomerDueDiligence:
      example:
        expected_transfer_value: TRANSFER_VALUE_0_TO_25K
        aliases:
        - aliases
        - aliases
        purpose_of_account: INVESTMENT_TRADING
        industry_sector: null
        employment_industry_sector: null
        created_at: 2000-01-23T04:56:07.000+00:00
        has_underlying_trust_structure: true
        estimated_yearly_income: INCOME_0_TO_50K
        estimated_net_worth: NET_WORTH_0_TO_100K
        has_nominee_shareholders: true
        employment_status: CONTRACTUAL
        source_of_funds: SALARY_DISBURSEMENT
        source_of_wealth: INHERITANCE
      properties:
        aliases:
          description: A list of alternate names or aliases associated with the Identity.
          items:
            type: string
          type: array
        estimated_net_worth:
          $ref: '#/components/schemas/CustomerDueDiligenceNetWorthRange'
        estimated_yearly_income:
          $ref: '#/components/schemas/CustomerDueDiligenceYearlyIncomeRange'
        expected_transfer_value:
          $ref: '#/components/schemas/CustomerDueDiligenceTransferValueRange'
        source_of_wealth:
          $ref: '#/components/schemas/WealthSource'
        source_of_funds:
          $ref: '#/components/schemas/FundsSource'
        purpose_of_account:
          $ref: '#/components/schemas/AccountPurpose'
        employment_status:
          $ref: '#/components/schemas/EmploymentStatus'
        employment_industry_sector:
          $ref: '#/components/schemas/InstitutionSubType'
        industry_sector:
          $ref: '#/components/schemas/InstitutionSubType'
        has_underlying_trust_structure:
          description: Whether or not the institution tied to the Identity has an
            underlying trust structure.
          type: boolean
        has_nominee_shareholders:
          description: Whether or not the institution tied to the Identity has nominee
            shareholders.
          type: boolean
        created_at:
          format: date-time
          title: When the customer due diligence was created
          type: string
      type: object
    DocumentDescription:
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        file_id: file_id
        name: name
        document_types:
        - OTHER_DOCUMENTS
        - OTHER_DOCUMENTS
        created_at: 2000-01-23T04:56:07.000+00:00
      properties:
        file_id:
          title: The document id
          type: string
        name:
          title: The file name
          type: string
        document_types:
          items:
            $ref: '#/components/schemas/DocumentType'
          title: The document types contained within the document
          type: array
        created_at:
          format: date-time
          title: When the document was created
          type: string
        archived_at:
          format: date-time
          title: When the document was archived
          type: string
      type: object
    DocumentType:
      enum:
      - OTHER_DOCUMENTS
      - APPLICATION
      - ORGANIZATIONAL_DOCUMENTS
      - CERTIFICATE_OF_GOOD_STANDING
      - TAX_IDENTIFICATION
      - IDENTITY_VERIFICATION
      - PROOF_OF_RESIDENCY
      - PROOF_OF_FUNDS
      - SAMPLE_INVOICE
      - OPERATING_AGREEMENT
      - TRUST_DOCUMENTS
      - MONEY_SERVICE_DOCUMENTS
      - INVESTMENT_DOCUMENTS
      - CURP
      type: string
    DocumentUploadResponse:
      example:
        file_id: file_id
        name: name
        upload_url: upload_url
      properties:
        file_id:
          description: The id assigned to the file.
          type: string
        name:
          description: The file name.
          type: string
        upload_url:
          description: The URI where we expect the file to be uploaded into.
          type: string
      type: object
    EmploymentStatus:
      enum:
      - CONTRACTUAL
      - FULL_TIME
      - PART_TIME
      - RETIRED
      - SELF_EMPLOYED
      - STUDENT
      - UNEMPLOYED
      type: string
    FundsSource:
      enum:
      - SALARY_DISBURSEMENT
      - INHERITANCE_DISTRIBUTION
      - INVESTMENT_RETURNS
      - BUSINESS_DIVIDENDS_PROFITS
      - PROPERTY_SALE
      - LOAN_DISBURSEMENT
      - SAVINGS_ACCOUNT_WITHDRAWAL
      type: string
    Identity:
      example:
        id: f190b163-208f-4d73-8deb-4fb8b24add00
        summary_status: PENDING
      properties:
        id:
          title: The id used for all other interactions with this account
          type: string
        metadata:
          additionalProperties:
            type: string
          title: API User-facing metadata
          type: object
        summary_status:
          $ref: '#/components/schemas/IdentityStatus'
        user_disabled:
          title: true if the account has been disabled by the API user
          type: boolean
        admin_disabled:
          title: true if the account has been disabled by a Paxos admin
          type: boolean
        person_details:
          $ref: '#/components/schemas/PersonDetails'
        type:
          $ref: '#/components/schemas/IdentityType'
        ref_id:
          description: A user-facing ID to prevent duplicate account creation. Unique
            for all accounts created by the same API user.
          type: string
        institution_details:
          $ref: '#/components/schemas/InstitutionDetails'
        institution_members:
          items:
            $ref: '#/components/schemas/InstitutionMember'
          title: members associated with institution identity type
          type: array
        created_at:
          description: the time at which the identity is created at.
          format: date-time
          type: string
        updated_at:
          description: the time at which the identity is updated at.
          format: date-time
          type: string
        tax_details:
          items:
            $ref: '#/components/schemas/TaxDetail'
          title: tax payer details
          type: array
        tax_details_not_required:
          title: whether or not tax_details are legally required
          type: boolean
        summary_tin_verification_status:
          $ref: '#/components/schemas/TINVerificationStatus'
        customer_due_diligence:
          $ref: '#/components/schemas/CustomerDueDiligence'
        is_merchant:
          description: True if the identity is a merchant.
          type: boolean
      required:
      - id
      type: object
    IdentityMailingAddress:
      description: A mailing address.
      example:
        country: country
        province: province
        address2: address2
        city: city
        address1: address1
        zip_code: zip_code
      properties:
        country:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        address1:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        address2:
          description: "To clear address2 (i.e. when updating an identity), set address2\
            \ to an empty string (\"\")."
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        city:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        province:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        zip_code:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
      required:
      - address1
      - city
      - country
      - province
      type: object
    IdentityStatus:
      enum:
      - PENDING
      - ERROR
      - APPROVED
      - DENIED
      - DISABLED
      title: ""
      type: string
    IdentityType:
      enum:
      - PERSON
      - INSTITUTION
      type: string
    InstitutionCIPIDType:
      enum:
      - EIN
      - SSN
      - ITIN
      - REGISTRATION_NUMBER
      title: ""
      type: string
    InstitutionDetails:
      example:
        institution_type: TRUST
        ticker_symbol: ticker_symbol
        regulator_register_number: regulator_register_number
        business_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
        sanctions_verification_status: null
        document_verification_status: null
        listed_exchange: listed_exchange
        parent_institution_name: parent_institution_name
        govt_registration_date: 2000-01-23T04:56:07.000+00:00
        additional_screening_status: null
        regulator_jurisdiction: regulator_jurisdiction
        name: name
        regulator_name: regulator_name
        incorporation_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
        doing_business_as: doing_business_as
        phone_number: phone_number
        institution_sub_type: INVESTMENT
        cip_id: cip_id
        trading_type: PRIVATE
        cip_id_country: cip_id_country
        cip_id_type: EIN
        email: email
        regulation_status: US_REGULATED
      properties:
        sanctions_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        name:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: Allowed in create and update
          type: string
        business_address:
          $ref: '#/components/schemas/IdentityMailingAddress'
        phone_number:
          title: Allowed in create and update
          type: string
        email:
          title: Allowed in create and update
          type: string
        institution_type:
          $ref: '#/components/schemas/InstitutionType'
        institution_sub_type:
          $ref: '#/components/schemas/InstitutionSubType'
        cip_id:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: |-
            Allowed in create and update
            SSN format: xxx-xx-xxxx
            ITIN format: xxx-xx-xxxx
            EIN format: xx-xxxxxxx
          type: string
        cip_id_type:
          $ref: '#/components/schemas/InstitutionCIPIDType'
        cip_id_country:
          description: Allowed in create and update. Must be an ISO 3166-1 alpha 3
            code.
          type: string
        govt_registration_date:
          format: date-time
          title: date at which the institution is registered with govt
          type: string
        incorporation_address:
          $ref: '#/components/schemas/IdentityMailingAddress'
        regulation_status:
          $ref: '#/components/schemas/RegulationStatus'
        trading_type:
          $ref: '#/components/schemas/TradingType'
        listed_exchange:
          title: exchange in which the institution is listed
          type: string
        ticker_symbol:
          description: Ticker symbol of the institution if publicly traded or ticker
            symbol of the parent institution.
          type: string
        parent_institution_name:
          title: name of the parent institution if the institution is a subsidiary
            of parent institution
          type: string
        regulator_name:
          title: name of the financial regulator
          type: string
        regulator_jurisdiction:
          title: country or jurisdiction of financial regulator
          type: string
        regulator_register_number:
          title: registrar number of regulator
          type: string
        document_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        additional_screening_status:
          $ref: '#/components/schemas/IdentityStatus'
        doing_business_as:
          title: Allowed in create and update
          type: string
      type: object
    InstitutionMember:
      example:
        ownership: ownership
        identity_id: identity_id
        roles:
        - BENEFICIAL_OWNER
        - BENEFICIAL_OWNER
        name: name
        position: position
        summary_status: null
        id: id
      properties:
        identity_id:
          title: The ID of the member identity
          type: string
        roles:
          items:
            $ref: '#/components/schemas/InstitutionRoleType'
          title: The type of membership this identity has in the institution
          type: array
        ownership:
          description: Decimal number representing the percent ownership the identity
            has in the company--  e.g. 5 represents 5% ownership.
          type: string
        position:
          title: The position the identity holds with the company
          type: string
        name:
          title: Member's full name. Not writable from API
          type: string
        summary_status:
          $ref: '#/components/schemas/IdentityStatus'
        id:
          description: "Institution member ID. Note: This field is auto-generated.\
            \ Specifying an ID when creating an institution member is a client error."
          type: string
      type: object
    InstitutionRoleType:
      enum:
      - BENEFICIAL_OWNER
      - ACCOUNT_OPENER
      - TRUSTEE
      - AUTHORIZED_USER
      - GRANTOR
      - MANAGEMENT_CONTROL_PERSON
      - BENEFICIARY
      title: ""
      type: string
    InstitutionSubType:
      enum:
      - INVESTMENT
      - HEDGE_FUND
      - MONEY_SERVICE_BUSINESS
      - STO_ISSUER
      - PRECIOUS_METALS
      - NON_PROFIT
      - REGISTERED_INVESTMENT_ADVISOR
      - AGRICULTURE_FORESTRY_FISHING_HUNTING
      - MINING
      - UTILITIES
      - CONSTRUCTION
      - MANUFACTURING
      - WHOLESALE_TRADE
      - RETAIL_TRADE
      - TRANSPORTATION_WAREHOUSING
      - INFORMATION
      - FINANCE_INSURANCE
      - REAL_ESTATE_RENTAL_LEASING
      - PROFESSIONAL_SCIENTIFIC_TECHNICAL_SERVICES
      - MANAGEMENT_OF_COMPANIES_ENTERPRISES
      - ADMINISTRATIVE_SUPPORT_WASTE_MANAGEMENT_REMEDIATION_SERVICES
      - EDUCATIONAL_SERVICES
      - HEALTH_CARE_SOCIAL_ASSISTANCE
      - ARTS_ENTERTAINMENT_RECREATION
      - ACCOMMODATION_FOOD_SERVICES
      - OTHER_SERVICES
      - PUBLIC_ADMINISTRATION
      - NOT_CLASSIFIED
      - ADULT_ENTERTAINMENT
      - AUCTIONS
      - AUTOMOBILES
      - BLOCKCHAIN
      - CRYPTO
      - DRUGS
      - EXPORT_IMPORT
      - E_COMMERCE
      - FINANCIAL_INSTITUTION
      - GAMBLING
      - INSURANCE
      - MARKET_MAKER
      - RANSOMWARE
      - SHELL_BANK
      - TRAVEL_TRANSPORT
      - WEAPONS
      title: ""
      type: string
    InstitutionType:
      enum:
      - TRUST
      - CORPORATION
      - LLC
      - PARTNERSHIP
      title: ""
      type: string
    ListIdentitiesResponse:
      example:
        next_page_cursor: next_page_cursor
        items:
        - id: f190b163-208f-4d73-8deb-4fb8b24add00
          summary_status: PENDING
        - id: f190b163-208f-4d73-8deb-4fb8b24add00
          summary_status: PENDING
      properties:
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
        items:
          description: The result list of identities.
          items:
            $ref: '#/components/schemas/Identity'
          type: array
      type: object
    ListIdentityDocumentsResponse:
      example:
        documents:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          file_id: file_id
          name: name
          document_types:
          - OTHER_DOCUMENTS
          - OTHER_DOCUMENTS
          created_at: 2000-01-23T04:56:07.000+00:00
        - archived_at: 2000-01-23T04:56:07.000+00:00
          file_id: file_id
          name: name
          document_types:
          - OTHER_DOCUMENTS
          - OTHER_DOCUMENTS
          created_at: 2000-01-23T04:56:07.000+00:00
        pending_documents:
        - null
        - null
      properties:
        documents:
          items:
            $ref: '#/components/schemas/DocumentDescription'
          title: A list of documents
          type: array
        pending_documents:
          items:
            $ref: '#/components/schemas/DocumentType'
          title: The document types that are mandatory for the identity but are missing
          type: array
      type: object
    PassthroughVerifierType:
      enum:
      - JUMIO
      - ALLOY
      - LEXISNEXIS
      - MITEK
      - SUMSUB
      - MICROBILT
      - ONFIDO
      - CUSTOMER
      - EQUIFAX
      - ID3_AUTHENTICATE
      - FIS
      - PROVE
      type: string
    PersonDetails:
      example:
        verifier_id: verifier_id
        sanctions_verification_status: null
        date_of_birth: date_of_birth
        additional_screening_status: null
        id_verification_url: id_verification_url
        govt_id: govt_id
        govt_id_type: SSN
        country_of_birth: country_of_birth
        cip_id: cip_id
        cip_id_country: cip_id_country
        first_name: first_name
        email: email
        profession: profession
        passthrough_verification_status: null
        address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
        verifier_type: JUMIO
        passthrough_verification_id: passthrough_verification_id
        last_name: last_name
        middle_name: middle_name
        id_verification_status: PENDING
        passthrough_verified_at: 2000-01-23T04:56:07.000+00:00
        passthrough_verification_fields:
        - FULL_LEGAL_NAME
        - FULL_LEGAL_NAME
        nationality: nationality
        phone_number: phone_number
        cip_id_type: null
        passthrough_verifier_type: JUMIO
      properties:
        id_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        sanctions_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        first_name:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: Allowed in create and update
          type: string
        last_name:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: Allowed in create and update
          type: string
        date_of_birth:
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          title: Allowed in create and update
          type: string
        govt_id:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: "DEPRECATED: use cip_id instead"
          type: string
        address:
          $ref: '#/components/schemas/IdentityMailingAddress'
        phone_number:
          title: Allowed in create and update
          type: string
        email:
          title: Allowed in create and update
          type: string
        nationality:
          description: Allowed in create and update. Must be an ISO 3166-1 alpha 3
            code.
          pattern: "^[A-Z]{3}$"
          type: string
        verifier_id:
          title: "Allowed in create and update. The id used by the external verifier.\
            \ For Jumio, this is the \"transaction reference\""
          type: string
        verifier_type:
          $ref: '#/components/schemas/identityprotoVerifierType'
        id_verification_url:
          title: "When PAXOS verifier is used, the iframe url returned for ID verification"
          type: string
        passthrough_verifier_type:
          $ref: '#/components/schemas/PassthroughVerifierType'
        passthrough_verified_at:
          format: date-time
          title: "When PASSTHROUGH verifier is used, this specifies the time that\
            \ ID verification was completed"
          type: string
        govt_id_type:
          $ref: '#/components/schemas/PersonDetailsCIPIDType'
        cip_id:
          maxLength: 200
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: |-
            SSN or TIN, unique for each Identity object. Allowed in create and update
            SSN format: xxx-xx-xxxx
            ITIN format: xxx-xx-xxxx
            EIN format: xx-xxxxxxx
          type: string
        cip_id_type:
          $ref: '#/components/schemas/PersonDetailsCIPIDType'
        cip_id_country:
          description: Allowed in create and update. Must be an ISO 3166-1 alpha 3
            code.
          type: string
        additional_screening_status:
          $ref: '#/components/schemas/IdentityStatus'
        profession:
          description: Allowed in create and update.
          type: string
        middle_name:
          maxLength: 200
          title: Allowed in create and update
          type: string
        country_of_birth:
          description: Allowed in create and update.
          type: string
        passthrough_verification_id:
          description: Unique identifier for the underlying individual's ID verification
            record.
          type: string
        passthrough_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        passthrough_verification_fields:
          description: List of verification fields used by the external verifier to
            validate the individual's identity.
          items:
            $ref: '#/components/schemas/PassthroughVerificationField'
          type: array
      type: object
    RegulationStatus:
      enum:
      - US_REGULATED
      - INTL_REGULATED
      - NON_REGULATED
      type: string
    RetryIdVerificationResponse:
      example:
        url: url
      properties:
        url:
          description: The id verification URL assigned to the retried identity.
          type: string
      type: object
    SetVerifierCredentialsRequest:
      example:
        verifier_type: JUMIO
        auth_token: AUTHTOKEN
        auth_secret: AUTHSECRET
      properties:
        verifier_type:
          $ref: '#/components/schemas/identityprotoVerifierType'
        auth_token:
          type: string
        auth_secret:
          type: string
      required:
      - verifier_type
      type: object
    SetVerifierCredentialsResponse:
      type: object
    TINVerificationStatus:
      description: The TIN verification status for the associated `tax_payer_id`.
      enum:
      - TIN_VERIFICATION_PENDING
      - TIN_VERIFICATION_ERROR
      - TIN_VERIFICATION_VALID
      type: string
    TaxDetail:
      example:
        tax_payer_country: tax_payer_country
        tin_verification_status: TIN_VERIFICATION_PENDING
        tax_payer_id: tax_payer_id
      properties:
        tax_payer_id:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          title: "For U.S. citizens it is the SSN, TIN or EIN. For Brazil citizens,\
            \ it is the CPF. Allowed in create and update"
          type: string
        tax_payer_country:
          title: Allowed in create and update. Must be an ISO 3166-1 alpha 3 code
          type: string
        tin_verification_status:
          $ref: '#/components/schemas/TINVerificationStatus'
      type: object
    TradingType:
      enum:
      - PRIVATE
      - PUBLIC
      - PUBLICLY_TRADED_SUBSIDIARY
      type: string
    WealthSource:
      enum:
      - INHERITANCE
      - INVESTMENT_GAINS
      - BUSINESS_OWNERSHIP_DIVIDENDS
      - EMPLOYMENT_INCOME
      type: string
    AddInstitutionMembersRequest:
      example:
        members:
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        institution_id: institution_id
      properties:
        institution_id:
          description: ID of institution identity to which members will be added.
          type: string
        members:
          description: A non-empty array of institution members to be added.
          items:
            $ref: '#/components/schemas/InstitutionMember'
          type: array
      required:
      - institution_id
      - members
      type: object
    AddInstitutionMembersResponse:
      example:
        members:
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        - ownership: ownership
          identity_id: identity_id
          roles:
          - BENEFICIAL_OWNER
          - BENEFICIAL_OWNER
          name: name
          position: position
          summary_status: null
          id: id
        institution_id: institution_id
      properties:
        institution_id:
          description: ID of institution identity to which members were added.
          type: string
        members:
          description: List of institution members that were added to the institution.
          items:
            $ref: '#/components/schemas/InstitutionMember'
          type: array
      type: object
    DeleteInstitutionMemberResponse:
      type: object
    AccountAccountType:
      enum:
      - BROKERAGE
      - TRADITIONAL_IRA
      - ROTH_IRA
      - SEP_IRA
      - FINANCIAL_ADVISOR
      type: string
    AccountMemberAccountRoleType:
      enum:
      - BENEFICIAL_OWNER
      - AUTHORIZED_USER
      - FINANCIAL_ADVISOR
      type: string
    Account:
      example:
        ref_id: ref_id
        metadata:
          key: metadata
        identity_id: identity_id
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        summary_status: PENDING
        type: BROKERAGE
        admin_disabled: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        profile_id: profile_id
        members:
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
        user_disabled: true
        id: id
      properties:
        id:
          description: The id used for all other interactions with this account.
          type: string
        identity_id:
          description: The primary identity associated with the account.
          type: string
        description:
          description: A free-text description of the account.
          type: string
        admin_disabled:
          description: true if the account has been disabled by a Paxos admin.
          type: boolean
        user_disabled:
          description: true if the account has been disabled by the API user.
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: API User-facing metadata.
          type: object
        ref_id:
          description: A user-facing ID to prevent duplicate account creation. Unique
            for all accounts created by the same API user.
          type: string
        members:
          description: Additional Identities with varying types of access to this
            account.
          items:
            $ref: '#/components/schemas/AccountMember'
          type: array
        created_at:
          description: The time this account was created.
          format: date-time
          type: string
        summary_status:
          $ref: '#/components/schemas/IdentityStatus'
        updated_at:
          description: The time this account was updated.
          format: date-time
          type: string
        profile_id:
          description: |-
            The ID of the profile created for the account when `create_profile=true`.
            The [Profile](#tag/Profiles) type is `NORMAL`.
            The field is omitted when the account has no associated [Profile](#tag/Profiles).
          type: string
        type:
          $ref: '#/components/schemas/AccountAccountType'
      type: object
    AccountMember:
      example:
        identity_id: identity_id
        roles:
        - null
        - null
        id: id
        type: BENEFICIAL_OWNER
      properties:
        identity_id:
          type: string
        type:
          $ref: '#/components/schemas/AccountMemberAccountRoleType'
        roles:
          items:
            $ref: '#/components/schemas/AccountMemberAccountRoleType'
          type: array
        id:
          description: "Account member ID. Note: This field is auto-generated. Specifying\
            \ an ID when creating an account member is a client error."
          type: string
      type: object
    CreateAccountRequest:
      example:
        account:
          identity_id: 82c338f4-3cb7-4d9b-be2a-4b077c82ee3a
          ref_id: fec36070-4c23-48ac-9ee1-df338b8233fc
          description: Individual account for John Doe
          metadata:
            custom_field: custom_value
      properties:
        account:
          $ref: '#/components/schemas/Account'
        create_profile:
          description: |-
            Create a new profile for this account.
            Set to `true` to track user balances at the Profile level for this account.
            See also [Profiles](#tag/Profiles).
          type: boolean
      required:
      - account
      type: object
    ListAccountsRequestOrderBy:
      enum:
      - CREATED_AT
      type: string
    ListAccountsResponse:
      example:
        next_page_cursor: next_page_cursor
        items:
        - ref_id: ref_id
          metadata:
            key: metadata
          identity_id: identity_id
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          summary_status: PENDING
          type: BROKERAGE
          admin_disabled: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          profile_id: profile_id
          members:
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          user_disabled: true
          id: id
        - ref_id: ref_id
          metadata:
            key: metadata
          identity_id: identity_id
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          summary_status: PENDING
          type: BROKERAGE
          admin_disabled: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          profile_id: profile_id
          members:
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          user_disabled: true
          id: id
      properties:
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
        items:
          description: The result list of accounts.
          items:
            $ref: '#/components/schemas/Account'
          type: array
      type: object
    UpdateAccountRequest:
      example:
        set_user_disabled: true
        account:
          ref_id: ref_id
          metadata:
            key: metadata
          identity_id: identity_id
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          summary_status: PENDING
          type: BROKERAGE
          admin_disabled: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          profile_id: profile_id
          members:
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          - identity_id: identity_id
            roles:
            - null
            - null
            id: id
            type: BENEFICIAL_OWNER
          user_disabled: true
          id: id
      properties:
        account:
          $ref: '#/components/schemas/Account'
        set_user_disabled:
          description: true if the account is required to be disabled by the API user.
          type: boolean
      required:
      - account
      type: object
    AddAccountMembersRequest:
      example:
        account_id: account_id
        members:
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
      properties:
        account_id:
          description: ID of account to which members will be added.
          type: string
        members:
          description: A non-empty array of account members to be added.
          items:
            $ref: '#/components/schemas/AccountMember'
          type: array
      required:
      - account_id
      - members
      type: object
    AddAccountMembersResponse:
      example:
        account_id: account_id
        members:
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
        - identity_id: identity_id
          roles:
          - null
          - null
          id: id
          type: BENEFICIAL_OWNER
      properties:
        account_id:
          description: ID of account to which members were added.
          type: string
        members:
          description: List of account members that were added to the account.
          items:
            $ref: '#/components/schemas/AccountMember'
          type: array
      type: object
    DeleteAccountMemberResponse:
      type: object
    SandboxSetIdentityResponse:
      type: object
    SetDisable:
      properties:
        disabled:
          type: boolean
      type: object
    PricePriceMarket:
      description: ""
      enum:
      - ETHUSD
      - BTCUSD
      - PAXGUSD
      - BCHUSD
      - LTCUSD
      - USDPUSD
      - LINKUSD
      - MATICUSD
      - AAVEUSD
      - UNIUSD
      title: Market
      type: string
    apiHttpBody:
      description: |-
        Message that represents an arbitrary HTTP body. It should only be used for
        payload formats that can't be represented as JSON, such as raw binary or
        an HTML page.


        This message can be used both in streaming and non-streaming API methods in
        the request as well as the response.

        It can be used as a top-level request field, which is convenient if one
        wants to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body.

        Example:

            message GetResourceRequest {
              // A unique request id.
              string request_id = 1;

              // The raw HTTP body is bound to this field.
              google.api.HttpBody http_body = 2;

            }

            service ResourceService {
              rpc GetResource(GetResourceRequest)
                returns (google.api.HttpBody);
              rpc UpdateResource(google.api.HttpBody)
                returns (google.protobuf.Empty);

            }

        Example with streaming methods:

            service CaldavService {
              rpc GetCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
              rpc UpdateCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);

            }

        Use of this type only changes how the request and response bodies are
        handled, all other features will continue to work unchanged.
      properties:
        content_type:
          description: The HTTP Content-Type header value specifying the content type
            of the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          format: byte
          type: string
        extensions:
          description: |-
            Application specific response metadata. Must be set in the first response
            for streaming APIs.
          items:
            $ref: '#/components/schemas/bufAny'
          type: array
      type: object
    BookLevel:
      example:
        amount: amount
        price: price
      properties:
        price:
          description: Price at level.
          type: string
        amount:
          description: Amount of orders at pricing level.
          type: string
      type: object
    CancelOrderResponse:
      type: object
    ExchangeStats:
      example:
        volume: volume
        high: high
        low: low
        volume_weighted_average_price: volume_weighted_average_price
        range:
          end: 2000-01-23T04:56:07.000+00:00
          begin: 2000-01-23T04:56:07.000+00:00
        open: open
      properties:
        high:
          description: Highest price in range.
          type: string
        low:
          description: Lowest price in range.
          type: string
        open:
          description: First price in range.
          type: string
        volume:
          title: Total Volume in Time Period
          type: string
        volume_weighted_average_price:
          description: Volume-Weighted Average Price over Time Period.
          type: string
        range:
          $ref: '#/components/schemas/TimestampRange'
      type: object
    Execution:
      example:
        gross_trade_amount: gross_trade_amount
        side: BUY
        amount: amount
        executed_at: 2000-01-23T04:56:07.000+00:00
        rebate: rebate
        market: ETHEUR
        execution_id: execution_id
        account_id: account_id
        price: price
        commission: commission
        commission_asset: commission_asset
        rebate_asset: rebate_asset
        order_id: order_id
      properties:
        execution_id:
          format: uint64
          title: Unique Execution id
          type: string
        order_id:
          description: The UUID of the order associated with the execution.
          type: string
        executed_at:
          description: Timestamp of the execution.
          format: date-time
          type: string
        market:
          $ref: '#/components/schemas/Market'
        side:
          $ref: '#/components/schemas/OrderSide'
        amount:
          description: Execution amount.
          type: string
        price:
          description: Execution price.
          type: string
        commission:
          description: Amount of commission paid.
          type: string
        commission_asset:
          description: "Currency of Commission payment. Fiat Only (USD, EUR, SGD)."
          type: string
        rebate:
          description: Amount of rebate applied.
          type: string
        rebate_asset:
          description: "Currency of the rebate. Fiat Only (USD, EUR, SGD)."
          type: string
        account_id:
          description: Account ID associated with the execution.
          type: string
        gross_trade_amount:
          description: The total asset traded (asset amount multiplied by price paid).
          type: string
      type: object
    HistoricalPrice:
      example:
        average_price: average_price
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        average_price:
          description: |-
            Time-weighted average price over the specified time period, beginning at the defined timestamp.
            For example, if `increment` is set to `ONE_HOUR`, then `average_price` is the time-weighted average for an hour.
            The entire time period must be completed to display results.
          type: string
        timestamp:
          description: Timestamp at the beginning of an increment.
          format: date-time
          type: string
      type: object
    Increment:
      enum:
      - ONE_MINUTE
      - FIVE_MINUTES
      - FIFTEEN_MINUTES
      - THIRTY_MINUTES
      - ONE_HOUR
      - TWO_HOURS
      - TWELVE_HOURS
      - ONE_DAY
      - ONE_WEEK
      - TWO_WEEKS
      - FOUR_WEEKS
      type: string
    ListExecutionsResponse:
      example:
        items:
        - gross_trade_amount: gross_trade_amount
          side: BUY
          amount: amount
          executed_at: 2000-01-23T04:56:07.000+00:00
          rebate: rebate
          market: ETHEUR
          execution_id: execution_id
          account_id: account_id
          price: price
          commission: commission
          commission_asset: commission_asset
          rebate_asset: rebate_asset
          order_id: order_id
        - gross_trade_amount: gross_trade_amount
          side: BUY
          amount: amount
          executed_at: 2000-01-23T04:56:07.000+00:00
          rebate: rebate
          market: ETHEUR
          execution_id: execution_id
          account_id: account_id
          price: price
          commission: commission
          commission_asset: commission_asset
          rebate_asset: rebate_asset
          order_id: order_id
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    ListHistoricalPricesResponse:
      example:
        total_count: 0
        items:
        - average_price: average_price
          timestamp: 2000-01-23T04:56:07.000+00:00
        - average_price: average_price
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        total_count:
          format: int32
          type: integer
        items:
          description: List of historical prices.
          items:
            $ref: '#/components/schemas/HistoricalPrice'
          type: array
      type: object
    ListMarketsResponse:
      example:
        markets:
        - market: ETHEUR
          base_asset: base_asset
          quote_asset: quote_asset
          tick_rate: tick_rate
        - market: ETHEUR
          base_asset: base_asset
          quote_asset: quote_asset
          tick_rate: tick_rate
      properties:
        markets:
          items:
            $ref: '#/components/schemas/MarketDetails'
          type: array
      type: object
    ListOrdersResponse:
      example:
        items:
        - ref_id: ref_id
          side: BUY
          metadata:
            key: metadata
          amount_filled: amount_filled
          identity_id: identity_id
          identity_account_id: identity_account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          type: LIMIT
          expiration_date: 2000-01-23T04:56:07.000+00:00
          is_triggered: true
          market: ETHEUR
          quote_amount: quote_amount
          time_in_force: GTC
          stop_price: stop_price
          profile_id: profile_id
          price: price
          recipient_profile_id: recipient_profile_id
          base_amount: base_amount
          volume_weighted_average_price: volume_weighted_average_price
          id: id
          modified_at: 2000-01-23T04:56:07.000+00:00
          status: PENDING_SUBMISSION
        - ref_id: ref_id
          side: BUY
          metadata:
            key: metadata
          amount_filled: amount_filled
          identity_id: identity_id
          identity_account_id: identity_account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          type: LIMIT
          expiration_date: 2000-01-23T04:56:07.000+00:00
          is_triggered: true
          market: ETHEUR
          quote_amount: quote_amount
          time_in_force: GTC
          stop_price: stop_price
          profile_id: profile_id
          price: price
          recipient_profile_id: recipient_profile_id
          base_amount: base_amount
          volume_weighted_average_price: volume_weighted_average_price
          id: id
          modified_at: 2000-01-23T04:56:07.000+00:00
          status: PENDING_SUBMISSION
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/Order'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    ListPricesResponse:
      example:
        items:
        - market: ETHUSD
          yesterday_price: yesterday_price
          current_price: current_price
          snapshot_at: 2000-01-23T04:56:07.000+00:00
        - market: ETHUSD
          yesterday_price: yesterday_price
          current_price: current_price
          snapshot_at: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/Pricing'
          type: array
      type: object
    ListQuoteExecutionsResponse:
      example:
        total_count: 0
        items:
        - id: 43a59965-be3a-45ab-841d-c55386e0ff90
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
          status: SETTLED
          market: BTCUSD
          side: BUY
          price: "6001.2"
          base_amount: "2.35"
          base_asset: BTC
          quote_amount: "14102.82"
          quote_asset: USD
          created_at: 2020-01-17T18:36:31.345Z
          settled_at: 2020-01-17T18:36:32.123Z
          metadata:
            customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
        - id: 43a59965-be3a-45ab-841d-c55386e0ff90
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
          status: SETTLED
          market: BTCUSD
          side: BUY
          price: "6001.2"
          base_amount: "2.35"
          base_asset: BTC
          quote_amount: "14102.82"
          quote_asset: USD
          created_at: 2020-01-17T18:36:31.345Z
          settled_at: 2020-01-17T18:36:32.123Z
          metadata:
            customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
        next_page_cursor: next_page_cursor
      properties:
        total_count:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/QuoteExecution'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    ListQuotesResponse:
      example:
        items:
        - id: 366a26d2-3098-4226-a520-4bb43ae4d922
          market: BTCUSD
          side: BUY
          price: "6001.2"
          base_asset: BTC
          quote_asset: USD
          created_at: 2020-01-17T18:36:08Z
          expires_at: 2020-01-17T18:36:38Z
        - id: 366a26d2-3098-4226-a520-4bb43ae4d922
          market: BTCUSD
          side: BUY
          price: "6001.2"
          base_asset: BTC
          quote_asset: USD
          created_at: 2020-01-17T18:36:08Z
          expires_at: 2020-01-17T18:36:38Z
      properties:
        items:
          items:
            $ref: '#/components/schemas/Quote'
          type: array
      type: object
    ListRecentExecutionsResponse:
      example:
        items:
        - amount: amount
          price: price
          executed_at: executed_at
          match_number: match_number
        - amount: amount
          price: price
          executed_at: executed_at
          match_number: match_number
      properties:
        items:
          description: Recent Executions.
          items:
            $ref: '#/components/schemas/RecentExecution'
          type: array
      type: object
    ListTickersResponse:
      example:
        tickers:
        - market: ETHUSD
          last_execution:
            amount: amount
            price: price
          best_bid:
            amount: amount
            price: price
          today:
            volume: volume
            high: high
            low: low
            volume_weighted_average_price: volume_weighted_average_price
            range:
              end: 2000-01-23T04:56:07.000+00:00
              begin: 2000-01-23T04:56:07.000+00:00
            open: open
          best_ask:
            amount: amount
            price: price
          last_day:
            volume: volume
            high: high
            low: low
            volume_weighted_average_price: volume_weighted_average_price
            range:
              end: 2000-01-23T04:56:07.000+00:00
              begin: 2000-01-23T04:56:07.000+00:00
            open: open
          snapshot_at: 2000-01-23T04:56:07.000+00:00
        - market: ETHUSD
          last_execution:
            amount: amount
            price: price
          best_bid:
            amount: amount
            price: price
          today:
            volume: volume
            high: high
            low: low
            volume_weighted_average_price: volume_weighted_average_price
            range:
              end: 2000-01-23T04:56:07.000+00:00
              begin: 2000-01-23T04:56:07.000+00:00
            open: open
          best_ask:
            amount: amount
            price: price
          last_day:
            volume: volume
            high: high
            low: low
            volume_weighted_average_price: volume_weighted_average_price
            range:
              end: 2000-01-23T04:56:07.000+00:00
              begin: 2000-01-23T04:56:07.000+00:00
            open: open
          snapshot_at: 2000-01-23T04:56:07.000+00:00
      properties:
        tickers:
          items:
            $ref: '#/components/schemas/TickerRecord'
          type: array
      type: object
    Market:
      enum:
      - ETHEUR
      - ETHSGD
      - ETHUSD
      - BTCEUR
      - BTCSGD
      - BTCUSD
      - PAXGUSD
      - BCHUSD
      - LTCUSD
      - USDPUSD
      - LINKUSD
      - MATICUSD
      - AAVEUSD
      - UNIUSD
      title: ""
      type: string
    MarketDetails:
      example:
        market: ETHEUR
        base_asset: base_asset
        quote_asset: quote_asset
        tick_rate: tick_rate
      properties:
        market:
          $ref: '#/components/schemas/Market'
        base_asset:
          title: "Base asset. Crypto Only (BTC, ETH, PAXG)"
          type: string
        quote_asset:
          description: "Quote asset. Fiat Only (USD, EUR, SGD)."
          type: string
        tick_rate:
          title: Tick rate for market
          type: string
      type: object
    Order:
      example:
        ref_id: ref_id
        side: BUY
        metadata:
          key: metadata
        amount_filled: amount_filled
        identity_id: identity_id
        identity_account_id: identity_account_id
        created_at: 2000-01-23T04:56:07.000+00:00
        type: LIMIT
        expiration_date: 2000-01-23T04:56:07.000+00:00
        is_triggered: true
        market: ETHEUR
        quote_amount: quote_amount
        time_in_force: GTC
        stop_price: stop_price
        profile_id: profile_id
        price: price
        recipient_profile_id: recipient_profile_id
        base_amount: base_amount
        volume_weighted_average_price: volume_weighted_average_price
        id: id
        modified_at: 2000-01-23T04:56:07.000+00:00
        status: PENDING_SUBMISSION
      properties:
        id:
          description: The UUID of the order.
          type: string
        profile_id:
          description: The profile ID the order is associated with.
          type: string
        ref_id:
          description: The idempotence ID for order creation. Can be reused if the
            order has been closed for more than 24 hours.
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        side:
          $ref: '#/components/schemas/OrderSide'
        market:
          $ref: '#/components/schemas/Market'
        type:
          $ref: '#/components/schemas/OrderType'
        base_amount:
          description: The base amount or purchase amount for a market sell order.
          type: string
        price:
          description: The quote price.
          type: string
        quote_amount:
          description: The quote amount of purchase for a market buy order.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Client-specified metadata.
          type: object
        created_at:
          description: The time at which the order was created.
          format: date-time
          type: string
        modified_at:
          description: The time at which the order was last modified.
          format: date-time
          type: string
        amount_filled:
          description: The amount that was filled.
          type: string
        volume_weighted_average_price:
          description: The volume-weighted average price.
          type: string
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        expiration_date:
          description: The date the order will expire if not completed when specified
            time in force is GTT.
          format: date-time
          type: string
        identity_id:
          description: "The end user that requests the trade. This field must be used\
            \ in conjunction with `identity_account_id`, otherwise the order is rejected.\
            \ Depending on your integration type, `identity_id` and `identity_account_id`\
            \ may be required."
          type: string
        identity_account_id:
          description: "The account under which this order is placed. The provided\
            \ identity must be allowed to trade on behalf of this account. This field\
            \ must be used in conjunction with `identity_id`, otherwise the order\
            \ is rejected. Depending on your integration type, `identity_account_id`\
            \ and `identity_id` may be required."
          type: string
        stop_price:
          title: The stop price for a stop order
          type: string
        recipient_profile_id:
          description: "The profileId that will receive settled currency (base for\
            \ buy orders, quote for sell orders)."
          type: string
        is_triggered:
          description: Returns `true` when a stop order has been triggered.
          type: boolean
      type: object
    OrderBy:
      enum:
      - CREATED_AT
      type: string
    OrderSide:
      description: Trade side.
      enum:
      - BUY
      - SELL
      type: string
    OrderStatus:
      enum:
      - PENDING_SUBMISSION
      - SUBMITTED
      - OPEN
      - FILLED
      - CANCELLED
      - REJECTED
      type: string
    OrderType:
      description: Trade type.
      enum:
      - LIMIT
      - MARKET
      - POST_ONLY_LIMIT
      - STOP_MARKET
      - STOP_LIMIT
      type: string
    Pagination:
      properties:
        limit:
          format: int32
          title: Number of results to return
          type: integer
        offset:
          format: int32
          title: Number of results to skip
          type: integer
      type: object
    Pricing:
      example:
        market: ETHUSD
        yesterday_price: yesterday_price
        current_price: current_price
        snapshot_at: 2000-01-23T04:56:07.000+00:00
      properties:
        market:
          $ref: '#/components/schemas/PricePriceMarket'
        current_price:
          description: The current price for the given market.
          type: string
        yesterday_price:
          description: The one-minute average price from 24 hours ago. Updates once
            per minute.
          type: string
        snapshot_at:
          description: "The time when the price was generated. RFC3339 format, like\
            \ `2023-01-03T18:27:40.294528Z`."
          format: date-time
          type: string
      type: object
    Quote:
      description: |-
        A Quote is a guaranteed price to buy or sell on a particular market for a
        limited period of time (a "held rate").
      example:
        id: 366a26d2-3098-4226-a520-4bb43ae4d922
        market: BTCUSD
        side: BUY
        price: "6001.2"
        base_asset: BTC
        quote_asset: USD
        created_at: 2020-01-17T18:36:08Z
        expires_at: 2020-01-17T18:36:38Z
      properties:
        id:
          description: The UUID of the quote.
          type: string
        market:
          $ref: '#/components/schemas/Market'
        side:
          $ref: '#/components/schemas/OrderSide'
        price:
          description: "The guaranteed price, held until expires_at."
          type: string
        base_asset:
          description: "The \"base\" side of the trading pair (crypto - like BTC,\
            \ ETH, PAXG)."
          type: string
        quote_asset:
          description: "The \"quote\" side of the trading pair (fiat - like USD, EUR,\
            \ SGD)."
          type: string
        created_at:
          description: The time at which the quote was first offered.
          format: date-time
          type: string
        expires_at:
          description: The time at which the quote expires.
          format: date-time
          type: string
      required:
      - base_asset
      - created_at
      - expires_at
      - id
      - market
      - price
      - quote_asset
      - side
      type: object
    QuoteExecution:
      description: A QuoteExecution is an order to buy or sell an asset at a particular
        held Quote.
      example:
        id: 43a59965-be3a-45ab-841d-c55386e0ff90
        profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
        status: SETTLED
        market: BTCUSD
        side: BUY
        price: "6001.2"
        base_amount: "2.35"
        base_asset: BTC
        quote_amount: "14102.82"
        quote_asset: USD
        created_at: 2020-01-17T18:36:31.345Z
        settled_at: 2020-01-17T18:36:32.123Z
        metadata:
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
      properties:
        id:
          description: The UUID of the quote execution.
          type: string
        profile_id:
          description: The ID of the profile under which this order executed.
          type: string
        quote_id:
          description: The ID of the quote used to create this quote execution.
          type: string
        ref_id:
          description: A unique identifier for the quote execution creation (for idempotence).
          type: string
        status:
          $ref: '#/components/schemas/QuoteExecutionStatus'
        market:
          $ref: '#/components/schemas/Market'
        side:
          $ref: '#/components/schemas/OrderSide'
        price:
          description: The guaranteed price of the quote.
          type: string
        base_amount:
          description: The amount of assets (crypto) in the transaction.
          type: string
        base_asset:
          description: "The \"base\" side of the trading pair (crypto - like BTC,\
            \ ETH, PAXG)."
          type: string
        quote_amount:
          description: The amount of quote currency (cash) in the transaction.
          type: string
        quote_asset:
          description: "The \"quote\" side of the trading pair (fiat - like USD, EUR,\
            \ SGD)."
          type: string
        created_at:
          description: The time at which the quote execution was created.
          format: date-time
          type: string
        settled_at:
          description: "The time at which the quote execution was settled, completing\
            \ its lifecycle."
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Client-specified metadata.
          type: object
        identity_id:
          description: The identity under which this quote execution is placed.
          type: string
        account_id:
          description: The account under which this quote execution is placed.
          type: string
        recipient_profile_id:
          description: The ID of the profile under which to deposit the funds.
          type: string
      required:
      - base_amount
      - base_asset
      - created_at
      - id
      - market
      - price
      - profile_id
      - quote_amount
      - quote_asset
      - quote_id
      - side
      - status
      type: object
    QuoteExecutionStatus:
      description: |-
        A QuoteExecution begins in state `CREATED` and transitions to end state `SETTLED`
        when all accounting movements are complete.
      enum:
      - CREATED
      - SETTLED
      type: string
    RecentExecution:
      example:
        amount: amount
        price: price
        executed_at: executed_at
        match_number: match_number
      properties:
        match_number:
          description: Unique execution match number.
          type: string
        price:
          description: Price of the execution.
          type: string
        amount:
          description: Amount of the execution.
          type: string
        executed_at:
          description: Execution timestamp.
          type: string
      type: object
    TickerRecord:
      example:
        market: ETHUSD
        last_execution:
          amount: amount
          price: price
        best_bid:
          amount: amount
          price: price
        today:
          volume: volume
          high: high
          low: low
          volume_weighted_average_price: volume_weighted_average_price
          range:
            end: 2000-01-23T04:56:07.000+00:00
            begin: 2000-01-23T04:56:07.000+00:00
          open: open
        best_ask:
          amount: amount
          price: price
        last_day:
          volume: volume
          high: high
          low: low
          volume_weighted_average_price: volume_weighted_average_price
          range:
            end: 2000-01-23T04:56:07.000+00:00
            begin: 2000-01-23T04:56:07.000+00:00
          open: open
        snapshot_at: 2000-01-23T04:56:07.000+00:00
      properties:
        market:
          $ref: '#/components/schemas/PricePriceMarket'
        best_bid:
          $ref: '#/components/schemas/BookLevel'
        best_ask:
          $ref: '#/components/schemas/BookLevel'
        last_execution:
          $ref: '#/components/schemas/BookLevel'
        last_day:
          $ref: '#/components/schemas/ExchangeStats'
        today:
          $ref: '#/components/schemas/ExchangeStats'
        snapshot_at:
          description: The time at which this data was retrieved.
          format: date-time
          type: string
      type: object
    TimeInForce:
      description: |-
        How long an order will remain active before it expires.
        - Immediate-or-Cancel (IOC): Cancel if not executed immediately, partial fills allowed.
        - Good-Til-Canceled (GTC): Order can be canceled at any point until executed.
        - Good-Til-Time (GTT): Expires if not executed by a specified time. GTT must be greater than 10 seconds after the order is placed, otherwise the order will be rejected.
        - Fill-or-Kill (FOK): Fill entire order only or cancel entire order, does not allow for partial filling.

        **Time in Force validity for Order Types**

        | Order type      | Immediate or Cancel (IOC) | Good Til Canceled (GTC) | Good Til Time (GTT) | Fill or Kill (FOK) |
        | --------------- | ------------------------- | ----------------------- | ------------------- | ------------------ |
        | Market Order    | Default                   |  -                      |  -                  |  -                 |
        | Limit Order     | Valid                     | Default                 | Valid               | Valid              |
        | Post Only Limit | Valid                     | Default                 | Valid               | Valid              |
        | Stop Market     |  -                        | Default                 | Valid               |  -                 |
        | Stop Limit      |  -                        | Default                 | Valid               |  -                 |
      enum:
      - GTC
      - FOK
      - IOC
      - GTT
      type: string
    TimestampRange:
      example:
        end: 2000-01-23T04:56:07.000+00:00
        begin: 2000-01-23T04:56:07.000+00:00
      properties:
        begin:
          description: "Only return records after this timestamp, inclusive. RFC3339\
            \ format, like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
        end:
          description: "Only return records before this timestamp, inclusive. RFC3339\
            \ format, like `2006-01-02T15:04:05Z`."
          format: date-time
          type: string
      type: object
    bufAny:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    DepositAddressConversionTargetAsset:
      description: Asset to credit for deposits of Paxos-minted USD stablecoin.
      enum:
      - NO_CONVERSION
      - USD
      type: string
    FiatAccountOwnerInstitutionDetails:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    FiatAccountOwnerPersonDetails:
      example:
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
      type: object
    FiatNetworkInstructionsCbit:
      example:
        wallet_address: wallet_address
      properties:
        wallet_address:
          description: The wallet address of the CBIT account.
          type: string
      required:
      - wallet_address
      type: object
    FiatNetworkInstructionsWire:
      example:
        account_number: account_number
        intermediary_routing_details:
          routing_number_type: ABA
          bank_name: bank_name
          bank_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
          routing_number: routing_number
        routing_details:
          routing_number_type: ABA
          bank_name: bank_name
          bank_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
          routing_number: routing_number
        fiat_account_owner_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
      properties:
        account_number:
          description: The FiatAccount owner's bank account number.
          type: string
        fiat_account_owner_address:
          $ref: '#/components/schemas/MailingAddress'
        routing_details:
          $ref: '#/components/schemas/WireRoutingDetails'
        intermediary_routing_details:
          $ref: '#/components/schemas/WireRoutingDetails'
      required:
      - account_number
      - fiat_account_owner_address
      - routing_details
      type: object
    TransferDirection:
      description: Direction of the transfer.
      enum:
      - CREDIT
      - DEBIT
      type: string
    UpdateFiatAccountRequestUpdateFiatNetworkInstructions:
      example:
        wire:
          intermediary_routing_details:
            bank_name: bank_name
            bank_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
          routing_details:
            bank_name: bank_name
            bank_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
          fiat_account_owner_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
      properties:
        wire:
          $ref: '#/components/schemas/UpdateFiatNetworkInstructionsUpdateWire'
      title: FiatNetworkInstructions
      type: object
    UpdateFiatNetworkInstructionsUpdateWire:
      example:
        intermediary_routing_details:
          bank_name: bank_name
          bank_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
        routing_details:
          bank_name: bank_name
          bank_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
        fiat_account_owner_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
      properties:
        fiat_account_owner_address:
          $ref: '#/components/schemas/MailingAddress'
        routing_details:
          $ref: '#/components/schemas/UpdateWireUpdateRoutingDetails'
        intermediary_routing_details:
          $ref: '#/components/schemas/UpdateWireUpdateRoutingDetails'
      title: Wire
      type: object
    UpdateWireUpdateRoutingDetails:
      example:
        bank_name: bank_name
        bank_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
      properties:
        bank_name:
          description: The name of the bank.
          type: string
        bank_address:
          $ref: '#/components/schemas/MailingAddress'
      title: RoutingDetails
      type: object
    WireRoutingDetails:
      example:
        routing_number_type: ABA
        bank_name: bank_name
        bank_address:
          country: country
          province: province
          address2: address2
          city: city
          address1: address1
          zip_code: zip_code
        routing_number: routing_number
      properties:
        routing_number_type:
          $ref: '#/components/schemas/FiatWireAccountType'
        routing_number:
          description: The routing number.
          type: string
        bank_name:
          description: The name of the bank.
          type: string
        bank_address:
          $ref: '#/components/schemas/MailingAddress'
      required:
      - bank_address
      - bank_name
      - routing_number
      - routing_number_type
      type: object
    AddressInfo:
      properties:
        individual_info:
          $ref: '#/components/schemas/IndividualInfo'
        institution_info:
          $ref: '#/components/schemas/InstitutionInfo'
      required:
      - originator_info
      type: object
    AutoConversion:
      properties:
        from_transfer_id:
          title: Transfer Id of the deposit triggering this transfer (only on withdrawal
            transfers)
          type: string
        to_transfer_id:
          title: Transfer Id of the withdrawal triggered by this deposit(only on deposit
            transfers)
          type: string
      type: object
    Beneficiary:
      properties:
        person_details:
          $ref: '#/components/schemas/BeneficiaryPerson'
        institution_details:
          $ref: '#/components/schemas/BeneficiaryInstitution'
      type: object
    BeneficiaryInstitution:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    BeneficiaryPerson:
      properties:
        first_name:
          type: string
        last_name:
          type: string
      required:
      - firstName
      - lastName
      type: object
    CreateCryptoWithdrawalFeeRequest:
      example:
        asset: ETH
        amount: "0.00005"
        destination_address: 0xF0Aa84466e353E5390be37FE2934301c07c19a55
        crypto_network: ETHEREUM
      properties:
        asset:
          description: The currency to withdraw.
          type: string
        destination_address:
          description: The destination address.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        amount:
          description: |-
            The amount to withdraw. Must be greater than `0`.
            Specify exactly one of `amount` or `total`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        total:
          description: |-
            Total amount to withdraw, including fees. Must be greater than `0`.
            Specify exactly one of `total ` or `amount`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
      required:
      - asset
      - crypto_network
      - destination_address
      type: object
    CreateCryptoWithdrawalRequest:
      example:
        ref_id: idempotence_id
        profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        asset: BTC
        amount: "0.05"
        destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
        metadata:
          my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
        crypto_network: BITCOIN
      properties:
        ref_id:
          description: Client-specified ID for replay protection and lookup.
          type: string
        profile_id:
          description: The profile from which to withdraw.
          type: string
        identity_id:
          description: The Identity of the user making the withdrawal.
          type: string
        destination_address:
          description: The destination address.
          type: string
        asset:
          description: "The asset to withdraw, e.g. \"BTC\" , \"ETH\". Always specify\
            \ the `crypto_network` for all withdrawals."
          type: string
        balance_asset:
          description: The asset's balance to debit for withdrawals of Paxos-minted
            USD stablecoin.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
        account_id:
          description: The Account associated to the identity of the user making the
            withdrawal.
          type: string
        fee_id:
          description: Optional id of the guaranteed fee.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        amount:
          description: |-
            The amount to withdraw.
            Specify exactly one of `amount` or `total`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        total:
          description: |-
            Total amount to withdraw, including fees.
            Specify exactly one of `amount` or `total`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
      required:
      - asset
      - crypto_network
      - destination_address
      - profile_id
      type: object
    CreateDepositAddressRequest:
      example:
        profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        crypto_network: ETHEREUM
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
        ref_id: deposit_address_0
        metadata:
          my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
      properties:
        profile_id:
          description: The target profile for deposit crediting.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        identity_id:
          description: The Identity of the end user who will make deposits to the
            created address.
          type: string
        ref_id:
          description: Client-specified ID for replay protection and lookup.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata, which will be added to both the deposit address itself and transfers to the created address.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
        account_id:
          description: The Account associated to the identity of the user that will
            be linked to the created address.
          type: string
        conversion_target_asset:
          $ref: '#/components/schemas/DepositAddressConversionTargetAsset'
      required:
      - crypto_network
      - profile_id
      type: object
    CreateFiatAccountRequest:
      example:
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
        fiat_network_instructions:
          wire:
            account_number: "12345678"
            routing_details:
              routing_number: "031302971"
              bank_name: Customers Bank
              bank_address:
                country: USA
            fiat_account_owner_address:
              address1: 456 Main Street
              city: NY
              country: USA
        fiat_account_owner:
          person_details:
            first_name: Jane
            last_name: Doe
      properties:
        ref_id:
          description: The optional client-specified ID (for idempotence).
          type: string
        identity_id:
          description: The Paxos Identity (`identity_id`) of the user's FiatAccount.
          type: string
        account_id:
          description: |-
            The Paxos Account (`account_id`) of the user's FiatAccount.
            Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) initiating transfers on behalf of their end users.
          type: string
        fiat_account_owner:
          $ref: '#/components/schemas/FiatAccountOwner'
        fiat_network_instructions:
          $ref: '#/components/schemas/FiatNetworkInstructions'
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
      required:
      - fiat_account_owner
      - fiat_network_instructions
      - identity_id
      type: object
    CreateFiatDepositInstructionsRequest:
      example:
        ref_id: ref_id
        routing_number_type: ABA
        metadata:
          key: metadata
        account_id: account_id
        identity_id: identity_id
        profile_id: profile_id
        fiat_network: WIRE
      properties:
        ref_id:
          description: The optional client-specified ID (for idempotence).
          type: string
        profile_id:
          description: The Profile (`profile_id`) to deposit to.
          type: string
        identity_id:
          description: The Identity (`identity_id`) of the user making the deposit.
          type: string
        account_id:
          description: |-
            The Account (`account_id`) associated with the Identity of the user making the deposit.
            Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) making deposits on behalf of their end users.
          type: string
        fiat_network:
          $ref: '#/components/schemas/FiatNetwork'
        routing_number_type:
          $ref: '#/components/schemas/FiatWireAccountType'
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
      required:
      - fiat_network
      - identity_id
      - profile_id
      type: object
    CreateFiatWithdrawalRequest:
      example:
        amount: "12.34"
        asset: USD
        fiat_account_id: caa82b32-8abd-4899-afdc-f9d4bf9b4e98
        profile_id: 5fc6d191-193c-4e28-94fa-656bbdbdfaad
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
      properties:
        ref_id:
          description: The optional client-specified ID (for idempotence).
          type: string
        amount:
          description: The amount to withdraw.
          pattern: "^[0-9]*\\.?[0-9]{1,2}$"
          type: string
        asset:
          description: "The asset to withdraw. Current supported asset: \"USD\"."
          type: string
        fiat_account_id:
          description: The fiat account (`fiat_account_id`) destination.
          type: string
        profile_id:
          description: The Profile (`profile_id`) to withdraw from.
          type: string
        identity_id:
          description: The Identity (`identity_id`) of the user making the withdrawal.
          type: string
        account_id:
          description: |-
            The Account (`account_id`) associated with the Identity of the user making the withdrawal.
            Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) initiating transfers on behalf of their end users.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
        memo:
          description: Optional additional memo to be set on the outgoing wire. Only
            used for wire withdrawals.
          maxLength: 100
          pattern: "^[0-9A-Za-z /?:().,&'+-]*$"
          type: string
      required:
      - amount
      - asset
      - fiat_account_id
      - identity_id
      - profile_id
      type: object
    CreateInternalTransferRequest:
      example:
        ref_id: idempotence_id
        from_profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        to_profile_id: 37867177-f88c-45cc-b9b5-d786e7079609
        asset: BTC
        amount: "0.05"
        metadata:
          my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
      properties:
        ref_id:
          description: Client-specified ID for replay protection and lookup.
          type: string
        from_profile_id:
          description: The profile from which to send funds.
          type: string
        to_profile_id:
          description: The destination profile.
          type: string
        amount:
          description: The amount to transfer.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        asset:
          description: "The asset to transfer, e.g. \"USD\", \"BTC\", \"ETH\"."
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
      required:
      - amount
      - asset
      - from_profile_id
      - to_profile_id
      type: object
    CryptoWithdrawalFee:
      example:
        id: 34bd61ed-cf0a-4012-8be4-d347667b6154
        fee: "0.00005"
        asset: ETH
        amount: "0.001"
        expires_at: 2021-02-10T23:00:00Z
        destination_address: 0xF0Aa84466e353E5390be37FE2934301c07c19a55
        crypto_network: ETHEREUM
      properties:
        id:
          description: The id of the guaranteed fee.
          type: string
        fee:
          description: "The guaranteed fee value, in the same currency."
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        asset:
          description: The currency to withdraw.
          type: string
        expires_at:
          description: The expiration timestamp of the created fee.
          format: date-time
          type: string
        destination_address:
          description: The destination address.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        amount:
          description: |-
            The quoted amount to withdraw for which the fee is valid.
            Specify exactly one of `amount` or `total`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        total:
          description: |-
            Total amount to withdraw, including fees.
            Specify exactly one of `amount` or `total`, otherwise an error is returned.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
      required:
      - asset
      - crypto_network
      - destination_address
      - expires_at
      - fee
      - id
      type: object
    DeleteFiatAccountResponse:
      type: object
    DepositAddress:
      example:
        id: 34bd61ed-cf0a-4012-8be4-d347667b6154
        profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
        ref_id: deposit_address_0
        crypto_network: ETHEREUM
        address: 0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7
        conversion_target_asset: USD
        compatible_crypto_networks:
        - ETHEREUM
        metadata:
          my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
      properties:
        id:
          description: The UUID of the deposit address.
          type: string
        profile_id:
          description: The ID of the profile that will be credited when a deposit
            arrives with this address.
          type: string
        customer_id:
          description: The Paxos Customer to which the profile belongs.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        identity_id:
          description: The Identity of the end user who will make deposits to this
            address.
          type: string
        ref_id:
          description: Client-specified ID for replay protection and lookup.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata, which is set on deposit address creation.
            Up to 6 key/value pairs may be returned.
            Each key and value must be less than or equal to 100 characters.
          type: object
        address:
          description: The crypto address to send to for deposits.
          type: string
        account_id:
          description: The Account associated to the identity of the user that will
            be linked to the created address.
          type: string
        conversion_target_asset:
          $ref: '#/components/schemas/DepositAddressConversionTargetAsset'
        compatible_crypto_networks:
          description: List of networks compatible with the created address. Any of
            these networks can be used to deposit to the address.
          items:
            $ref: '#/components/schemas/CryptoNetwork'
          type: array
      required:
      - address
      - conversion_target_asset
      - crypto_network
      - customer_id
      - id
      - profile_id
      type: object
    FiatAccount:
      example:
        ref_id: ref_id
        metadata:
          key: metadata
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        identity_id: identity_id
        fiat_network_instructions:
          wire:
            account_number: account_number
            intermediary_routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            fiat_account_owner_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
          cbit:
            wallet_address: wallet_address
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        fiat_account_owner:
          person_details:
            last_name: last_name
            first_name: first_name
          institution_details:
            name: name
        status: PENDING
      properties:
        id:
          description: The Paxos FiatAccount ID (UUID).
          type: string
        ref_id:
          description: The optional client-specified ID (for idempotence).
          type: string
        identity_id:
          description: The Paxos Identity (`identity_id`) of the user's FiatAccount.
          type: string
        account_id:
          description: |-
            The Paxos Account (`account_id`) of the user's FiatAccount.
            Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) initiating transfers on behalf of their end users.
          type: string
        fiat_account_owner:
          $ref: '#/components/schemas/FiatAccountOwner'
        fiat_network_instructions:
          $ref: '#/components/schemas/FiatNetworkInstructions'
        status:
          $ref: '#/components/schemas/FiatAccountStatus'
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be returned.
            Each key and value must be less than or equal to 100 characters.
          type: object
        created_at:
          description: The time at which this FiatAccount was created.
          format: date-time
          type: string
        updated_at:
          description: The time at which this FiatAccount record was most recently
            updated.
          format: date-time
          type: string
      type: object
    FiatAccountOwner:
      example:
        person_details:
          last_name: last_name
          first_name: first_name
        institution_details:
          name: name
      properties:
        person_details:
          $ref: '#/components/schemas/FiatAccountOwnerPersonDetails'
        institution_details:
          $ref: '#/components/schemas/FiatAccountOwnerInstitutionDetails'
      type: object
    FiatAccountStatus:
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      type: string
    FiatDepositInstructions:
      example:
        ref_id: ref_id
        metadata:
          key: metadata
        account_id: account_id
        memo_id: memo_id
        identity_id: identity_id
        profile_id: profile_id
        fiat_network_instructions:
          wire:
            account_number: account_number
            intermediary_routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            fiat_account_owner_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
          cbit:
            wallet_address: wallet_address
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        status: VALID
        fiat_account_owner:
          person_details:
            last_name: last_name
            first_name: first_name
          institution_details:
            name: name
      properties:
        id:
          description: |-
            The Fiat Deposit Instructions ID (`id`) is provided in the response of the [Create Fiat Deposit Instructions](#operation/CreateFiatDepositInstructions).
            Use this ID to retrieve the instructions using [Get Fiat Deposit Instructions](#operation/GetFiatDepositInstructions) & [List Fiat Deposit Instructions](#operation/ListFiatDepositInstructions).
          type: string
        profile_id:
          description: The Profile (`profile_id`) to deposit to.
          type: string
        identity_id:
          description: The Identity (`identity_id`) of the user making the deposit.
          type: string
        account_id:
          description: |-
            The Account (`account_id`) associated with the Identity of the user making the deposit.
            Required only for customers with [3rd-Party integrations](https://docs.paxos.com/crypto-brokerage/ledger-type#fiat-and-crypto-subledger) making deposits on behalf of their end users.
          type: string
        ref_id:
          description: The optional client-specified ID (for idempotence).
          type: string
        status:
          $ref: '#/components/schemas/FiatDepositInstructionsStatus'
        memo_id:
          description: |-
            The string, unique to the request.
            To deposit funds into an account, the memo ID must be provided when initiating a `WIRE` transfer to Paxos.
            This is provided after creating [Fiat Deposit Instructions](#/operation/CreateFiatDepositInstructions)
            The `memo_id` can also be found from either [Get Fiat Deposit Instructions](#operation/GetFiatDepositInstructions) or [List Fiat Deposit Instructions](#operation/ListFiatDepositInstructions) for the corresponding ID (Fiat Deposit Instructions ID).
          type: string
        fiat_network_instructions:
          $ref: '#/components/schemas/FiatNetworkInstructions'
        fiat_account_owner:
          $ref: '#/components/schemas/FiatAccountOwner'
        metadata:
          additionalProperties:
            type: string
          description: Optional client-specified metadata.
          type: object
        created_at:
          description: The time at which these instructions were created.
          format: date-time
          type: string
      required:
      - created_at
      - fiat_network_instructions
      - id
      - identity_id
      - memo_id
      - profile_id
      - status
      type: object
    FiatDepositInstructionsStatus:
      enum:
      - VALID
      - DEPRECATED
      type: string
    FiatNetwork:
      enum:
      - WIRE
      - CBIT
      type: string
    FiatNetworkInstructions:
      example:
        wire:
          account_number: account_number
          intermediary_routing_details:
            routing_number_type: ABA
            bank_name: bank_name
            bank_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
            routing_number: routing_number
          routing_details:
            routing_number_type: ABA
            bank_name: bank_name
            bank_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
            routing_number: routing_number
          fiat_account_owner_address:
            country: country
            province: province
            address2: address2
            city: city
            address1: address1
            zip_code: zip_code
        cbit:
          wallet_address: wallet_address
      properties:
        wire:
          $ref: '#/components/schemas/FiatNetworkInstructionsWire'
        cbit:
          $ref: '#/components/schemas/FiatNetworkInstructionsCbit'
      type: object
    FiatWireAccountType:
      enum:
      - ABA
      - SWIFT
      type: string
    IndividualInfo:
      properties:
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
      type: object
    InitiateSandboxFiatDepositRequest:
      example:
        amount: amount
        memo_id: memo_id
        fiat_network_instructions:
          wire:
            account_number: account_number
            intermediary_routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            routing_details:
              routing_number_type: ABA
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
              routing_number: routing_number
            fiat_account_owner_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
          cbit:
            wallet_address: wallet_address
        asset: asset
        fiat_account_owner:
          person_details:
            last_name: last_name
            first_name: first_name
          institution_details:
            name: name
      properties:
        amount:
          description: The amount to deposit.
          pattern: "^[0-9]*\\.?[0-9]{1,2}$"
          type: string
        asset:
          description: "The asset to deposit. Current supported asset: \"USD\"."
          type: string
        memo_id:
          description: The string that the client must provide in the memo field on
            their deposit to credit their Paxos platform balance.
          type: string
        fiat_network_instructions:
          $ref: '#/components/schemas/FiatNetworkInstructions'
        fiat_account_owner:
          $ref: '#/components/schemas/FiatAccountOwner'
      required:
      - amount
      - asset
      - fiat_network_instructions
      - memo_id
      type: object
    InitiateSandboxFiatDepositResponse:
      type: object
    InstitutionInfo:
      properties:
        institution_name:
          type: string
      required:
      - institution_name
      type: object
    ListDepositAddressesRequestOrderBy:
      description: Query filter order.
      enum:
      - CREATED_AT
      type: string
    ListDepositAddressesResponse:
      example:
        items:
        - id: 34bd61ed-cf0a-4012-8be4-d347667b6154
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
          identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
          ref_id: deposit_address_0
          crypto_network: ETHEREUM
          address: 0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7
          conversion_target_asset: USD
          compatible_crypto_networks:
          - ETHEREUM
          metadata:
            my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
        - id: 34bd61ed-cf0a-4012-8be4-d347667b6154
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
          identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
          ref_id: deposit_address_0
          crypto_network: ETHEREUM
          address: 0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7
          conversion_target_asset: USD
          compatible_crypto_networks:
          - ETHEREUM
          metadata:
            my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/DepositAddress'
          type: array
        next_page_cursor:
          type: string
      type: object
    ListFiatAccountsRequestOrderBy:
      description: Query filter order.
      enum:
      - CREATED_AT
      type: string
    ListFiatAccountsResponse:
      example:
        items:
        - ref_id: ref_id
          metadata:
            key: metadata
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          identity_id: identity_id
          fiat_network_instructions:
            wire:
              account_number: account_number
              intermediary_routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              fiat_account_owner_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            cbit:
              wallet_address: wallet_address
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          fiat_account_owner:
            person_details:
              last_name: last_name
              first_name: first_name
            institution_details:
              name: name
          status: PENDING
        - ref_id: ref_id
          metadata:
            key: metadata
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          identity_id: identity_id
          fiat_network_instructions:
            wire:
              account_number: account_number
              intermediary_routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              fiat_account_owner_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            cbit:
              wallet_address: wallet_address
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          fiat_account_owner:
            person_details:
              last_name: last_name
              first_name: first_name
            institution_details:
              name: name
          status: PENDING
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/FiatAccount'
          type: array
        next_page_cursor:
          type: string
      type: object
    ListFiatDepositInstructionsResponse:
      example:
        items:
        - ref_id: ref_id
          metadata:
            key: metadata
          account_id: account_id
          memo_id: memo_id
          identity_id: identity_id
          profile_id: profile_id
          fiat_network_instructions:
            wire:
              account_number: account_number
              intermediary_routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              fiat_account_owner_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            cbit:
              wallet_address: wallet_address
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          status: VALID
          fiat_account_owner:
            person_details:
              last_name: last_name
              first_name: first_name
            institution_details:
              name: name
        - ref_id: ref_id
          metadata:
            key: metadata
          account_id: account_id
          memo_id: memo_id
          identity_id: identity_id
          profile_id: profile_id
          fiat_network_instructions:
            wire:
              account_number: account_number
              intermediary_routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              routing_details:
                routing_number_type: ABA
                bank_name: bank_name
                bank_address:
                  country: country
                  province: province
                  address2: address2
                  city: city
                  address1: address1
                  zip_code: zip_code
                routing_number: routing_number
              fiat_account_owner_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            cbit:
              wallet_address: wallet_address
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          status: VALID
          fiat_account_owner:
            person_details:
              last_name: last_name
              first_name: first_name
            institution_details:
              name: name
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/FiatDepositInstructions'
          type: array
        next_page_cursor:
          type: string
      type: object
    ListTransferLimitsResponse:
      example:
        items:
        - rule_id: rule_id
          period_seconds: period_seconds
          transfer_types:
          - INTERNAL_TRANSFER_DEBIT
          - INTERNAL_TRANSFER_DEBIT
          limit: limit
          limit_asset: limit_asset
          id: id
          remaining: remaining
        - rule_id: rule_id
          period_seconds: period_seconds
          transfer_types:
          - INTERNAL_TRANSFER_DEBIT
          - INTERNAL_TRANSFER_DEBIT
          limit: limit
          limit_asset: limit_asset
          id: id
          remaining: remaining
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/TransferLimit'
          type: array
        next_page_cursor:
          type: string
      type: object
    ListTransfersRequestOrderBy:
      description: Query filter order.
      enum:
      - CREATED_AT
      - UPDATED_AT
      type: string
    ListTransfersResponse:
      example:
        items:
        - id: f190b163-208f-4d73-8deb-4fb8b24add00
          ref_id: idempotence_id
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          amount: "0.10000000"
          total: "0.10000023"
          fee: "0.00000023"
          asset: BTC
          balance_asset: BTC
          direction: WITHDRAWAL
          type: CRYPTO_WITHDRAWAL
          status: COMPLETED
          created_at: 2020-01-17T18:36:08.737Z
          updated_at: 2020-01-17T18:37:08.737Z
          crypto_network: BITCOIN
          crypto_tx_hash: f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16
          crypto_tx_index: "0"
          destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
          metadata:
            my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
        - id: f190b163-208f-4d73-8deb-4fb8b24add00
          ref_id: idempotence_id
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
          profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
          amount: "0.10000000"
          total: "0.10000023"
          fee: "0.00000023"
          asset: BTC
          balance_asset: BTC
          direction: WITHDRAWAL
          type: CRYPTO_WITHDRAWAL
          status: COMPLETED
          created_at: 2020-01-17T18:36:08.737Z
          updated_at: 2020-01-17T18:37:08.737Z
          crypto_network: BITCOIN
          crypto_tx_hash: f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16
          crypto_tx_index: "0"
          destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
          metadata:
            my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
        next_page_cursor:
          type: string
      type: object
    MailingAddress:
      description: A mailing address.
      example:
        country: country
        province: province
        address2: address2
        city: city
        address1: address1
        zip_code: zip_code
      properties:
        country:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        address1:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        address2:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        city:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        province:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
        zip_code:
          maxLength: 35
          pattern: "^[0-9A-Za-z /?:().,&'+-]+$"
          type: string
      required:
      - country
      type: object
    RejectCryptoDepositResponse:
      type: object
    SecondaryStatus:
      description: "Secondary status for the transfer, used for more granular explanation\
        \ of the transfer status."
      properties:
        name:
          $ref: '#/components/schemas/SecondaryStatusName'
        detail:
          description: Additional information about the current status of the transfer
            (e.g. if information is missing).
          type: string
      type: object
    SecondaryStatusName:
      description: |-
        Identifier for secondary status.

         - TRAVEL_RULE_INFO_REQUESTED: Travel rule information is required to continue processing the transfer.
      enum:
      - TRAVEL_RULE_INFO_REQUESTED
      type: string
    Transfer:
      example:
        id: f190b163-208f-4d73-8deb-4fb8b24add00
        ref_id: idempotence_id
        customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
        profile_id: b7b77d82-e6a7-4ae9-9904-36231aedf985
        amount: "0.10000000"
        total: "0.10000023"
        fee: "0.00000023"
        asset: BTC
        balance_asset: BTC
        direction: WITHDRAWAL
        type: CRYPTO_WITHDRAWAL
        status: COMPLETED
        created_at: 2020-01-17T18:36:08.737Z
        updated_at: 2020-01-17T18:37:08.737Z
        crypto_network: BITCOIN
        crypto_tx_hash: f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16
        crypto_tx_index: "0"
        destination_address: 1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2
        metadata:
          my_id: 4024ee50-eefb-4f2e-85c7-e7899c0b7da5
      properties:
        id:
          description: The Paxos transfer ID.
          type: string
        customer_id:
          description: The Paxos customer ID.
          type: string
        profile_id:
          description: The target Profile of the transfer. The profile asset balance
            is debited or credited by the transfer.
          type: string
        identity_id:
          description: The Paxos ID of the Identity associated with the transfer.
          type: string
        ref_id:
          description: The optional client-specified ID for replay protection and
            lookup.
          type: string
        amount:
          description: The amount sent in the transfer.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        total:
          description: "The balance change from this transfer: amount - fee for deposits,\
            \ and amount + fee for withdrawals. Unsigned."
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        fee:
          description: The fee paid for the transfer.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        asset:
          description: The asset for this transfer. This profile's balance of this
            asset will be debited or credited.
          type: string
        balance_asset:
          description: The balance_asset represents what asset's balance was affected
            at Paxos with this transfer. It only differs from Asset when the transfer
            includes conversion.
          type: string
        direction:
          $ref: '#/components/schemas/TransferDirection'
        type:
          $ref: '#/components/schemas/TransferType'
        status:
          $ref: '#/components/schemas/TransferStatus'
        created_at:
          description: The time at which this transfer record was created.
          format: date-time
          type: string
        updated_at:
          description: The time at which this transfer record was most recently updated.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified stored metadata. For deposit event transfers
            this metadata is copied from the crypto deposit address or fiat deposit
            memo used for attribution.
            Up to 6 key/value pairs may be returned.
            Each key and value must be less than or equal to 100 characters.
          type: object
        destination_address:
          description: The destination crypto address.
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
        crypto_tx_hash:
          description: "For crypto transactions, the on-chain transaction hash."
          type: string
        crypto_tx_index:
          description: "For crypto transactions, the output index or output address."
          type: string
        account_id:
          description: The Paxos ID of the Account associated with the transfer.
          type: string
        auto_conversion:
          $ref: '#/components/schemas/AutoConversion'
        group_id:
          description: Unique identifier linking the debit and credit sides of an
            internal transfer.
          type: string
        fiat_account_id:
          description: "For fiat withdrawals, the Paxos ID of the owner's fiat account\
            \ (UUID)."
          type: string
        secondary_status:
          $ref: '#/components/schemas/SecondaryStatus'
      required:
      - amount
      - asset
      - created_at
      - customer_id
      - direction
      - fee
      - id
      - profile_id
      - status
      - total
      - type
      - updated_at
      type: object
    TransferLimit:
      example:
        rule_id: rule_id
        period_seconds: period_seconds
        transfer_types:
        - INTERNAL_TRANSFER_DEBIT
        - INTERNAL_TRANSFER_DEBIT
        limit: limit
        limit_asset: limit_asset
        id: id
        remaining: remaining
      properties:
        id:
          description: "The ID of the limit. Single-transaction limits will not have\
            \ an id, but only a rule id."
          type: string
        rule_id:
          description: The limit rule this limit applies to.
          type: string
        transfer_types:
          description: "One or more transfer types that the limit applies to, ordered\
            \ alphabetically."
          items:
            $ref: '#/components/schemas/TransferType'
          type: array
        period_seconds:
          description: The number of seconds that the limit is measured over. Single-transaction
            limits have period 0.
          type: string
        limit:
          description: The limit.
          type: string
        remaining:
          description: "The limit, minus any transactions that have been done in the\
            \ period. Single-transaction limits always have remaining set to the limit."
          type: string
        limit_asset:
          description: "The asset that limit and remaining are given in, e.g. \"USD\"\
            , \"BTC\", \"ETH\"."
          type: string
      type: object
    TransferStatus:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      type: string
    TransferType:
      description: Type of transfer.
      enum:
      - INTERNAL_TRANSFER_DEBIT
      - INTERNAL_TRANSFER_CREDIT
      - CRYPTO_DEPOSIT
      - CRYPTO_WITHDRAWAL
      - WIRE_DEPOSIT
      - WIRE_WITHDRAWAL
      - SEN_DEPOSIT
      - SEN_WITHDRAWAL
      - BANK_DEPOSIT
      - BANK_WITHDRAWAL
      - PAXOS_TRANSFER_DEBIT
      - PAXOS_TRANSFER_CREDIT
      - SIGNET_DEPOSIT
      - SIGNET_WITHDRAWAL
      - CBIT_WITHDRAWAL
      - CBIT_DEPOSIT
      type: string
    UpdateCryptoDepositResponse:
      type: object
    CapitalGainType:
      enum:
      - LONG_TERM
      - SHORT_TERM
      - EXEMPT
      type: string
    ListTaxFormRevisionsResponse:
      example:
        tax_form_urls:
        - account_id: account_id
          type: FORM_1099_B
          tax_year: tax_year
          url: url
          revision: revision
        - account_id: account_id
          type: FORM_1099_B
          tax_year: tax_year
          url: url
          revision: revision
      properties:
        tax_form_urls:
          items:
            $ref: '#/components/schemas/TaxFormURL'
          title: List of tax form urls
          type: array
      type: object
    ListTaxFormsRequestOrderBy:
      enum:
      - ID
      type: string
    ListTaxFormsResponse:
      example:
        tax_form_urls:
        - account_id: account_id
          type: FORM_1099_B
          tax_year: tax_year
          url: url
          revision: revision
        - account_id: account_id
          type: FORM_1099_B
          tax_year: tax_year
          url: url
          revision: revision
        next_page_cursor: next_page_cursor
      properties:
        tax_form_urls:
          description: List of tax form URLs. The size shall not exceed `users_limit`
            times `form_types`.
          items:
            $ref: '#/components/schemas/TaxFormURL'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    ListTaxLotsResponse:
      example:
        next_page_cursor: next_page_cursor
        items:
        - transaction_id: transaction_id
          quantity: quantity
          closed_at: 2000-01-23T04:56:07.000+00:00
          capital_gain_type: LONG_TERM
          percentage_capital_gain: percentage_capital_gain
          created_at: 2000-01-23T04:56:07.000+00:00
          fiat_currency: fiat_currency
          cost_basis_per_coin: cost_basis_per_coin
          transaction_type: BUY
          Acquired_at: 2000-01-23T04:56:07.000+00:00
          cryptocurrency: cryptocurrency
          cost_basis: cost_basis
          days_to_long_term: days_to_long_term
          account_id: account_id
          profile_id: profile_id
          id: id
          current_market_value: current_market_value
          capital_gain: capital_gain
          status: OPEN
        - transaction_id: transaction_id
          quantity: quantity
          closed_at: 2000-01-23T04:56:07.000+00:00
          capital_gain_type: LONG_TERM
          percentage_capital_gain: percentage_capital_gain
          created_at: 2000-01-23T04:56:07.000+00:00
          fiat_currency: fiat_currency
          cost_basis_per_coin: cost_basis_per_coin
          transaction_type: BUY
          Acquired_at: 2000-01-23T04:56:07.000+00:00
          cryptocurrency: cryptocurrency
          cost_basis: cost_basis
          days_to_long_term: days_to_long_term
          account_id: account_id
          profile_id: profile_id
          id: id
          current_market_value: current_market_value
          capital_gain: capital_gain
          status: OPEN
      properties:
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
        items:
          description: The result list of tax lots.
          items:
            $ref: '#/components/schemas/TaxLot'
          type: array
      type: object
    TaxFormType:
      enum:
      - FORM_1099_B
      - FORM_1099_MISC
      type: string
    TaxFormURL:
      example:
        account_id: account_id
        type: FORM_1099_B
        tax_year: tax_year
        url: url
        revision: revision
      properties:
        account_id:
          type: string
        type:
          $ref: '#/components/schemas/TaxFormType'
        tax_year:
          type: string
        revision:
          type: string
        url:
          type: string
      type: object
    TaxLot:
      example:
        transaction_id: transaction_id
        quantity: quantity
        closed_at: 2000-01-23T04:56:07.000+00:00
        capital_gain_type: LONG_TERM
        percentage_capital_gain: percentage_capital_gain
        created_at: 2000-01-23T04:56:07.000+00:00
        fiat_currency: fiat_currency
        cost_basis_per_coin: cost_basis_per_coin
        transaction_type: BUY
        Acquired_at: 2000-01-23T04:56:07.000+00:00
        cryptocurrency: cryptocurrency
        cost_basis: cost_basis
        days_to_long_term: days_to_long_term
        account_id: account_id
        profile_id: profile_id
        id: id
        current_market_value: current_market_value
        capital_gain: capital_gain
        status: OPEN
      properties:
        id:
          description: The tax lot ID.
          type: string
        profile_id:
          description: Profile ID.
          type: string
        account_id:
          description: Account ID.
          type: string
        Acquired_at:
          description: The timestamp at which the asset was acquired.
          format: date-time
          type: string
        cryptocurrency:
          description: The currency for numeric fields in Crypto.
          type: string
        fiat_currency:
          description: The currency for numeric fields in Fiat.
          type: string
        cost_basis:
          description: The cost basis.
          type: string
        cost_basis_per_coin:
          description: The cost basis per crypto coin.
          type: string
        quantity:
          description: The quantity of total crypto coins.
          type: string
        transaction_type:
          $ref: '#/components/schemas/TransactionType'
        transaction_id:
          description: Transaction id.
          type: string
        capital_gain:
          description: "The capital gain for the tax lot, estimated with current crypto\
            \ price for open tax lots."
          type: string
        capital_gain_type:
          $ref: '#/components/schemas/CapitalGainType'
        percentage_capital_gain:
          description: The percentage of capital gain over cost basis.
          type: string
        current_market_value:
          description: The current market value calculated by current Crypto price.
          type: string
        days_to_long_term:
          description: The number of days left until capital gain type is LONG_TERM.
            Return 999 if acquisition time is unknown.
          type: string
        status:
          $ref: '#/components/schemas/TaxLotStatus'
        created_at:
          description: The timestamp at which tax lot is created.
          format: date-time
          type: string
        closed_at:
          description: The timestamp at which tax lot is closed.
          format: date-time
          type: string
      type: object
    TaxLotStatus:
      enum:
      - OPEN
      - CLOSED
      type: string
    TransactionType:
      enum:
      - BUY
      - SELL
      - DEPOSIT
      - WITHDRAWAL
      type: string
    taxprotoOrderBy:
      enum:
      - CREATED_AT
      type: string
    CreateStablecoinConversionRequest:
      example:
        ref_id: ref_id
        amount: amount
        metadata:
          key: metadata
        account_id: account_id
        target_asset: target_asset
        identity_id: identity_id
        profile_id: profile_id
        recipient_profile_id: recipient_profile_id
        source_asset: source_asset
      properties:
        profile_id:
          description: The Profile associated with a conversion.
          type: string
        amount:
          description: Asset amount to convert. <a href="/stablecoin/conversion/asset">Details</a>.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        source_asset:
          description: The asset to convert from. <a href="/stablecoin/conversion/asset">Details</a>.
          type: string
        target_asset:
          description: The asset to convert to. <a href="/stablecoin/conversion/asset">Details</a>.
          type: string
        ref_id:
          description: "Client provided, unique Reference ID for lookup and replay\
            \ protection."
          type: string
        identity_id:
          description: |-
            The Identity ID associated with the user requesting the conversion.
            Required only for customers with [3rd-Party integrations](/crypto-brokerage/ledger-type#fiat-and-crypto-subledger).
          type: string
        account_id:
          description: |-
            The Account ID associated with the user requesting the conversion.
            Required only for customers with [3rd-Party integrations](/crypto-brokerage/ledger-type#fiat-and-crypto-subledger).
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Optional client-specified stored metadata.
          type: object
        recipient_profile_id:
          description: "For directed settlement, the receiving side `profile_id`."
          type: string
      required:
      - amount
      - profile_id
      - source_asset
      - target_asset
      type: object
    ListStablecoinConversionsResponse:
      example:
        items:
        - ref_id: ref_id
          cancelled_at: 2000-01-23T04:56:07.000+00:00
          amount: amount
          metadata:
            key: metadata
          identity_id: identity_id
          created_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          target_asset: target_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          profile_id: profile_id
          id: id
          settled_at: 2000-01-23T04:56:07.000+00:00
          source_asset: source_asset
          status: status
        - ref_id: ref_id
          cancelled_at: 2000-01-23T04:56:07.000+00:00
          amount: amount
          metadata:
            key: metadata
          identity_id: identity_id
          created_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          target_asset: target_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          profile_id: profile_id
          id: id
          settled_at: 2000-01-23T04:56:07.000+00:00
          source_asset: source_asset
          status: status
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/StablecoinConversion'
          type: array
        next_page_cursor:
          description: Cursor token required for fetching the next page.
          type: string
      type: object
    StablecoinConversion:
      example:
        ref_id: ref_id
        cancelled_at: 2000-01-23T04:56:07.000+00:00
        amount: amount
        metadata:
          key: metadata
        identity_id: identity_id
        created_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        target_asset: target_asset
        updated_at: 2000-01-23T04:56:07.000+00:00
        profile_id: profile_id
        id: id
        settled_at: 2000-01-23T04:56:07.000+00:00
        source_asset: source_asset
        status: status
      properties:
        id:
          description: |-
            System provided UUID for the conversion is
            provided in the [Create Stablecoin Conversion](#operation/CreateStablecoinConversion) response.

            Required parameter for the
            <a href="#operation/GetStablecoinConversion">Get Stablecoin Conversion</a> request.
          type: string
        profile_id:
          description: |-
            The Profile associated with a conversion. Required in the
            <a href="#operation/CreateStablecoinConversion">Create Stablecoin Conversion</a> request.
          type: string
        amount:
          description: Asset amount to convert. <a href="/stablecoin/conversion/asset">Details</a>.
          type: string
        source_asset:
          description: The asset to convert from. <a href="/stablecoin/conversion/asset">Details</a>.
          type: string
        target_asset:
          description: The asset to convert to. <a href="/stablecoin/conversion/asset">Details</a>.
          type: string
        status:
          description: The current status of the conversion. <a href="/stablecoin/conversion/status">Details</a>.
          type: string
        ref_id:
          description: |-
            Client provided, unique Reference ID included the
            <a href="#operation/CreateStablecoinConversion">Create Stablecoin Conversion</a> request.
          type: string
        identity_id:
          description: |-
            The Identity ID associated with the user requesting the conversion.
            Required only for customers with [3rd-Party integrations](/crypto-brokerage/ledger-type#fiat-and-crypto-subledger).
          type: string
        account_id:
          description: |-
            The Account ID associated with the user requesting the conversion.
            Required only for customers with [3rd-Party integrations](/crypto-brokerage/ledger-type#fiat-and-crypto-subledger).
          type: string
        created_at:
          description: |-
            The time at which the conversion was requested.
            See RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        updated_at:
          description: |-
            The time at which the conversion was last updated.
            RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        settled_at:
          description: |-
            The time at which the conversion was settled.
            <a href="/stablecoin/conversion/status">Details</a>.
            RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        cancelled_at:
          description: |-
            The time at which the conversion has been cancelled.
            <a href="/stablecoin/conversion/status">Details</a>.
            RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Optional client-specified stored metadata.
          type: object
      type: object
    CreateObligationRequest:
      description: Request to create a obligation.
      example:
        amount: amount
        asset: asset
        direction: DELIVER
      properties:
        direction:
          $ref: '#/components/schemas/ObligationDirection'
        asset:
          description: Asset which is obliged.
          type: string
        amount:
          description: Amount of the asset which is obliged.
          type: string
      type: object
    CreateTransactionRequest:
      description: Request to create a bilateral settlement transaction with one or
        more legs.
      example:
        ref_id: ref_id
        source_profile_id: source_profile_id
        settlement_window_start: 2000-01-23T04:56:07.000+00:00
        settlement_window_end: 2000-01-23T04:56:07.000+00:00
        legs:
        - amount: amount
          asset: asset
          direction: DELIVER
        - amount: amount
          asset: asset
          direction: DELIVER
        target_profile_id: target_profile_id
      properties:
        ref_id:
          description: Idempotency key.
          type: string
        settlement_window_start:
          description: |-
            The start of the window which the transaction is eligible for settlement.
            If omitted, transactions are immediately eligible for settlement upon success.
            RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        settlement_window_end:
          description: |-
            The end of the window which the transaction is eligible for settlement.
            Transactions which are not cancelled or settled by this time will expire.
            RFC3339 format, like `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        source_profile_id:
          description: The `profile_id` of the entity submitting the transaction.
          type: string
        target_profile_id:
          description: The `profile_id` of the entity receiving the transaction.
          type: string
        legs:
          description: The obligations (representing one-way asset movements) to be
            settled atomically.
          items:
            $ref: '#/components/schemas/CreateObligationRequest'
          type: array
      type: object
    ListTransactionsResponse:
      example:
        items:
        - id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
          ref_id: d840cf31-352f-4190-a476-7522bf3eafda
          settlement_window_start: 2023-08-25T14:25:41.648486573Z
          settlement_window_end: 2023-08-25T14:25:41.648486953Z
          source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
          target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
          legs:
          - id: ace21517-447e-4764-8733-765cb12a7fab
            direction: DELIVER
            asset: BTC
            amount: "100"
          status: PENDING
          created_at: 2023-08-25T14:25:41.648489333Z
          updated_at: 2023-08-25T14:25:41.648489493Z
        - id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
          ref_id: d840cf31-352f-4190-a476-7522bf3eafda
          settlement_window_start: 2023-08-25T14:25:41.648486573Z
          settlement_window_end: 2023-08-25T14:25:41.648486953Z
          source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
          target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
          legs:
          - id: ace21517-447e-4764-8733-765cb12a7fab
            direction: DELIVER
            asset: BTC
            amount: "100"
          status: PENDING
          created_at: 2023-08-25T14:25:41.648489333Z
          updated_at: 2023-08-25T14:25:41.648489493Z
        next_page_cursor: next_page_cursor
      properties:
        items:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        next_page_cursor:
          type: string
      type: object
    Obligation:
      example:
        id: e7b6892a-00f7-40fb-8871-bdd1eefb6192
        direction: DELIVER
        asset: BTC
        amount: "0.10000000"
      properties:
        id:
          type: string
        direction:
          $ref: '#/components/schemas/ObligationDirection'
        asset:
          description: Asset which is obliged.
          type: string
        amount:
          description: Amount of the asset which is obliged.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
      required:
      - amount
      - asset
      - direction
      - id
      type: object
    ObligationDirection:
      description: |-
        Direction of asset delivery for an obligation.

         - DELIVER: Assets are delivered from the source profile to the target profile.
         - RECEIVE: Assets are delivered from the target profile to the source profile.
      enum:
      - DELIVER
      - RECEIVE
      type: string
    Transaction:
      description: "Transaction returned on create (Create Transaction), list (List\
        \ Transactions) and get (Get Transaction) requests."
      example:
        id: d99a03ee-6b88-4362-89da-087c2c8cd4a7
        ref_id: d840cf31-352f-4190-a476-7522bf3eafda
        settlement_window_start: 2023-08-25T14:25:41.648486573Z
        settlement_window_end: 2023-08-25T14:25:41.648486953Z
        source_profile_id: 4fd025ab-f29f-47e6-a02e-df90a61c7ec9
        target_profile_id: 47db6271-50d6-4934-8c81-c42d87bfb390
        legs:
        - id: ace21517-447e-4764-8733-765cb12a7fab
          direction: DELIVER
          asset: BTC
          amount: "100"
        status: PENDING
        created_at: 2023-08-25T14:25:41.648489333Z
        updated_at: 2023-08-25T14:25:41.648489493Z
      properties:
        id:
          description: The transaction identifier used to query or refer to a specific
            transaction.
          type: string
        ref_id:
          description: Idempotency key.
          type: string
        settlement_window_start:
          description: |-
            The start of the window which the transaction is eligible for settlement.
            If omitted, transactions are immediately eligible for settlement upon success.
            RFC3339 format, like `YYYY-MM-DDTHH:MM:SS.sssZ`. ex: `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        settlement_window_end:
          description: |-
            The end of the window which the transaction is eligible for settlement.
            Transactions which are not cancelled or settled by this time will expire.
            RFC3339 format, like `YYYY-MM-DDTHH:MM:SS.sssZ`. ex: `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
        source_profile_id:
          description: The Profile ID (profile_id) of the entity submitting the transaction.
          type: string
        target_profile_id:
          description: The Profile ID (profile_id) of the entity receiving the transaction.
          type: string
        legs:
          description: The obligations (representing one-way asset movements) to be
            settled atomically.
          items:
            $ref: '#/components/schemas/Obligation'
          type: array
        status:
          $ref: '#/components/schemas/TransactionStatus'
        created_at:
          description: "The timestamp when the transaction was first created, RFC3339\
            \ format, like `YYYY-MM-DDTHH:MM:SS.sssZ`."
          format: date-time
          type: string
        updated_at:
          description: "The timestamp when the transaction was last updated, RFC3339\
            \ format, like `YYYY-MM-DDTHH:MM:SS.sssZ`."
          format: date-time
          type: string
      required:
      - created_at
      - id
      - legs
      - ref_id
      - settlement_window_end
      - settlement_window_start
      - source_profile_id
      - status
      - target_profile_id
      - updated_at
      type: object
    TransactionStatus:
      description: |-
        - PENDING: Initial state of a settlement transaction upon creation.
         - SETTLED: Indicates all obligations belong to the settlement transaction have been enacted.
         - EXPIRED: Indicates the settlement transaction is no longer eligible for settlement.
         - CANCELLED: Indicates the settlement transaction was cancelled by the source profile.
         - AFFIRMED: Indicates the settlement transaction will be eligible for settlement once within the window.
      enum:
      - PENDING
      - SETTLED
      - EXPIRED
      - CANCELLED
      - AFFIRMED
      title: Status of the transaction
      type: string
    GetOrderBookResponse:
      example:
        market: ETHEUR
        asks:
        - amount: amount
          price: price
        - amount: amount
          price: price
        bids:
        - amount: amount
          price: price
        - amount: amount
          price: price
      properties:
        asks:
          description: All Asks.
          items:
            $ref: '#/components/schemas/BookLevel'
          type: array
        bids:
          description: All Bids.
          items:
            $ref: '#/components/schemas/BookLevel'
          type: array
        market:
          $ref: '#/components/schemas/Market'
      type: object
    Problem:
      example:
        meta: "{}"
        detail: Not enough funds in account.
        type: https://api.paxos.com/v2/problems/insufficient_funds
        title: Insufficient Funds
        status: 403
      properties:
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          example: https://api.paxos.com/v2/problems/insufficient_funds
          format: uri
          type: string
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          example: Insufficient Funds
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 403
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Not enough funds in account.
          type: string
        meta:
          description: |
            Additional structured metadata about the error.
          type: object
      type: object
    CreateSandboxDepositRequest:
      example:
        amount: amount
        crypto_network: BITCOIN
        asset: asset
      properties:
        asset:
          description: The kind of asset to deposit.
          type: string
        amount:
          description: The amount to deposit.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        crypto_network:
          $ref: '#/components/schemas/CryptoNetwork'
      required:
      - amount
      - asset
      title: CreateSandboxDepositRequest
      type: object
    DocumentUploadRequest:
      example:
        name: name
        document_types:
        - OTHER_DOCUMENTS
        - OTHER_DOCUMENTS
      properties:
        name:
          description: The file name.
          type: string
        document_types:
          description: A list of document types contained within the uploaded file.
          items:
            $ref: '#/components/schemas/DocumentType'
          type: array
      required:
      - name
      title: DocumentUploadRequest
      type: object
    UpdateIdentityRequest:
      example:
        id: f190b163-208f-4d73-8deb-4fb8b24add00
        person_details:
          first_name: John
      properties:
        person_details:
          $ref: '#/components/schemas/PersonDetails'
        metadata:
          additionalProperties:
            type: string
          title: API User-facing metadata
          type: object
        set_user_disabled:
          description: "`true` disables the identity. `false` re-enables it, unless\
            \ it has been disabled by a Paxos admin."
          type: boolean
        institution_details:
          $ref: '#/components/schemas/InstitutionDetails'
        ref_id:
          description: A user-facing ID to prevent duplicate identity creation. Unique
            for all identities created by the same API user.
          type: string
        tax_details:
          items:
            $ref: '#/components/schemas/TaxDetail'
          title: list of tax details associated with the identity
          type: array
        set_tax_details_not_required:
          description: Set to true if tax details are not legally required.
          type: boolean
        customer_due_diligence:
          $ref: '#/components/schemas/CustomerDueDiligence'
        is_merchant:
          description: Set to true to indicate that this identity is a merchant.
          type: boolean
      title: UpdateIdentityRequest
      type: object
    SandboxSetIdentityStatusRequest:
      example:
        id: f190b163-208f-4d73-8deb-4fb8b24add00
        id_verification_status: APPROVED
        sanctions_verification_status: APPROVED
      properties:
        id_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        sanctions_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        user_disabled:
          $ref: '#/components/schemas/SetDisable'
        admin_disabled:
          $ref: '#/components/schemas/SetDisable'
        document_verification_status:
          $ref: '#/components/schemas/IdentityStatus'
        additional_screening_status:
          $ref: '#/components/schemas/IdentityStatus'
      title: SandboxSetIdentityStatusRequest
      type: object
    Create_Order_Request:
      example:
        side: BUY
        market: ETHUSD
        type: LIMIT
        price: "190.23"
        base_amount: "2.35781498"
        metadata:
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
      properties:
        ref_id:
          description: The idempotence ID for order creation. Can be reused if the
            order has been closed for more than 24 hours.
          type: string
        side:
          $ref: '#/components/schemas/OrderSide'
        market:
          $ref: '#/components/schemas/Market'
        type:
          $ref: '#/components/schemas/OrderType'
        base_amount:
          description: The base currency amount for any limit order or the exact amount
            to sell for a market sell order.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        price:
          description: The quote price.
          type: string
        quote_amount:
          description: The quote currency amount of purchase for a market buy order.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata to store on the quote and created order.
            Up to 6 key/value pairs may be stored, with each key and value at most 100 characters.
          type: object
        await_fill_millis:
          description: |-
            The amount of time to wait for the order to fill, in milliseconds.
            When `await_fill_millis` is set to a non-zero value, the Create Order call does not return immediately on order creation. Instead, the call blocks until either:
              1. The order has filled completely
              2. The time `await_fill_millis` has elapsed
            The maximum wait timeout is 10 seconds (10000 milliseconds).
          format: int64
          maximum: 10000
          type: integer
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        expiration_date:
          description: |-
            The date the order will expire if not completed when specified time in force is GTT.
            Format is a unix timestamp in milliseconds (13-digits) UTC (total milliseconds that have elapsed since January 1st, 1970 UTC).
          format: uint64
          type: string
        identity_id:
          description: "The end user that requests the trade. This field must be used\
            \ in conjunction with `identity_account_id`, otherwise the order is rejected.\
            \ Depending on your integration type, `identity_id` and `identity_account_id`\
            \ may be required."
          type: string
        identity_account_id:
          description: "The account under which this order is placed. The provided\
            \ identity must be allowed to trade on behalf of this account. This field\
            \ must be used in conjunction with `identity_id`, otherwise the order\
            \ is rejected. Depending on your integration type, `identity_account_id`\
            \ and `identity_id` may be required."
          type: string
        stop_price:
          title: The stop price at which a stop order will trigger
          type: string
        recipient_profile_id:
          description: "The profileId that will receive settled currency (base for\
            \ buy orders, quote for sell orders)."
          type: string
        self_match_prevention_id:
          description: |-
            The string field used to prevent matching against an opposite side order submitted by the same Crypto Brokerage customer. If this field is not submitted, an order that matches against another order submitted by the same customer will cancel the original resting order. Up to 36 characters are supported.
            This field requires additional permissions only available to certain accounts. Reach out to your Paxos Representative for more information.
          type: string
      required:
      - market
      - side
      - type
      title: Create Order Request
      type: object
    Create_Quote_Execution_Request:
      example:
        quote_id: 366a26d2-3098-4226-a520-4bb43ae4d922
        quote_amount: "14102.82"
        metadata:
          customer_id: 9b8c9cba-801e-4418-adc0-ede709df6339
      properties:
        quote_id:
          description: The ID of the held Quote for buying or selling some asset.
          type: string
        ref_id:
          description: A unique identifier for the quote execution (for idempotence).
          type: string
        base_amount:
          description: The amount of the base asset (crypto) to buy or sell using
            the specified quote. The maximum precision is 8 decimals.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        quote_amount:
          description: The amount of the quote asset (fiat) to spend or acquire using
            the specified quote. The maximum precision is 2 decimals.
          pattern: "^[0-9]*\\.?[0-9]+$"
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata to store on the quote execution.
            Up to 6 key/value pairs may be stored, with each key and value at most 100 characters.
          type: object
        identity_id:
          description: The end user that requests the quote execution.
          type: string
        account_id:
          description: The account under which this quote execution is placed. The
            provided identity must be allowed to trade on behalf of this account.
          type: string
        recipient_profile_id:
          description: The ID of the profile under which to deposit the funds.
          type: string
      required:
      - quote_id
      title: Create Quote Execution Request
      type: object
    RejectCryptoDepositRequest:
      example:
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
      properties:
        identity_id:
          description: The Identity (`identity_id`) of the end user that requests
            to reject the deposit.
          type: string
      required:
      - identity_id
      title: RejectCryptoDepositRequest
      type: object
    UpdateCryptoDepositRequest:
      example:
        identity_id: 54385e67-d7ef-40d1-b488-ceda6dd9b264
        originator_address_info:
          first_name: John
          last_name: Doe
      properties:
        identity_id:
          description: The Identity (`identity_id`) of the end user updating the deposit.
          type: string
        originator_address_info:
          $ref: '#/components/schemas/AddressInfo'
      required:
      - identity_id
      - originator_address_info
      title: UpdateCryptoDepositRequest
      type: object
    UpdateFiatAccountRequest:
      example:
        metadata:
          key: metadata
        fiat_network_instructions:
          wire:
            intermediary_routing_details:
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            routing_details:
              bank_name: bank_name
              bank_address:
                country: country
                province: province
                address2: address2
                city: city
                address1: address1
                zip_code: zip_code
            fiat_account_owner_address:
              country: country
              province: province
              address2: address2
              city: city
              address1: address1
              zip_code: zip_code
        fiat_account_owner:
          person_details:
            last_name: last_name
            first_name: first_name
          institution_details:
            name: name
      properties:
        fiat_account_owner:
          $ref: '#/components/schemas/FiatAccountOwner'
        fiat_network_instructions:
          $ref: '#/components/schemas/UpdateFiatAccountRequestUpdateFiatNetworkInstructions'
        metadata:
          additionalProperties:
            type: string
          description: |-
            Optional client-specified metadata.
            Up to 6 key/value pairs may be provided.
            Each key and value must be less than or equal to 100 characters.
          type: object
      title: UpdateFiatAccountRequest
      type: object
    UpdateTaxLotRequest:
      example:
        tax_lot:
          transaction_id: transaction_id
          quantity: quantity
          closed_at: 2000-01-23T04:56:07.000+00:00
          capital_gain_type: LONG_TERM
          percentage_capital_gain: percentage_capital_gain
          created_at: 2000-01-23T04:56:07.000+00:00
          fiat_currency: fiat_currency
          cost_basis_per_coin: cost_basis_per_coin
          transaction_type: BUY
          Acquired_at: 2000-01-23T04:56:07.000+00:00
          cryptocurrency: cryptocurrency
          cost_basis: cost_basis
          days_to_long_term: days_to_long_term
          account_id: account_id
          profile_id: profile_id
          id: id
          current_market_value: current_market_value
          capital_gain: capital_gain
          status: OPEN
      properties:
        tax_lot:
          $ref: '#/components/schemas/TaxLot'
      required:
      - tax_lot
      title: UpdateTaxLotRequest
      type: object
  securitySchemes:
    OAuth2:
      description: |
        The Paxos API uses OAuth2.

        All API access is restricted by OAuth2 **scopes**.
        Credentials are created with a set of granted scopes and can only access endpoints permitted for those scopes.

        Every endpoint that requires a scope must be accompanied by an <b>"Authorization"</b> header with a value that follows the following schema: <b>"Bearer ACCESS_TOKEN"</b>

        We have a <a href="https://developer.paxos.com/docs/Paxos_Sandbox_V2_Oauth_Guide.pdf" target="_blank">guide</a> on how to create API credentials and gain an access token to our sandbox environment.
      flows:
        clientCredentials:
          scopes:
            funding:read_profile: Read profile and balance data
            exchange:read_quote: Read quotes and quote history
            exchange:write_quote_execution: Execute on quoted prices
            exchange:read_quote_execution: Read quote executions
            exchange:write_order: Create and Cancel Orders
            exchange:read_order: Read Orders and Executions
            exchange:historical_prices: Read Historical Pricing Data
            transfer:read_transfer: Read deposit and withdrawal transfers
            transfer:read_deposit_address: Read deposit addresses
            transfer:write_deposit_address: Create and manage deposit addresses
            fee:write_crypto_withdrawal_fee: Create crypto withdrawal fees
            transfer:write_crypto_withdrawal: Create crypto withdrawal transfers
            conversion:read_conversion_stablecoin: Retrieve requested or completed
              conversions
            conversion:write_conversion_stablecoin: Create or cancel a conversion
              request
          tokenUrl: https://oauth.paxos.com/oauth2/token
      type: oauth2
x-tagGroups:
- name: Profiles
  tags:
  - Profiles
- name: Trading
  tags:
  - Market Data
  - Orders
  - Quotes
  - Quote Executions
  - Pricing
- name: Settlements
  tags:
  - Settlement
- name: Stablecoin Conversion
  tags:
  - Stablecoin Conversion
- name: Identity
  tags:
  - Identity
  - Institution Members
  - Identity Credentials
  - Accounts
  - Account Members
  - Identity Documents
- name: Sandbox
  tags:
  - Sandbox Deposits
  - Sandbox Identity
  - Sandbox Fiat Transfers
- name: Deposits and Withdrawals
  tags:
  - Transfers
  - Fiat Transfers
  - Deposit Addresses
  - Crypto Deposits
  - Crypto Withdrawals
  - Fees
  - Internal Transfers
  - Limits
- name: Taxes
  tags:
  - Tax Forms
