/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"time"
)

// checks if the CreateTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransactionRequest{}

// CreateTransactionRequest Request to create a bilateral settlement transaction with one or more legs.
type CreateTransactionRequest struct {
	// Idempotency key.
	RefId *string `json:"ref_id,omitempty"`
	// The start of the window which the transaction is eligible for settlement. If omitted, transactions are immediately eligible for settlement upon success. RFC3339 format, like `2006-01-02T15:04:05Z`.
	SettlementWindowStart *time.Time `json:"settlement_window_start,omitempty"`
	// The end of the window which the transaction is eligible for settlement. Transactions which are not cancelled or settled by this time will expire. RFC3339 format, like `2006-01-02T15:04:05Z`.
	SettlementWindowEnd *time.Time `json:"settlement_window_end,omitempty"`
	// The `profile_id` of the entity submitting the transaction.
	SourceProfileId *string `json:"source_profile_id,omitempty"`
	// The `profile_id` of the entity receiving the transaction.
	TargetProfileId *string `json:"target_profile_id,omitempty"`
	// The obligations (representing one-way asset movements) to be settled atomically.
	Legs []CreateObligationRequest `json:"legs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateTransactionRequest CreateTransactionRequest

// NewCreateTransactionRequest instantiates a new CreateTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransactionRequest() *CreateTransactionRequest {
	this := CreateTransactionRequest{}
	return &this
}

// NewCreateTransactionRequestWithDefaults instantiates a new CreateTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransactionRequestWithDefaults() *CreateTransactionRequest {
	this := CreateTransactionRequest{}
	return &this
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *CreateTransactionRequest) SetRefId(v string) {
	o.RefId = &v
}

// GetSettlementWindowStart returns the SettlementWindowStart field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetSettlementWindowStart() time.Time {
	if o == nil || IsNil(o.SettlementWindowStart) {
		var ret time.Time
		return ret
	}
	return *o.SettlementWindowStart
}

// GetSettlementWindowStartOk returns a tuple with the SettlementWindowStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetSettlementWindowStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SettlementWindowStart) {
		return nil, false
	}
	return o.SettlementWindowStart, true
}

// HasSettlementWindowStart returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasSettlementWindowStart() bool {
	if o != nil && !IsNil(o.SettlementWindowStart) {
		return true
	}

	return false
}

// SetSettlementWindowStart gets a reference to the given time.Time and assigns it to the SettlementWindowStart field.
func (o *CreateTransactionRequest) SetSettlementWindowStart(v time.Time) {
	o.SettlementWindowStart = &v
}

// GetSettlementWindowEnd returns the SettlementWindowEnd field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetSettlementWindowEnd() time.Time {
	if o == nil || IsNil(o.SettlementWindowEnd) {
		var ret time.Time
		return ret
	}
	return *o.SettlementWindowEnd
}

// GetSettlementWindowEndOk returns a tuple with the SettlementWindowEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetSettlementWindowEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SettlementWindowEnd) {
		return nil, false
	}
	return o.SettlementWindowEnd, true
}

// HasSettlementWindowEnd returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasSettlementWindowEnd() bool {
	if o != nil && !IsNil(o.SettlementWindowEnd) {
		return true
	}

	return false
}

// SetSettlementWindowEnd gets a reference to the given time.Time and assigns it to the SettlementWindowEnd field.
func (o *CreateTransactionRequest) SetSettlementWindowEnd(v time.Time) {
	o.SettlementWindowEnd = &v
}

// GetSourceProfileId returns the SourceProfileId field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetSourceProfileId() string {
	if o == nil || IsNil(o.SourceProfileId) {
		var ret string
		return ret
	}
	return *o.SourceProfileId
}

// GetSourceProfileIdOk returns a tuple with the SourceProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetSourceProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceProfileId) {
		return nil, false
	}
	return o.SourceProfileId, true
}

// HasSourceProfileId returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasSourceProfileId() bool {
	if o != nil && !IsNil(o.SourceProfileId) {
		return true
	}

	return false
}

// SetSourceProfileId gets a reference to the given string and assigns it to the SourceProfileId field.
func (o *CreateTransactionRequest) SetSourceProfileId(v string) {
	o.SourceProfileId = &v
}

// GetTargetProfileId returns the TargetProfileId field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetTargetProfileId() string {
	if o == nil || IsNil(o.TargetProfileId) {
		var ret string
		return ret
	}
	return *o.TargetProfileId
}

// GetTargetProfileIdOk returns a tuple with the TargetProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetTargetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetProfileId) {
		return nil, false
	}
	return o.TargetProfileId, true
}

// HasTargetProfileId returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasTargetProfileId() bool {
	if o != nil && !IsNil(o.TargetProfileId) {
		return true
	}

	return false
}

// SetTargetProfileId gets a reference to the given string and assigns it to the TargetProfileId field.
func (o *CreateTransactionRequest) SetTargetProfileId(v string) {
	o.TargetProfileId = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *CreateTransactionRequest) GetLegs() []CreateObligationRequest {
	if o == nil || IsNil(o.Legs) {
		var ret []CreateObligationRequest
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactionRequest) GetLegsOk() ([]CreateObligationRequest, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *CreateTransactionRequest) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []CreateObligationRequest and assigns it to the Legs field.
func (o *CreateTransactionRequest) SetLegs(v []CreateObligationRequest) {
	o.Legs = v
}

func (o CreateTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	if !IsNil(o.SettlementWindowStart) {
		toSerialize["settlement_window_start"] = o.SettlementWindowStart
	}
	if !IsNil(o.SettlementWindowEnd) {
		toSerialize["settlement_window_end"] = o.SettlementWindowEnd
	}
	if !IsNil(o.SourceProfileId) {
		toSerialize["source_profile_id"] = o.SourceProfileId
	}
	if !IsNil(o.TargetProfileId) {
		toSerialize["target_profile_id"] = o.TargetProfileId
	}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateTransactionRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateTransactionRequest := _CreateTransactionRequest{}

	err = json.Unmarshal(data, &varCreateTransactionRequest)

	if err != nil {
		return err
	}

	*o = CreateTransactionRequest(varCreateTransactionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ref_id")
		delete(additionalProperties, "settlement_window_start")
		delete(additionalProperties, "settlement_window_end")
		delete(additionalProperties, "source_profile_id")
		delete(additionalProperties, "target_profile_id")
		delete(additionalProperties, "legs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateTransactionRequest struct {
	value *CreateTransactionRequest
	isSet bool
}

func (v NullableCreateTransactionRequest) Get() *CreateTransactionRequest {
	return v.value
}

func (v *NullableCreateTransactionRequest) Set(val *CreateTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransactionRequest(val *CreateTransactionRequest) *NullableCreateTransactionRequest {
	return &NullableCreateTransactionRequest{value: val, isSet: true}
}

func (v NullableCreateTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


