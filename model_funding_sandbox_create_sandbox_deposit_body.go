/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"fmt"
)

// checks if the FundingSandboxCreateSandboxDepositBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FundingSandboxCreateSandboxDepositBody{}

// FundingSandboxCreateSandboxDepositBody struct for FundingSandboxCreateSandboxDepositBody
type FundingSandboxCreateSandboxDepositBody struct {
	// The kind of asset to deposit.
	Asset string `json:"asset"`
	// The amount to deposit.
	Amount string `json:"amount" validate:"regexp=^[0-9]*\\\\.?[0-9]+$"`
	CryptoNetwork *CryptoNetwork `json:"crypto_network,omitempty"`
	CryptoAddress *string `json:"crypto_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FundingSandboxCreateSandboxDepositBody FundingSandboxCreateSandboxDepositBody

// NewFundingSandboxCreateSandboxDepositBody instantiates a new FundingSandboxCreateSandboxDepositBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundingSandboxCreateSandboxDepositBody(asset string, amount string) *FundingSandboxCreateSandboxDepositBody {
	this := FundingSandboxCreateSandboxDepositBody{}
	this.Asset = asset
	this.Amount = amount
	return &this
}

// NewFundingSandboxCreateSandboxDepositBodyWithDefaults instantiates a new FundingSandboxCreateSandboxDepositBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundingSandboxCreateSandboxDepositBodyWithDefaults() *FundingSandboxCreateSandboxDepositBody {
	this := FundingSandboxCreateSandboxDepositBody{}
	return &this
}

// GetAsset returns the Asset field value
func (o *FundingSandboxCreateSandboxDepositBody) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *FundingSandboxCreateSandboxDepositBody) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *FundingSandboxCreateSandboxDepositBody) SetAsset(v string) {
	o.Asset = v
}

// GetAmount returns the Amount field value
func (o *FundingSandboxCreateSandboxDepositBody) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *FundingSandboxCreateSandboxDepositBody) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *FundingSandboxCreateSandboxDepositBody) SetAmount(v string) {
	o.Amount = v
}

// GetCryptoNetwork returns the CryptoNetwork field value if set, zero value otherwise.
func (o *FundingSandboxCreateSandboxDepositBody) GetCryptoNetwork() CryptoNetwork {
	if o == nil || IsNil(o.CryptoNetwork) {
		var ret CryptoNetwork
		return ret
	}
	return *o.CryptoNetwork
}

// GetCryptoNetworkOk returns a tuple with the CryptoNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundingSandboxCreateSandboxDepositBody) GetCryptoNetworkOk() (*CryptoNetwork, bool) {
	if o == nil || IsNil(o.CryptoNetwork) {
		return nil, false
	}
	return o.CryptoNetwork, true
}

// HasCryptoNetwork returns a boolean if a field has been set.
func (o *FundingSandboxCreateSandboxDepositBody) HasCryptoNetwork() bool {
	if o != nil && !IsNil(o.CryptoNetwork) {
		return true
	}

	return false
}

// SetCryptoNetwork gets a reference to the given CryptoNetwork and assigns it to the CryptoNetwork field.
func (o *FundingSandboxCreateSandboxDepositBody) SetCryptoNetwork(v CryptoNetwork) {
	o.CryptoNetwork = &v
}

// GetCryptoAddress returns the CryptoAddress field value if set, zero value otherwise.
func (o *FundingSandboxCreateSandboxDepositBody) GetCryptoAddress() string {
	if o == nil || IsNil(o.CryptoAddress) {
		var ret string
		return ret
	}
	return *o.CryptoAddress
}

// GetCryptoAddressOk returns a tuple with the CryptoAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundingSandboxCreateSandboxDepositBody) GetCryptoAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoAddress) {
		return nil, false
	}
	return o.CryptoAddress, true
}

// HasCryptoAddress returns a boolean if a field has been set.
func (o *FundingSandboxCreateSandboxDepositBody) HasCryptoAddress() bool {
	if o != nil && !IsNil(o.CryptoAddress) {
		return true
	}

	return false
}

// SetCryptoAddress gets a reference to the given string and assigns it to the CryptoAddress field.
func (o *FundingSandboxCreateSandboxDepositBody) SetCryptoAddress(v string) {
	o.CryptoAddress = &v
}

func (o FundingSandboxCreateSandboxDepositBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FundingSandboxCreateSandboxDepositBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset"] = o.Asset
	toSerialize["amount"] = o.Amount
	if !IsNil(o.CryptoNetwork) {
		toSerialize["crypto_network"] = o.CryptoNetwork
	}
	if !IsNil(o.CryptoAddress) {
		toSerialize["crypto_address"] = o.CryptoAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FundingSandboxCreateSandboxDepositBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFundingSandboxCreateSandboxDepositBody := _FundingSandboxCreateSandboxDepositBody{}

	err = json.Unmarshal(data, &varFundingSandboxCreateSandboxDepositBody)

	if err != nil {
		return err
	}

	*o = FundingSandboxCreateSandboxDepositBody(varFundingSandboxCreateSandboxDepositBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asset")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "crypto_network")
		delete(additionalProperties, "crypto_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFundingSandboxCreateSandboxDepositBody struct {
	value *FundingSandboxCreateSandboxDepositBody
	isSet bool
}

func (v NullableFundingSandboxCreateSandboxDepositBody) Get() *FundingSandboxCreateSandboxDepositBody {
	return v.value
}

func (v *NullableFundingSandboxCreateSandboxDepositBody) Set(val *FundingSandboxCreateSandboxDepositBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFundingSandboxCreateSandboxDepositBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFundingSandboxCreateSandboxDepositBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundingSandboxCreateSandboxDepositBody(val *FundingSandboxCreateSandboxDepositBody) *NullableFundingSandboxCreateSandboxDepositBody {
	return &NullableFundingSandboxCreateSandboxDepositBody{value: val, isSet: true}
}

func (v NullableFundingSandboxCreateSandboxDepositBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundingSandboxCreateSandboxDepositBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


