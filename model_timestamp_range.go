/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"time"
)

// checks if the TimestampRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimestampRange{}

// TimestampRange struct for TimestampRange
type TimestampRange struct {
	// Only return records after this timestamp, inclusive. RFC3339 format, like `2006-01-02T15:04:05Z`.
	Begin *time.Time `json:"begin,omitempty"`
	// Only return records before this timestamp, inclusive. RFC3339 format, like `2006-01-02T15:04:05Z`.
	End *time.Time `json:"end,omitempty"`
}

// NewTimestampRange instantiates a new TimestampRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimestampRange() *TimestampRange {
	this := TimestampRange{}
	return &this
}

// NewTimestampRangeWithDefaults instantiates a new TimestampRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimestampRangeWithDefaults() *TimestampRange {
	this := TimestampRange{}
	return &this
}

// GetBegin returns the Begin field value if set, zero value otherwise.
func (o *TimestampRange) GetBegin() time.Time {
	if o == nil || IsNil(o.Begin) {
		var ret time.Time
		return ret
	}
	return *o.Begin
}

// GetBeginOk returns a tuple with the Begin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimestampRange) GetBeginOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Begin) {
		return nil, false
	}
	return o.Begin, true
}

// HasBegin returns a boolean if a field has been set.
func (o *TimestampRange) HasBegin() bool {
	if o != nil && !IsNil(o.Begin) {
		return true
	}

	return false
}

// SetBegin gets a reference to the given time.Time and assigns it to the Begin field.
func (o *TimestampRange) SetBegin(v time.Time) {
	o.Begin = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *TimestampRange) GetEnd() time.Time {
	if o == nil || IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimestampRange) GetEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *TimestampRange) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *TimestampRange) SetEnd(v time.Time) {
	o.End = &v
}

func (o TimestampRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimestampRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Begin) {
		toSerialize["begin"] = o.Begin
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	return toSerialize, nil
}

type NullableTimestampRange struct {
	value *TimestampRange
	isSet bool
}

func (v NullableTimestampRange) Get() *TimestampRange {
	return v.value
}

func (v *NullableTimestampRange) Set(val *TimestampRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTimestampRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTimestampRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimestampRange(val *TimestampRange) *NullableTimestampRange {
	return &NullableTimestampRange{value: val, isSet: true}
}

func (v NullableTimestampRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimestampRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


