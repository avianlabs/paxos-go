/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"fmt"
)

// checks if the SetVerifierCredentialsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetVerifierCredentialsRequest{}

// SetVerifierCredentialsRequest struct for SetVerifierCredentialsRequest
type SetVerifierCredentialsRequest struct {
	VerifierType IdentityprotoVerifierType `json:"verifier_type"`
	AuthToken *string `json:"auth_token,omitempty"`
	AuthSecret *string `json:"auth_secret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SetVerifierCredentialsRequest SetVerifierCredentialsRequest

// NewSetVerifierCredentialsRequest instantiates a new SetVerifierCredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetVerifierCredentialsRequest(verifierType IdentityprotoVerifierType) *SetVerifierCredentialsRequest {
	this := SetVerifierCredentialsRequest{}
	this.VerifierType = verifierType
	return &this
}

// NewSetVerifierCredentialsRequestWithDefaults instantiates a new SetVerifierCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetVerifierCredentialsRequestWithDefaults() *SetVerifierCredentialsRequest {
	this := SetVerifierCredentialsRequest{}
	return &this
}

// GetVerifierType returns the VerifierType field value
func (o *SetVerifierCredentialsRequest) GetVerifierType() IdentityprotoVerifierType {
	if o == nil {
		var ret IdentityprotoVerifierType
		return ret
	}

	return o.VerifierType
}

// GetVerifierTypeOk returns a tuple with the VerifierType field value
// and a boolean to check if the value has been set.
func (o *SetVerifierCredentialsRequest) GetVerifierTypeOk() (*IdentityprotoVerifierType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerifierType, true
}

// SetVerifierType sets field value
func (o *SetVerifierCredentialsRequest) SetVerifierType(v IdentityprotoVerifierType) {
	o.VerifierType = v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *SetVerifierCredentialsRequest) GetAuthToken() string {
	if o == nil || IsNil(o.AuthToken) {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetVerifierCredentialsRequest) GetAuthTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AuthToken) {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *SetVerifierCredentialsRequest) HasAuthToken() bool {
	if o != nil && !IsNil(o.AuthToken) {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *SetVerifierCredentialsRequest) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetAuthSecret returns the AuthSecret field value if set, zero value otherwise.
func (o *SetVerifierCredentialsRequest) GetAuthSecret() string {
	if o == nil || IsNil(o.AuthSecret) {
		var ret string
		return ret
	}
	return *o.AuthSecret
}

// GetAuthSecretOk returns a tuple with the AuthSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetVerifierCredentialsRequest) GetAuthSecretOk() (*string, bool) {
	if o == nil || IsNil(o.AuthSecret) {
		return nil, false
	}
	return o.AuthSecret, true
}

// HasAuthSecret returns a boolean if a field has been set.
func (o *SetVerifierCredentialsRequest) HasAuthSecret() bool {
	if o != nil && !IsNil(o.AuthSecret) {
		return true
	}

	return false
}

// SetAuthSecret gets a reference to the given string and assigns it to the AuthSecret field.
func (o *SetVerifierCredentialsRequest) SetAuthSecret(v string) {
	o.AuthSecret = &v
}

func (o SetVerifierCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetVerifierCredentialsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verifier_type"] = o.VerifierType
	if !IsNil(o.AuthToken) {
		toSerialize["auth_token"] = o.AuthToken
	}
	if !IsNil(o.AuthSecret) {
		toSerialize["auth_secret"] = o.AuthSecret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetVerifierCredentialsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"verifier_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetVerifierCredentialsRequest := _SetVerifierCredentialsRequest{}

	err = json.Unmarshal(data, &varSetVerifierCredentialsRequest)

	if err != nil {
		return err
	}

	*o = SetVerifierCredentialsRequest(varSetVerifierCredentialsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "verifier_type")
		delete(additionalProperties, "auth_token")
		delete(additionalProperties, "auth_secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetVerifierCredentialsRequest struct {
	value *SetVerifierCredentialsRequest
	isSet bool
}

func (v NullableSetVerifierCredentialsRequest) Get() *SetVerifierCredentialsRequest {
	return v.value
}

func (v *NullableSetVerifierCredentialsRequest) Set(val *SetVerifierCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetVerifierCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetVerifierCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetVerifierCredentialsRequest(val *SetVerifierCredentialsRequest) *NullableSetVerifierCredentialsRequest {
	return &NullableSetVerifierCredentialsRequest{value: val, isSet: true}
}

func (v NullableSetVerifierCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetVerifierCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


