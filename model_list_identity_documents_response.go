/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
)

// checks if the ListIdentityDocumentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIdentityDocumentsResponse{}

// ListIdentityDocumentsResponse struct for ListIdentityDocumentsResponse
type ListIdentityDocumentsResponse struct {
	Documents []DocumentDescription `json:"documents,omitempty"`
	PendingDocuments []DocumentType `json:"pending_documents,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListIdentityDocumentsResponse ListIdentityDocumentsResponse

// NewListIdentityDocumentsResponse instantiates a new ListIdentityDocumentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIdentityDocumentsResponse() *ListIdentityDocumentsResponse {
	this := ListIdentityDocumentsResponse{}
	return &this
}

// NewListIdentityDocumentsResponseWithDefaults instantiates a new ListIdentityDocumentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIdentityDocumentsResponseWithDefaults() *ListIdentityDocumentsResponse {
	this := ListIdentityDocumentsResponse{}
	return &this
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *ListIdentityDocumentsResponse) GetDocuments() []DocumentDescription {
	if o == nil || IsNil(o.Documents) {
		var ret []DocumentDescription
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentityDocumentsResponse) GetDocumentsOk() ([]DocumentDescription, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *ListIdentityDocumentsResponse) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []DocumentDescription and assigns it to the Documents field.
func (o *ListIdentityDocumentsResponse) SetDocuments(v []DocumentDescription) {
	o.Documents = v
}

// GetPendingDocuments returns the PendingDocuments field value if set, zero value otherwise.
func (o *ListIdentityDocumentsResponse) GetPendingDocuments() []DocumentType {
	if o == nil || IsNil(o.PendingDocuments) {
		var ret []DocumentType
		return ret
	}
	return o.PendingDocuments
}

// GetPendingDocumentsOk returns a tuple with the PendingDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentityDocumentsResponse) GetPendingDocumentsOk() ([]DocumentType, bool) {
	if o == nil || IsNil(o.PendingDocuments) {
		return nil, false
	}
	return o.PendingDocuments, true
}

// HasPendingDocuments returns a boolean if a field has been set.
func (o *ListIdentityDocumentsResponse) HasPendingDocuments() bool {
	if o != nil && !IsNil(o.PendingDocuments) {
		return true
	}

	return false
}

// SetPendingDocuments gets a reference to the given []DocumentType and assigns it to the PendingDocuments field.
func (o *ListIdentityDocumentsResponse) SetPendingDocuments(v []DocumentType) {
	o.PendingDocuments = v
}

func (o ListIdentityDocumentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIdentityDocumentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	if !IsNil(o.PendingDocuments) {
		toSerialize["pending_documents"] = o.PendingDocuments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListIdentityDocumentsResponse) UnmarshalJSON(data []byte) (err error) {
	varListIdentityDocumentsResponse := _ListIdentityDocumentsResponse{}

	err = json.Unmarshal(data, &varListIdentityDocumentsResponse)

	if err != nil {
		return err
	}

	*o = ListIdentityDocumentsResponse(varListIdentityDocumentsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "documents")
		delete(additionalProperties, "pending_documents")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListIdentityDocumentsResponse struct {
	value *ListIdentityDocumentsResponse
	isSet bool
}

func (v NullableListIdentityDocumentsResponse) Get() *ListIdentityDocumentsResponse {
	return v.value
}

func (v *NullableListIdentityDocumentsResponse) Set(val *ListIdentityDocumentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIdentityDocumentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIdentityDocumentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIdentityDocumentsResponse(val *ListIdentityDocumentsResponse) *NullableListIdentityDocumentsResponse {
	return &NullableListIdentityDocumentsResponse{value: val, isSet: true}
}

func (v NullableListIdentityDocumentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIdentityDocumentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


