/*
Paxos API

<p>Welcome to Paxos APIs. At Paxos, our mission is to enable the movement of any asset, any time, in a trustworthy way. These APIs serve that mission by making it easier than ever for you to directly integrate our product capabilities into your application, leveraging the speed, stability, and security of the Paxos platform.</p> <p>The documentation that follows gives you access to our Crypto Brokerage, Trading, and Exchange products. It includes APIs for market data, orders, and the held rate quote flow.</p> <p>To test in our sandbox environment, <a href=\"https://account.sandbox.paxos.com\" target=\"_blank\">sign up</a> for an account. For more information about Paxos and our APIs, visit <a href=\"https://www.paxos.com/\" target=\"_blank\">Paxos.com</a>.</p> 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paxos

import (
	"encoding/json"
	"fmt"
)

// checks if the UpdateAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAccountRequest{}

// UpdateAccountRequest struct for UpdateAccountRequest
type UpdateAccountRequest struct {
	Account Account `json:"account"`
	// true if the account is required to be disabled by the API user.
	SetUserDisabled *bool `json:"set_user_disabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateAccountRequest UpdateAccountRequest

// NewUpdateAccountRequest instantiates a new UpdateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountRequest(account Account) *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	this.Account = account
	return &this
}

// NewUpdateAccountRequestWithDefaults instantiates a new UpdateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountRequestWithDefaults() *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	return &this
}

// GetAccount returns the Account field value
func (o *UpdateAccountRequest) GetAccount() Account {
	if o == nil {
		var ret Account
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetAccountOk() (*Account, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *UpdateAccountRequest) SetAccount(v Account) {
	o.Account = v
}

// GetSetUserDisabled returns the SetUserDisabled field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetSetUserDisabled() bool {
	if o == nil || IsNil(o.SetUserDisabled) {
		var ret bool
		return ret
	}
	return *o.SetUserDisabled
}

// GetSetUserDisabledOk returns a tuple with the SetUserDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetSetUserDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SetUserDisabled) {
		return nil, false
	}
	return o.SetUserDisabled, true
}

// HasSetUserDisabled returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasSetUserDisabled() bool {
	if o != nil && !IsNil(o.SetUserDisabled) {
		return true
	}

	return false
}

// SetSetUserDisabled gets a reference to the given bool and assigns it to the SetUserDisabled field.
func (o *UpdateAccountRequest) SetSetUserDisabled(v bool) {
	o.SetUserDisabled = &v
}

func (o UpdateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	if !IsNil(o.SetUserDisabled) {
		toSerialize["set_user_disabled"] = o.SetUserDisabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAccountRequest := _UpdateAccountRequest{}

	err = json.Unmarshal(data, &varUpdateAccountRequest)

	if err != nil {
		return err
	}

	*o = UpdateAccountRequest(varUpdateAccountRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "set_user_disabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateAccountRequest struct {
	value *UpdateAccountRequest
	isSet bool
}

func (v NullableUpdateAccountRequest) Get() *UpdateAccountRequest {
	return v.value
}

func (v *NullableUpdateAccountRequest) Set(val *UpdateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountRequest(val *UpdateAccountRequest) *NullableUpdateAccountRequest {
	return &NullableUpdateAccountRequest{value: val, isSet: true}
}

func (v NullableUpdateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


